// Do my imports
var express = require('express');  
var app = express();

var server = require('http').createServer(app)
  , io = require('socket.io').listen(server);

var config = require('./config.js')(app, express);
var moment = require('moment');


// Set up socket.io client
var hostname = require('os').hostname();
var portfinder = require('portfinder');
var port;

portfinder.getPort(function (err, tport) {
	server.listen(tport);
     port = tport;
});
  


io.sockets.on('connection', function (socket) {
  socket.emit('news', { hello: 'world' });
  console.log('sent hello world');
  socket.on('my other event', function (data) {
    console.log(data);
  });
});


// Set up database connections
var mongoose = require('mongoose');

//mongoose.connect('mongodb://nodejitsu:be4d8fdcd8f572b2cbea53acc213eae1@paulo.mongohq.com:10030/nodejitsudb430192188');
//mongoose.connect('mongodb://nodejitsu:e24c1205f87356c25a2869715153e7bb@paulo.mongohq.com:10029/nodejitsudb96122706');

mongoose.connect('mongodb://localhost/${schema}');


// Set up models
var models = {};
models = require('./${version}/models/models')(mongoose);
#foreach ($v in $versions)
require('./${v}/models/testdata1')(mongoose, models, moment);
require('./${v}/models/testdata2')(mongoose, models, moment);
require('./${v}/routes/routes')(app, mongoose, models);
#end


// Set up sockets
#foreach ($v in $versions)
require('./${v}/sockets/socketserver')(io, server, models)
#end

// Entry page
app.get('/', function(req, res){
  res.render('index.jade', {
    title: 'Model-Driven Node: Reference Implementation'
  });
});

#foreach ($v in $versions)
// Schema Entry page
app.get('/${v}', function(req, res){
  res.render('index', {
    title: 'Model-Driven Node: Reference Implementation'
  });
});
#end

// API page
app.get('/${version}/Api/Current', function(req, res){
  res.render('api.jade', {
    titleGet: 'REST GET API',
    titlePost: 'REST POST API',
    apisget: app.routes.get,
    apispost: app.routes.post
  });
});

console.log("port=" + port);

// socket client
#foreach ($v in $versions)
app.get('/${v}/Socket', function(req, res) {
  res.writeHead(200, {'Content-Type': 'text/html'});
  res.write('<html><body>');
  res.write('<script src="http://localhost:');
  res.write(port);
  res.write('/socket.io/socket.io.js"></script>');
  res.write('<script>');
  res.write('var socket = io.connect("http://localhost:');
  console.log('lport=' + port);
  res.write(port);
  res.write('");');
  //res.write('socket.on("news", function (data) {');
  //res.write('console.log(data);');
  //res.write('socket.emit("my other event", { my: "data" });');
  //res.write('});');
  res.write('</script>');  
  res.write('</body></html>');
  res.end();
});
#end

app.listen(process.env.PORT || 3000);
