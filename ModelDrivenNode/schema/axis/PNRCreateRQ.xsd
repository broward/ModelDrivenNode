<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<xsd:include schemaLocation="CommonTypes.xsd"/>
	<xsd:element name="PNRCreateRQ">
		<xsd:annotation>
			<xsd:documentation>PNR create request root element</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<!--xsd:element ref="FlightPassGroup" minOccurs="0"/-->
				<xsd:element ref="SaleInfo" minOccurs="0"/>
				<xsd:element ref="TicketingInfo" minOccurs="0"/>
				<xsd:element ref="MoveFromProfile" minOccurs="0"/>
				<xsd:element ref="CompletePNRElements" minOccurs="0"/>
				<xsd:element ref="OtherPNRElements" minOccurs="0"/>
				<xsd:element ref="PricingInfo" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="Display" minOccurs="0"/>
				<xsd:element ref="EndTransaction" minOccurs="0"/>
				<xsd:element ref="RecordLocator" minOccurs="0"/>
				<xsd:element ref="InExchangeForTicket" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="version" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>Version number.  Example: 1.0</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="RedisplayPNR" use="optional">
				<xsd:annotation>
					<xsd:documentation>Attribute used when the PNR Creation is done during a sessioned process. Indicates if the PNR has to be redisplayed after each message sent during an opened session. If attribute omitted or RedisplayPNR = "Y", PNR will be redisplayed with each response. If RedisplayPNR = "N", the PNR will not be redisplayed after each entry and a simple Info text with an * in it will indicate the successfull entry. Error message will be displayed if an error occurs for the entry.</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:length value="1"/>
						<xsd:enumeration value="N"/>
						<xsd:enumeration value="Y"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="UpdateFareGroups" use="optional" default="Y">
				<xsd:annotation>
					<xsd:documentation>Switch to disable fare validation and update functionality. This includes deletion of fares with invalid segment references (occurs on Apollo, Sabre and Worldspan) and (in the future) attempt to reprice and restore fares which have been rendered invalid by segment reordering. Values are: Y = Yes, N = No (Default is Yes). Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:length value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="IgnoreWarning">
				<xsd:annotation>
					<xsd:documentation>This attribute is set in response to a previously returned Warning and after the user confirm the continuation of said transaction.

Only value allowed is 'Y'.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="SaleInfo">
		<xsd:annotation>
			<xsd:documentation>Point of Sale information</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="CityCode" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Point of Sale City Code 
Example: BOS</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="CountryCode" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Point of Sale Country Code 
Example: US</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="CurrencyCode" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Point of Sale Currency Code
Example: USD</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Identification" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CityCode">
		<xsd:annotation>
			<xsd:documentation>City code.  Example: MIA</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Country">
		<xsd:annotation>
			<xsd:documentation>Country.  Example: USA</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="SplitItemLine" type="xsd:integer" use="optional">
						<xsd:annotation>
							<xsd:documentation>Allows to specify how to group address items when SplitItems attribut is at Yes. All items with the same SplitItemLine value will be created in the same address element in the GDS. Example: 1</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="TicketingInfo">
		<xsd:annotation>
			<xsd:documentation>Ticketing information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="CityCode" minOccurs="0"/>
				<xsd:element ref="CountryCode" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Itinerary">
		<xsd:annotation>
			<xsd:documentation>Itinerary information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Flight" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="Car" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="Hotel" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="Miscellaneous" minOccurs="0"/>
				<xsd:element ref="Insurance" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Flight">
		<xsd:annotation>
			<xsd:documentation>Flight group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Departure"/>
				<xsd:element ref="Arrival"/>
				<xsd:element ref="Carrier"/>
				<xsd:element ref="ClassOfService"/>
				<xsd:element ref="NumberInParty"/>
				<xsd:element ref="ActionCode" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Action code for the sell of a segment.  This a standard defined action code used by different airlines and reservation systems.  If omitted the default value is NN. 

NOTE: For passive segments (Flight/@Type="P"), it is mandatory to set an appropriate passive ActionCode!

Example: GK</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="InstantPurchase" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Instant Purchase indicator.  Values are:
CC = (Ticketless) Purchase immediately charged to CC
AP = Purchase using AirPass credit(s)
ET = Instant Ticketing
PP = Purchase is charged via PayPal (future use)
N = not an instant purchase (default)

Example: CC</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="SegmentRefKey" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>*** deprecated, only used for AC ***

SegmentRefKey contains  references for subsequent transactions </xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="PriceClass" minOccurs="0"/>
				<xsd:element ref="FareRefKey" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>If this value is present in the FlightPriceRS it must be mapped to this request</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:choice minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>FOR PASSIVE SEGMENTS ONLY:</xsd:documentation>
					</xsd:annotation>
					<xsd:element name="VendorLocator">
						<xsd:annotation>
							<xsd:documentation>This element can be used to attach the record locator for passive segments booked outside of a GDS. Or in general, use this element to enter a vendor specifc airline record locator in case the segment was booked directly with the airline.</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string"/>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element ref="Agent"/>
				</xsd:choice>
			</xsd:sequence>
			<xsd:attribute ref="Source"/>
			<xsd:attribute name="AssociationID" type="xsd:ID" use="required">
				<xsd:annotation>
					<xsd:documentation>Unique segment ID used to associate other elements to this segment at PNR creation time.  Example: F1</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="OriginDestinationID" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>Specifies a group of flights per origin destination. 
Example: OD1</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Type" use="optional">
				<xsd:annotation>
					<xsd:documentation>Optional flight type.  This is used to specify passive or open segments.  Values are:
P = Passive
O = Open

If tyoe is set to O(Open segment) then departure date/time, arrival date/time and flight number don't have to be set.

Example: P</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="P"/>
						<xsd:enumeration value="O"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="CnxxIndicator" use="optional">
				<xsd:annotation>
					<xsd:documentation>Connection indicator.  Example: Y = Yes, N = No</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="MarriedSegment" use="optional">
				<xsd:annotation>
					<xsd:documentation>Married connection indicator.  Values:
B = Start of a group of married segments
I = Interim flight segment
E = End of a group of married segments</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="B"/>
						<xsd:enumeration value="I"/>
						<xsd:enumeration value="E"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="SecureFlight" use="optional">
				<xsd:annotation>
					<xsd:documentation>Indicates if Secure Flight data is required for this flight.  
Values:
Y = Secure flight data must be provided
N = (Default) flight does not require Secure Flight data</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PriceClass">
		<xsd:annotation>
			<xsd:documentation>Identifies the price group associated to this price, e.g. TANGO</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="Name">
				<xsd:annotation>
					<xsd:documentation>this is the exact name of the respective price class (fare brand).
</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AirlineCode">
		<xsd:annotation>
			<xsd:documentation>Airline code.  Example: AA</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string"/>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="NumberInParty">
		<xsd:annotation>
			<xsd:documentation>Number of passengers.  Example: 1</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:integer">
				<xsd:maxInclusive value="9"/>
				<xsd:minInclusive value="0"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Departure">
		<xsd:annotation>
			<xsd:documentation>Flight departure group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:annotation>
					<xsd:documentation>IMPORTANT: Note that Date and Time elements are mandatory for regular flight sell. Only optional for OPEN segments. 

See also Flight/@Type=O  attribute of the Flight element.</xsd:documentation>
				</xsd:annotation>
				<xsd:element ref="AirportCode"/>
				<xsd:element ref="Date" minOccurs="0"/>
				<xsd:element ref="Time" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Date" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="AirportCode">
		<xsd:annotation>
			<xsd:documentation>Airport code.  Example: MIA</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:maxLength value="3"/>
				<xsd:minLength value="3"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Arrival">
		<xsd:annotation>
			<xsd:documentation>Flight arrival group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:annotation>
					<xsd:documentation>IMPORTANT: Note that Date and Time elements are mandatory for regular flight sell. Only optional for OPEN segments . 

See also Flight/@Type=O  attribute of the Flight element.</xsd:documentation>
				</xsd:annotation>
				<xsd:element ref="AirportCode"/>
				<xsd:element ref="Date" minOccurs="0"/>
				<xsd:element ref="Time" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Car">
		<xsd:annotation>
			<xsd:documentation>Car segment group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences" maxOccurs="unbounded"/>
				</xsd:choice>
				<xsd:element ref="NumberOfCars"/>
				<xsd:element ref="PickUp"/>
				<xsd:element ref="DropOff"/>
				<xsd:element ref="CarVendorCode"/>
				<xsd:element ref="CarType"/>
				<xsd:element ref="RateOptions" minOccurs="0"/>
				<xsd:element ref="OptionalEquipment" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="SupplementalInformation" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="AssociationID" type="xsd:ID" use="required">
				<xsd:annotation>
					<xsd:documentation>Unique segment ID used to associate other elements to this segment at PNR creation time.  Example: C1</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ReturnRuleText" default="N">
				<xsd:annotation>
					<xsd:documentation>Option to request the return of rule text.  Values are:
Y = Yes
N = No
Example: N</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Type" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Discount type.  Example: MIL</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Category">
		<xsd:annotation>
			<xsd:documentation>Location category.  Values are:
T = Airport
O = Off-airport
C = City location
P = Port
X = Rail
N = North suburban
E = East suburban
S = South suburban
W = West suburban
R = Resort location
Example: C</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="T"/>
				<xsd:enumeration value="O"/>
				<xsd:enumeration value="C"/>
				<xsd:enumeration value="P"/>
				<xsd:enumeration value="X"/>
				<xsd:enumeration value="N"/>
				<xsd:enumeration value="E"/>
				<xsd:enumeration value="S"/>
				<xsd:enumeration value="W"/>
				<xsd:enumeration value="R"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="OptionalEquipment" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Equipment type.  Example: SKR</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Time">
		<xsd:annotation>
			<xsd:documentation>Time in ISO 8601 format (hh:mm).  Example: 14:30</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:pattern value="([0-1][0-9]|2[0-4]):[0-5][0-9]">
					<xsd:annotation>
						<xsd:documentation>
</xsd:documentation>
					</xsd:annotation>
				</xsd:pattern>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="PickUp">
		<xsd:annotation>
			<xsd:documentation>Pick up information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice>
					<xsd:element ref="AirportCode"/>
					<xsd:element ref="Location"/>
				</xsd:choice>
				<xsd:element ref="Date"/>
				<xsd:element ref="Time"/>
				<xsd:element ref="FlightArrival" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DropOff">
		<xsd:annotation>
			<xsd:documentation>Drop off information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice>
					<xsd:element ref="AirportCode"/>
					<xsd:element ref="Location"/>
				</xsd:choice>
				<xsd:element ref="Date"/>
				<xsd:element ref="Time" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="SupplementalInformation">
		<xsd:annotation>
			<xsd:documentation>Supplemental information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="BookingSource" minOccurs="0"/>
				<xsd:element ref="CorporateRateOverride" minOccurs="0"/>
				<xsd:element ref="CorporateDiscountNumber" minOccurs="0"/>
				<xsd:element ref="PaymentGuarantee" minOccurs="0"/>
				<xsd:element ref="Voucher" minOccurs="0"/>
				<xsd:element ref="Coupon" minOccurs="0"/>
				<xsd:element ref="TourCode" minOccurs="0"/>
				<xsd:element ref="FrequentGuest" minOccurs="0"/>
				<xsd:element ref="FrequentFlyer" minOccurs="0"/>
				<xsd:element ref="AdditionalInformation" minOccurs="0"/>
				<xsd:choice minOccurs="0">
					<xsd:element ref="BillingNumber" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Optional element that reflects Billing Number.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="BillingReference" minOccurs="0"/>
				</xsd:choice>
				<xsd:element name="DriverGroup" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Future Use. 
Defines driver specific information.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Driver">
								<xsd:complexType>
									<xsd:attribute name="Age" type="xsd:positiveInteger" use="required"/>
									<xsd:attribute name="CountryOfResidency">
										<xsd:annotation>
											<xsd:documentation>Optional. Could be used to add ISO 2-Letter code to identify country of residency.
Example: US</xsd:documentation>
										</xsd:annotation>
										<xsd:simpleType>
											<xsd:restriction base="xsd:string">
												<xsd:length value="2"/>
											</xsd:restriction>
										</xsd:simpleType>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PaymentGuarantee">
		<xsd:annotation>
			<xsd:documentation>Payment guarantee group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="CreditCard" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="Other" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="Type" use="optional" default="G">
				<xsd:annotation>
					<xsd:documentation>Type of payment.  Values are:
G = Guarantee
D = Deposit
Example: G</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"/>
						<xsd:maxLength value="1"/>
						<xsd:enumeration value="G"/>
						<xsd:enumeration value="D"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CreditCard">
		<xsd:annotation>
			<xsd:documentation>Credit card group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="CCCode"/>
				<xsd:element ref="CCNumber"/>
				<xsd:element ref="CCExpiration"/>
				<xsd:element name="SecurityID" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Credit card security number for online transactions (referred to also as CVV2, CVC2, CSC or CID). This is a 3-digit (Visa, Master, Discover) or 4-digit (Amex) number.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Authorization" minOccurs="0"/>
				<xsd:element name="AuthorizationData" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Data  Elements which are returned from the CC Provider which are reported to ARC and BSP.   
Internal use only. </xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="TransactionIdentifier" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>A valued returned from Credit card provider and used for ARC and BSP reporting. For Visa and AMEX. </xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="AuthResCode" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Authorization Response Code. A valued returned from Credit card provider and used for ARC and BSP reporting. Visa only. </xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="ValidationCode" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Validation Code. A valued returned from Credit card provider and used for ARC and BSP reporting. Visa only. </xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="AuthCharInd" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Authorization Character Indicator. A valued returned from Credit card provider and used for ARC and BSP reporting. Visa only.  </xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="EcommerceInd" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>E-Commerce Indicator. A valued returned from Credit card provider and used for ARC and BSP reporting. Visa and MasterCard. </xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="BankNetRefDate" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>bankNet Reference Date. A valued returned from Credit card provider and used for ARC and BSP reporting. MasterCard only. </xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="BanknetReferenceNumber" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Banknet reference number. A valued returned from Credit card provider and used for ARC and BSP reporting. Mastercard only. </xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="PaymentID" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>The Code identifies the type of VISA credit card( e.g signature card, reward card etc..)   </xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="AddVerfCode" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Address Verification Code; When CC company Address Verification Service( AVS) is utilized, this field will contain the address verification response code. </xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ReportingData" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Data  Elements required by certain card issuers for report purposes</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="AccountNumber" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Corporation's account number</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:simpleContent>
										<xsd:extension base="xsd:string">
											<xsd:attribute name="Min">
												<xsd:annotation>
													<xsd:documentation>minimum length</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="Max">
												<xsd:annotation>
													<xsd:documentation>maximum length</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="Format">
												<xsd:annotation>
													<xsd:documentation>A - alphanumeric (default)
N - numeric
D - ISO date format</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="Mandatory">
												<xsd:annotation>
													<xsd:documentation>O - optional (default)
M - mandatory</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="DataElementID" use="required">
												<xsd:annotation>
													<xsd:documentation>Vendor code assigned to this reporting element
Example:  BK</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="DataElementName" use="required">
												<xsd:annotation>
													<xsd:documentation>Vendor element name assigned to this reporting element
Example:  Corperate ID</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
										</xsd:extension>
									</xsd:simpleContent>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="CostCenter" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Cost center number/code</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:simpleContent>
										<xsd:extension base="xsd:string">
											<xsd:attribute name="Min">
												<xsd:annotation>
													<xsd:documentation>minimum length</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="Max">
												<xsd:annotation>
													<xsd:documentation>maximum length</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="Format">
												<xsd:annotation>
													<xsd:documentation>A - alphanumeric (default)
N - numeric
D - ISO date format</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="Mandatory">
												<xsd:annotation>
													<xsd:documentation>O - optional (default)
M - mandatory</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="DataElementID" use="required">
												<xsd:annotation>
													<xsd:documentation>Vendor code assigned to this reporting element
Example:  BK</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="DataElementName" use="required">
												<xsd:annotation>
													<xsd:documentation>Vendor element name assigned to this reporting element
Example:  Corperate ID</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
										</xsd:extension>
									</xsd:simpleContent>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="Department" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Department description  for this Traveler in this association.
Example: Marketing</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:simpleContent>
										<xsd:extension base="xsd:string">
											<xsd:attribute name="Min">
												<xsd:annotation>
													<xsd:documentation>minimum length</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="Max">
												<xsd:annotation>
													<xsd:documentation>maximum length</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="Format">
												<xsd:annotation>
													<xsd:documentation>A - alphanumeric (default)
N - numeric
D - ISO date format</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="Mandatory">
												<xsd:annotation>
													<xsd:documentation>O - optional (default)
M - mandatory</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="DataElementID" use="required">
												<xsd:annotation>
													<xsd:documentation>Vendor code assigned to this reporting element
Example:  BK</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="DataElementName" use="required">
												<xsd:annotation>
													<xsd:documentation>Vendor element name assigned to this reporting element
Example:  Corperate ID</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
										</xsd:extension>
									</xsd:simpleContent>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="EmployeeID" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>EmployeeID of traveler for this association.
Example 476254</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:simpleContent>
										<xsd:extension base="xsd:string">
											<xsd:attribute name="Min">
												<xsd:annotation>
													<xsd:documentation>minimum length</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="Max">
												<xsd:annotation>
													<xsd:documentation>maximum length</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="Format">
												<xsd:annotation>
													<xsd:documentation>A - alphanumeric (default)
N - numeric
D - ISO date format</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="Mandatory">
												<xsd:annotation>
													<xsd:documentation>O - optional (default)
M - mandatory</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="DataElementID" use="required">
												<xsd:annotation>
													<xsd:documentation>Vendor code assigned to this reporting element
Example:  BK</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="DataElementName" use="required">
												<xsd:annotation>
													<xsd:documentation>Vendor element name assigned to this reporting element
Example:  Corperate ID</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
										</xsd:extension>
									</xsd:simpleContent>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="GenericElement" minOccurs="0" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>These are elements provided by CC vendor and could include elements such as
- ProjectNumber
- AccountingUnit
- ActionNumber
- DepartingDate
- FinalDestination

Above sample reflects data elements from UATP/Airplus requirements</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:simpleContent>
										<xsd:extension base="xsd:string">
											<xsd:attribute name="Min">
												<xsd:annotation>
													<xsd:documentation>minimum length</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="Max">
												<xsd:annotation>
													<xsd:documentation>maximum length</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="Format">
												<xsd:annotation>
													<xsd:documentation>A - alphanumeric (default)
N - numeric
D - ISO date format</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="Mandatory">
												<xsd:annotation>
													<xsd:documentation>O - optional (default)
M - mandatory</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="DataElementID" use="required">
												<xsd:annotation>
													<xsd:documentation>Vendor code assigned to this reporting element
Example:  PN</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="DataElementName" use="required">
												<xsd:annotation>
													<xsd:documentation>Vendor element name assigned to this reporting element
Example:  Project Number</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
											<xsd:attribute name="SystemProcess">
												<xsd:annotation>
													<xsd:documentation>Allowed value: Y
If set this identifies that this data content for this element is system generated (not provide by user input or profiles)</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
										</xsd:extension>
									</xsd:simpleContent>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:choice minOccurs="0">
					<xsd:sequence>
						<xsd:element ref="CardholderFirstName" minOccurs="0"/>
						<xsd:element ref="CardholderLastName"/>
					</xsd:sequence>
					<xsd:element name="CardholderFullName">
						<xsd:annotation>
							<xsd:documentation>Credit cardholder full name as it appears on the card</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element name="CardholderIDRef">
						<xsd:annotation>
							<xsd:documentation>Reference to a traveler in PNR as cardholder.</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
				</xsd:choice>
				<xsd:element ref="ApprovalCode" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>MANUAL Credit card approval code.  Example: 996456</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="PaymentPlanInfo" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Detailed information about an applied payment plan (example: pagos parcelados)</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="PlanCode">
								<xsd:annotation>
									<xsd:documentation>as defined by the participating airline
(3-6 AN)
Example: AA008</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="NbrOfInstallments">
								<xsd:annotation>
									<xsd:documentation>Example: 4</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="InstallmentAmount">
								<xsd:annotation>
									<xsd:documentation>the total installment (based on all tickets covered by this payment plan entry)

Example 
125025 (no decimal)</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="NetBalance" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>Net Balance (after first installment) of the base fare of the individual ticket 

Example: 
2550.50 (with decimal)</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element ref="Amount"/>
									</xsd:sequence>
									<xsd:attribute name="PassengerTypeCode" use="required">
										<xsd:annotation>
											<xsd:documentation>Passenger Type Code associated to this entry

Example:  ADT</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="PaymentExtension" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Valid value: E</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="ExtendedPayment" minOccurs="0"/>
				<xsd:element ref="Remark" minOccurs="0"/>
				<xsd:element name="CCAddressGroup" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Address" type="xsd:string" maxOccurs="2">
								<xsd:annotation>
									<xsd:documentation>Street or PO Box address.  Example: 1234 Main Street</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="City" type="xsd:string">
								<xsd:annotation>
									<xsd:documentation>City name.  Example: NY</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="PostalCode" type="xsd:string">
								<xsd:annotation>
									<xsd:documentation>Postal code or zip code.  Example: 12345</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="StateCode" type="xsd:string" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>State code.  Example: NY</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="CountryCode" type="xsd:string">
								<xsd:annotation>
									<xsd:documentation>Country code.  Example: US</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="PartialAmount" type="xsd:positiveInteger">
				<xsd:annotation>
					<xsd:documentation>The PartialAmount must only be specified in case of a split payment (see FormOfPayment). In case of a split payment, it is optional for one and mandatory for all other means of payment elements.

If is left out for one of the means of payment, the PartialAmounts specified for the other means of payment will be charged to each of them respectively and the remaining amount will be charged to the means of payment without PartialAmount. If a PartialAmount is specified for all means of payment, an error may occur, e.g. at time of tickting, if the total amount to be paid differs from the sum of the PartialAmounts.

The PartialAmount is specified as an integer. It is interpreted to be of the same currency as the amount to be paid and based on the number of decimals for this currency, the rightmost digits are taken to be decimal places.

Not to be confused w/ amount entered for authorization in Authorization/Amount element.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Number" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Number.  Example: 010</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ApprovalCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Credit card approval code.  Example: 996456</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ExtendedPayment">
		<xsd:annotation>
			<xsd:documentation>Credit card extended payment.  Values are:
Y = Add extended payment
N = Do not add extended payment
Example: N</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="NumberOfMonths" type="xsd:positiveInteger">
						<xsd:annotation>
							<xsd:documentation>If and only if the value of the ExtendedPayment is set to Y.
Identifies the period of extended payment in months. Usually credit card systems allows a payment to be extended over a certain number of months. The actual timeframe will vary depending on the credit card system.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="PlanCode">
						<xsd:annotation>
							<xsd:documentation>A promotional code offered by Airline/CreditCard company to allow extended payments with or without deposit requirements</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="DepositAmount">
						<xsd:annotation>
							<xsd:documentation>If dictated by the entered PlanCode this is the amount of the initial payment (deposit).  The amount is goverend by the POS currency as defined in the Fare group.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Other">
		<xsd:annotation>
			<xsd:documentation>Other payment information.  Example: Check 113 or *CHECK, CASH</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="PartialAmount" type="xsd:positiveInteger">
						<xsd:annotation>
							<xsd:documentation>The PartialAmount must only be specified in case of a split payment (see FormOfPayment). In case of a split payment, it is optional for one and mandatory for all other means of payment elements.

If is left out for one of the means of payment, the PartialAmounts specified for the other means of payment will be charged to each of them respectively and the remaining amount will be charged to the means of payment without PartialAmount. If a PartialAmount is specified for all means of payment, an error may occur, e.g. at time of tickting, if the total amount to be paid differs from the sum of the PartialAmounts.

The PartialAmount is specified as an integer. It is interpreted to be of the same currency as the amount to be paid and based on the number of decimals for this currency, the rightmost digits are taken to be decimal places.

Not to be confused w/ amount entered for authorization in Authorization/Amount element.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Voucher">
		<xsd:annotation>
			<xsd:documentation>Voucher group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Number" minOccurs="0"/>
				<xsd:element ref="Value" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Value" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Voucher value.  Example: 7500</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Coupon" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Coupon information.  Example: CPN3564</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="AdditionalInformation" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Optional additional information.  Example: Traveler on wheelchair</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Hotel">
		<xsd:annotation>
			<xsd:documentation>Hotel information group. NOTE: most of the hotel will require a credit card for guarantee or deposit. Pls. see SuplementalInformation/PaymentGurantee element.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences" maxOccurs="unbounded"/>
				</xsd:choice>
				<xsd:element ref="CheckInDate"/>
				<xsd:element ref="CheckOutDate"/>
				<xsd:element ref="NumberOfNights"/>
				<xsd:element ref="NumberOfPersons"/>
				<xsd:element ref="ChainCode"/>
				<xsd:element ref="PropertyCode"/>
				<xsd:element ref="CityCode"/>
				<xsd:element ref="Room"/>
				<xsd:element ref="SupplementalInformation" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="AssociationID" type="xsd:ID" use="required">
				<xsd:annotation>
					<xsd:documentation>Unique segment ID used to associate other elements to this segment at PNR creation time.  Example: H1</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="SellType" use="required">
				<xsd:annotation>
					<xsd:documentation>Type of GDS link that the hotel participates in.  Values are:

ASA = Amadeus standard access 
ACA = Amadeus complete access 
ACP = Amadeus complete access plus 
ADY = Amadeus dynamic access 
AIA = Amadeus independent access

GIA = Galileo inside availability link 
GIP = Galileo inside shopper participant
GRM = Galileo roommaster only participant 
GLP = Galileo link partner

SDC = Sabre direct connect sell 
SOL = Sabre other link type 

WSV = Worldspan hotel source vendor
WAP = Worldspan hotel select vendor access plus
WNP = Worldspan hotel select vendor non-access plus

HRS = HRS direct access hotels

Example: GRM</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="ASA"/>
						<xsd:enumeration value="ACA"/>
						<xsd:enumeration value="ACP"/>
						<xsd:enumeration value="ADY"/>
						<xsd:enumeration value="AIA"/>
						<xsd:enumeration value="GIA"/>
						<xsd:enumeration value="GIP"/>
						<xsd:enumeration value="GRM"/>
						<xsd:enumeration value="GLP"/>
						<xsd:enumeration value="SDC"/>
						<xsd:enumeration value="SOL"/>
						<xsd:enumeration value="WSV"/>
						<xsd:enumeration value="WAP"/>
						<xsd:enumeration value="WNP"/>
						<xsd:enumeration value="HRS"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="ReturnRuleText" default="N">
				<xsd:annotation>
					<xsd:documentation>Option to request the return of rule text.  Values are:
Y = Yes
N = No
Example: N</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="ShortSell" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Option to request hotel short sell.  Values are: Y = Yes, N = No.  Example:  N</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PropertyCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Hotel property code in GDS.  Example: RD</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ChainCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Hotel property chain code.  Example: 101</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CheckInDate" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Check in date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CheckOutDate" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Check out date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="RoomType" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Room type code.  The code consists of three parameters: room category, number of beds and bed type.
Example: A1K</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="RateCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Rate code.  Example: STD</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="NumberOfRooms" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Number of rooms requested.  Example: 1</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="NumberOfPersons" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Number of persons.  Example: 1</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="RoomOptions">
		<xsd:annotation>
			<xsd:documentation>Room options group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="ExtraAdult" minOccurs="0"/>
				<xsd:element ref="ExtraChild" minOccurs="0"/>
				<xsd:element ref="RollawayAdult" minOccurs="0"/>
				<xsd:element ref="RollawayChild" minOccurs="0"/>
				<xsd:element ref="Crib" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ExtraAdult" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Number of extra adult.  Example: 1</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ExtraChild" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Number of extra child.  Example: 1</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Crib" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Number of cribs.  Example: 1</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="RollawayAdult" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Number of rollaway adults.  Example: 1</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="RollawayChild" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Number of rollaway child.  Example: 1</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CompletePNRElements">
		<xsd:annotation>
			<xsd:documentation>This group contains PNR elements required to complete the PNR transaction and obtain the PNR record locator. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Itinerary" minOccurs="0"/>
				<xsd:element ref="Traveler" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="Telephone" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="Ticketing" minOccurs="0"/>
				<xsd:element ref="ReceivedFrom" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Ticketing">
		<xsd:annotation>
			<xsd:documentation>Ticketing group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice>
				<xsd:element ref="Issued"/>
				<xsd:element ref="TimeLimit"/>
				<xsd:element ref="Prepaid"/>
				<xsd:element ref="Native"/>
			</xsd:choice>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ReceivedFrom" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Received from field.  Example: John</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Surname" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Traveler family (last) name.  Example: SMITH</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="GivenName" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Traveler given (first) name.  Example: JANE</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Initial" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Traveler middle initial.  Example: G</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Title" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Traveler title.  Example: MISS</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Age" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Traveler age.  Age is not supported in Galileo.  Example: 01</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="DateOfBirth" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Traveler birth date in ISO 8601 format (yyyy-mm-dd).  Date of birth is not supported in Galileo.  Example: 2001-12-25</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Infant">
		<xsd:annotation>
			<xsd:documentation>Information for the infant traveling with the passenger and not requiring a seat.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Surname"/>
				<xsd:element ref="GivenName"/>
				<xsd:element ref="DateOfBirth">
					<xsd:annotation>
						<xsd:documentation>Traveler birth date in ISO 8601 format (yyyy-mm-dd). Example: 2007-12-25</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="NameRemark" minOccurs="0"/>
				<xsd:element ref="Gender" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="AssociationID" type="xsd:ID" use="required">
				<xsd:annotation>
					<xsd:documentation>Unique traveler ID used to associate other elements to this traveler at PNR creation time.  Example: T1</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Type" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>Infant PAX type. Although regular INF type will be automatically set, this optional attribute allows to enter a different PTC for infants. Particularly useful for bulk contracts - JNF pax type. 
Example: JNF</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="OptionalName" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Addressee's name.  Example: ABC CORPORATION</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Address">
		<xsd:annotation>
			<xsd:documentation>Street or PO Box address.  Example: 1234 Main Street</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string"/>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="City">
		<xsd:annotation>
			<xsd:documentation>City name.  Example: NY</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="SplitItemLine" type="xsd:integer" use="optional">
						<xsd:annotation>
							<xsd:documentation>Allows to specify how to group address items when SplitItems attribut is at Yes. All items with the same SplitItemLine value will be created in the same address element in the GDS. Example: 1</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PostalCode">
		<xsd:annotation>
			<xsd:documentation>Postal code or zip code.  Example: 12345</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="SplitItemLine" type="xsd:integer" use="optional">
						<xsd:annotation>
							<xsd:documentation>Allows to specify how to group address items when SplitItems attribut is at Yes. All items with the same SplitItemLine value will be created in the same address element in the GDS. Example: 1</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="StateCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>State code.  Example: NY</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CountryCode">
		<xsd:annotation>
			<xsd:documentation>Country code.  Example: US</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:maxLength value="2"/>
				<xsd:minLength value="2"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="OtherPNRElements">
		<xsd:annotation>
			<xsd:documentation>Other PNR elements group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="EmailAddress" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="FrequentTravelerGroup" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>FrequentTravelerGroup

If different frequent flyer programs apply to different flights in the itinerary for one and the same traveler, create multiple FrequentTravelerGroup elements for the traveler. </xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="QualifierGroup" minOccurs="0"/>
				<xsd:element ref="BillingAndDeliveryData" minOccurs="0"/>
				<xsd:element ref="CustomerIdentification" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Customer identification group</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="CustomerProfile" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Customer profile group</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="DocumentInvoiceRemark" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="DuePaidText" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="GeneralRemark" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="ItineraryRemark" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="OtherServiceInformation" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="ReviewBookingQueue" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="Seat" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="SeatOptimization" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Seat optimization request. Sourced to FLXMI only</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="SeatPreferences">
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="Preference" maxOccurs="unbounded">
											<xsd:annotation>
												<xsd:documentation>Preference Codes:
A = Aisle
W = Window
E = Exit Row
H = Bulkhead
F = Front of Cabin
B = Back of Cabin
O = Over Wing
L  = Left
R = Right
C = Center
P = Powerport</xsd:documentation>
											</xsd:annotation>
											<xsd:complexType>
												<xsd:simpleContent>
													<xsd:extension base="xsd:string">
														<xsd:attribute name="Rank">
															<xsd:annotation>
																<xsd:documentation>future use - can be used to rank the preferences for improved optimization</xsd:documentation>
															</xsd:annotation>
														</xsd:attribute>
													</xsd:extension>
												</xsd:simpleContent>
											</xsd:complexType>
										</xsd:element>
									</xsd:sequence>
									<xsd:attribute name="AcceptPremium">
										<xsd:annotation>
											<xsd:documentation>Indicates the acceptance of applicable premiums

Values:
Y = user accepts
N = no premiums accepted</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
							<xsd:choice>
								<xsd:element ref="TravelerIDRef"/>
								<xsd:element ref="TravelerReferences"/>
							</xsd:choice>
							<xsd:choice>
								<xsd:element ref="SegmentIDRef"/>
								<xsd:element ref="FlightReferences"/>
							</xsd:choice>
						</xsd:sequence>
						<xsd:attribute ref="Source"/>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="OptionalServices" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Individual service details</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Service" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>Servive details</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:choice minOccurs="0">
											<xsd:element ref="SegmentIDRef" maxOccurs="unbounded"/>
											<xsd:element ref="FlightReferences" maxOccurs="unbounded"/>
										</xsd:choice>
										<xsd:choice>
											<xsd:element ref="TravelerIDRef"/>
											<xsd:element ref="TravelerReferences"/>
										</xsd:choice>
										<xsd:element name="ServiceLocation" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Optionally used for non-flight related services, such as airline lounge pass, pre-paid booklets for drinks/meals or WiFi.

This is the 3-letter IATA city- or airport code related to the service.  For example, an airport lounge pass may only be valid for one location.

Example: DFW</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element ref="ServiceDate" minOccurs="0"/>
										<xsd:element name="Description" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Title description (Commercial Name) of this service - normally a one liner, e.g. "3rd Bag Fee"</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="DescriptionVariable" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>This value is used to provide a variable value for an selected service.

Sample: for a Premium Seat this will be a seat number; for a annual pass of onboard WiFi this will be the credentials, etc.  

Examples:
"9D"
"UID: GO8978 PW: 1234"</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="ReferenceKey" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Unique reference key. If present in pricing response messages, must be included.</xsd:documentation>
											</xsd:annotation>
											<xsd:simpleType>
												<xsd:restriction base="xsd:string">
													<xsd:minLength value="1"/>
												</xsd:restriction>
											</xsd:simpleType>
										</xsd:element>
										<xsd:element ref="ServicePrice" minOccurs="0"/>
										<xsd:element ref="BookingInstructions" minOccurs="0"/>
										<xsd:element name="InReferenceTo" minOccurs="0" maxOccurs="unbounded">
											<xsd:annotation>
												<xsd:documentation>references the exchanged document(s) to support this item</xsd:documentation>
											</xsd:annotation>
											<xsd:complexType>
												<xsd:sequence>
													<xsd:element name="DocNumber">
														<xsd:annotation>
															<xsd:documentation>The 13-digit document number (no check digit) of an 'accountable' document such as eCert, voucher, MCO, EMD, etc
Example: 0061234567890</xsd:documentation>
														</xsd:annotation>
													</xsd:element>
													<xsd:element name="DocIssuePlace" type="xsd:string">
														<xsd:annotation>
															<xsd:documentation>Three letter IATA code of the town where the ticket originally has been issued.
Example: MIA</xsd:documentation>
														</xsd:annotation>
													</xsd:element>
													<xsd:element name="DocIssueDate" type="xsd:date">
														<xsd:annotation>
															<xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
														</xsd:annotation>
													</xsd:element>
												</xsd:sequence>
											</xsd:complexType>
										</xsd:element>
									</xsd:sequence>
									<xsd:attribute ref="Source" use="required"/>
									<xsd:attribute name="TrxRefKey" use="required">
										<xsd:annotation>
											<xsd:documentation>Data binding reference key created for each supported PNR element such as "Services".

Generate standard 36 character GUID (example 540c2d5f-a9ab-4414-bd36-9999f5388773) and convert to base64 (example Xy0MVKupFES9NpmZ9TiHcw).  Result is unique 22 character key.</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="AssociationID" type="xsd:ID" use="required">
										<xsd:annotation>
											<xsd:documentation>Unique ID used to associate to this element at PNR creation time.  Example: S1</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="ReasonCode" use="required">
										<xsd:annotation>
											<xsd:documentation>IATA RFIC (ReasonFor IssuanceCode, a 1-character main code)
Example of RFIC: A  

Note: Only services of same RFIC code can be combined on an EMD-A document.  For example, if there are services of RFIC code "A" and "B", two separate EMD documents are needed, issuing all services of "A" and "B" on seperate docs.</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="Method">
										<xsd:annotation>
											<xsd:documentation>Values are:

F = FareIntegrated
EA = EMD Associated
ES = EMD Standalone 
MA = Flight Associated but settled via MCO
MS = Standalone but settle via MCO
D = DirectSettlement</xsd:documentation>
										</xsd:annotation>
										<xsd:simpleType>
											<xsd:restriction base="xsd:string">
												<xsd:enumeration value="F"/>
												<xsd:enumeration value="EA"/>
												<xsd:enumeration value="MA"/>
												<xsd:enumeration value="ES"/>
												<xsd:enumeration value="MS"/>
												<xsd:enumeration value="D"/>
											</xsd:restriction>
										</xsd:simpleType>
									</xsd:attribute>
									<xsd:attribute name="SubCode" use="required">
										<xsd:annotation>
											<xsd:documentation>ATPCO RFIS (ReasonForIssuance  Subcode).
Example of RFIS: 0CC  </xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="ServiceCode">
										<xsd:annotation>
											<xsd:documentation>Additional unique ATPCO code.
Example: OC</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="Type">
										<xsd:annotation>
											<xsd:documentation>Indicator if this option is a discount or a surcharge;

Values are: 
"Discount"  1)
"Surcharge"
"Included"  2)
"Not applicable" 3)
"Credit" 4)

1) only applicable when using methof F, applying option directly to a fare (not used in an EMD solution)

2) This item is free of charge due to FQTV status or chosen Price Class

3) This item is not available/applicable due to FQTV status or chosen Price Class.

4) This value applies when a residual value is provided as a credit (for future travel) 

Sample:  Earning extra miles may only be allowed for a Top tier FQTV status and is not applicable for any other traveler.</xsd:documentation>
										</xsd:annotation>
										<xsd:simpleType>
											<xsd:restriction base="xsd:string">
												<xsd:enumeration value="Discount"/>
												<xsd:enumeration value="Surcharge"/>
												<xsd:enumeration value="Included"/>
												<xsd:enumeration value="Not applicable"/>
											</xsd:restriction>
										</xsd:simpleType>
									</xsd:attribute>
									<xsd:attribute name="FareBrand">
										<xsd:annotation>
											<xsd:documentation>Service is part of a bundle associated to this fare brand</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="Quantity">
										<xsd:annotation>
											<xsd:documentation>This attribute provides how many service/items of the same type have been ordered. 

Possible Values: 
1-99; 1 being the default

Example: 3</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="ServiceType">
										<xsd:annotation>
											<xsd:documentation>The ATPCO defined code for the type of service (also referred to as 'Flight/Ticket/Merchandise Byte 21)':

F = Flight (TypeValue=2)
R = Rule Buster (Type Value = 5)
T = Ticket (TypeValue=3 if EMD-S is issued, 4 if other)
M = Merchandise (TypeValue=1 if EMD-S is issued, 4 if other)</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="FQTVStatus">
										<xsd:annotation>
											<xsd:documentation>The status (tier level) of the traveler's FQTV account.

This is available as a query results against the airline's FQTV database.

Samples:
AA(American AAdvantage):
-- Gold
-- Platinum
-- Executive Platinum

LH (Miles and More):
-- Frequent Traveller
-- Senator
-- HON Circle

EK (Emirates Skywards):
-- Silver
-- Gold</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="FQTVNumber">
										<xsd:annotation>
											<xsd:documentation>This is the actual FrequentFlyer number associated to the FQTVStatus.  This will allow the POS GUI to associate the actual traveler with the respective option/price</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="ProviderIDRef">
										<xsd:annotation>
											<xsd:documentation>Allows to associate this service to a unique provider tag/id/ref</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="MustSelect">
										<xsd:annotation>
											<xsd:documentation>Identifies (free or included) services which must be explicitly selected.
Allowed Values: Y/N</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="SpecialServiceRequest" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="APIS" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>For future use. Development in progress.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:choice>
								<xsd:element ref="TravelerIDRef"/>
								<xsd:element ref="TravelerReferences"/>
							</xsd:choice>
							<xsd:choice minOccurs="0">
								<xsd:element ref="SegmentIDRef" maxOccurs="unbounded"/>
								<xsd:element ref="FlightReferences" maxOccurs="unbounded"/>
							</xsd:choice>
							<xsd:choice>
								<xsd:element name="PictureID">
									<xsd:annotation>
										<xsd:documentation>Passport or other accepted government issued picture ID. SSR DOCS.	

U.S. Department of Homeland Security (DHS) announced Secure Flight program. Effective Date: 1 May 2009. As part of this program requirements the elements DocNumber and NationalityCountry are optional. For regular Picture ID reporting where for instance passport number and issuing country is known - information is still required.

A single SSR DOCS is required for each passenger when submitting required Secure Flight information, as the information is pertinent to a specific passenger. 

If more than one passenger is identified during name association when entering the SSR DOCS, existing error responses will be displayed.
</xsd:documentation>
									</xsd:annotation>
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="DocType" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>A  - Alien resident card
C - Permanent resident card
P - Passport
T - Refugee travel document and re-entry permit, US Travel document
F - Facilitation document
M - Military
N - Naturalization certificate
V - Border crossing card
DB - Secure Flight data</xsd:documentation>
												</xsd:annotation>
												<xsd:simpleType>
													<xsd:restriction base="xsd:string">
														<xsd:length value="2"/>
														<xsd:enumeration value="A"/>
														<xsd:enumeration value="C"/>
														<xsd:enumeration value="P"/>
														<xsd:enumeration value="F"/>
														<xsd:enumeration value="M"/>
														<xsd:enumeration value="N"/>
														<xsd:enumeration value="V"/>
														<xsd:enumeration value="DB"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:element>
											<xsd:element name="IssueCountry" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Country where document (for instance passport) was issued.
Use valid 2 or 3 char country codes. ISO3166-Alpha2 or ISO3166-Alpha3</xsd:documentation>
												</xsd:annotation>
												<xsd:simpleType>
													<xsd:restriction base="xsd:string">
														<xsd:length value="2"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:element>
											<xsd:element name="DocNumber" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Document (for instance passport) number.</xsd:documentation>
												</xsd:annotation>
												<xsd:simpleType>
													<xsd:restriction base="xsd:string">
														<xsd:minLength value="1"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:element>
											<xsd:element name="NationalityCountry" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Use valid 2 or 3 char country codes. ISO3166-Alpha2 or ISO3166-Alpha3</xsd:documentation>
												</xsd:annotation>
												<xsd:simpleType>
													<xsd:restriction base="xsd:string">
														<xsd:length value="2"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:element>
											<xsd:element ref="DateOfBirth"/>
											<xsd:element ref="Gender">
												<xsd:annotation>
													<xsd:documentation>Traveler gender.  
M - Male
F - Female
MI - Male traveling with an Infant
FI - Female traveling with an Infant
U - Unknown at the time of booking
 Example: M</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="DocExpirationDate" type="xsd:date" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>This element is MANDATORY, if the DocType is one of the following: 
C - Permanent resident card
P - Passport
T - Refugee travel document and re-entry permit, US Travel document
M - Military

Example: 2012-05-25</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element ref="Surname"/>
											<xsd:element ref="GivenName"/>
											<xsd:element ref="Initial" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Traveler middle initial or spelled out middle name.  Example: G</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="PassportHolder" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>In case of a multi-passenger passport this element can be used to indentify the the person entered in this SSR is the primary passport holder. The only value allowed: H.
Example: H</xsd:documentation>
												</xsd:annotation>
												<xsd:simpleType>
													<xsd:restriction base="xsd:string">
														<xsd:length value="1"/>
														<xsd:enumeration value="H"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:element>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
								<xsd:element name="VISA">
									<xsd:annotation>
										<xsd:documentation>Visa information.
SSR DOCO

A single VISA element must be created for each passenger when submitting a redress number as it is always associated to a specific passenger. </xsd:documentation>
									</xsd:annotation>
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="DocType" default="V" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Identifies the type of the SSR DOCO entered. Three types exist: Visa (default), Known Traveler Number and Redress Number.
V - Visa
K - Known Traveler
R - Redress Number
Example: V</xsd:documentation>
												</xsd:annotation>
												<xsd:simpleType>
													<xsd:restriction base="xsd:string">
														<xsd:length value="1"/>
														<xsd:enumeration value="V"/>
														<xsd:enumeration value="K"/>
														<xsd:enumeration value="R"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:element>
											<xsd:element name="PlaceOfBirth" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Mandatory for VISA</xsd:documentation>
												</xsd:annotation>
												<xsd:simpleType>
													<xsd:restriction base="xsd:string">
														<xsd:minLength value="1"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:element>
											<xsd:element name="DocNumber">
												<xsd:annotation>
													<xsd:documentation>Mandatory for all types.
This is the VISA document number, the RedressNumber or the KnownTraveler number</xsd:documentation>
												</xsd:annotation>
												<xsd:simpleType>
													<xsd:restriction base="xsd:string">
														<xsd:minLength value="1"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:element>
											<xsd:element name="PlaceOfIssue" type="xsd:string" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Mandatory for VISA

Example: Frankfurt</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="IssueDate" type="xsd:date" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Mandatory for VISA</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="IssuedForCountry" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Mandatory for VISA

Use valid 2 or 3 char country codes. ISO3166-Alpha2 or ISO3166-Alpha3
Example: DE</xsd:documentation>
												</xsd:annotation>
												<xsd:simpleType>
													<xsd:restriction base="xsd:string">
														<xsd:minLength value="2"/>
														<xsd:maxLength value="3"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:element>
											<xsd:element name="InfantOnLap" minOccurs="0">
												<xsd:simpleType>
													<xsd:restriction base="xsd:string">
														<xsd:length value="1"/>
														<xsd:enumeration value="Y"/>
														<xsd:enumeration value="N"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:element>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
								<xsd:element name="StayingAt">
									<xsd:annotation>
										<xsd:documentation>Address while in country. 
SSR DOCA

NOTE: SplitItemLine atttribute is for future use and is considered a plcaeholder. Not supported. Will be ignored if included in request.

NOTE: Dashes are not allowed in APIS entries. XX1 will replace dashes wiht a space.</xsd:documentation>
									</xsd:annotation>
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="Address" type="xsd:string">
												<xsd:annotation>
													<xsd:documentation>Street or PO Box address.  Example: 1234 Main Street</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="City" type="xsd:string">
												<xsd:annotation>
													<xsd:documentation>City name.  Example: NY</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="StateCode" type="xsd:string">
												<xsd:annotation>
													<xsd:documentation>State code.  Example: NY</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="CountryCode" type="xsd:string">
												<xsd:annotation>
													<xsd:documentation>Country code.  Example: US</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="PostalCode" type="xsd:string">
												<xsd:annotation>
													<xsd:documentation>Postal code or zip code.  Example: 12345</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="InfantOnLap" minOccurs="0">
												<xsd:simpleType>
													<xsd:restriction base="xsd:string">
														<xsd:length value="1"/>
														<xsd:enumeration value="Y"/>
														<xsd:enumeration value="N"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:element>
										</xsd:sequence>
										<xsd:attribute name="AddressType">
											<xsd:annotation>
												<xsd:documentation>Valid address types are:
R - Residence Address
D - Destination Address
</xsd:documentation>
											</xsd:annotation>
											<xsd:simpleType>
												<xsd:restriction base="xsd:string">
													<xsd:length value="1"/>
													<xsd:enumeration value="R"/>
													<xsd:enumeration value="D"/>
												</xsd:restriction>
											</xsd:simpleType>
										</xsd:attribute>
									</xsd:complexType>
								</xsd:element>
							</xsd:choice>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="TicketRemark" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="UserRemark" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="HistoricalRemark" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="AccountingLine" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="AccountingInfo" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>BOS related accounting information</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:all>
							<xsd:element name="AccountNumber" type="xsd:string">
								<xsd:annotation>
									<xsd:documentation>BOS related account number</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="CompanyNumber" type="xsd:string" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>IATA/ARC/BOS company identification number</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="CostCenter" type="xsd:string" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Cost center number/code</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:all>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="TicketingInstructions" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="HiddenRemark" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="TourCode" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>TourCode element (Amadeus)</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Text" type="FreeFormTextField">
								<xsd:annotation>
									<xsd:documentation>Information text. Example: Free flow text</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ManualTicket" minOccurs="0" maxOccurs="unbounded">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:choice>
								<xsd:element ref="TravelerIDRef"/>
								<xsd:element ref="TravelerReferences"/>
							</xsd:choice>
							<xsd:choice minOccurs="0">
								<xsd:element ref="SegmentIDRef" maxOccurs="unbounded"/>
								<xsd:element ref="FlightReferences" maxOccurs="unbounded"/>
							</xsd:choice>
							<xsd:element ref="AirlineCode"/>
							<xsd:element name="TicketNumber" type="xsd:string"/>
							<xsd:element name="TNCheckDigit" type="xsd:string" minOccurs="0"/>
							<xsd:element name="TNLastConjunction" type="xsd:string" minOccurs="0"/>
							<xsd:element name="TNLastConjunctionCheckDigit" type="xsd:string" minOccurs="0"/>
							<xsd:element ref="Text" minOccurs="0"/>
						</xsd:sequence>
						<xsd:attribute name="Type" use="required">
							<xsd:annotation>
								<xsd:documentation>Type of the manual document. A-automated (in case the system did not issued a ticket w/ automated number), E - e-Ticket number, M- a real manual (handwritten) ticket number.
</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:enumeration value="A"/>
									<xsd:enumeration value="E"/>
									<xsd:enumeration value="M"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:attribute>
						<xsd:attribute name="IsInfant" use="optional" default="N">
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:enumeration value="Y"/>
									<xsd:enumeration value="N"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CustomerProfile">
		<xsd:annotation>
			<xsd:documentation>Customer profile group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="PassengerAccountRecord" minOccurs="0"/>
				<xsd:element ref="BusinessAccountRecord" minOccurs="0"/>
				<xsd:element ref="MasterAccountRecord" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="MasterAccountRecord" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Name of master profile record.  Example: IBM</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="BusinessAccountRecord" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Name of business profile record.  Example: IBMMKT</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="PassengerAccountRecord" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Name of passenger profile record.  Example: SMITH</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CustomerIdentification">
		<xsd:annotation>
			<xsd:documentation>Customer identification group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Text"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="TicketRemark">
		<xsd:annotation>
			<xsd:documentation>Ticket remark group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Text"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="GeneralRemark">
		<xsd:annotation>
			<xsd:documentation>General remark group.  If TravelerAssociationNumber is not included, then GeneralRemark applies to all travelers.                  NOTE: Amadeus allows general remarks to be associated (SegmentIDRef) with Air segments only.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences" maxOccurs="unbounded"/>
				</xsd:choice>
				<xsd:choice minOccurs="0">
					<xsd:element ref="SegmentIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="FlightReferences" maxOccurs="unbounded"/>
				</xsd:choice>
				<xsd:element ref="Text"/>
			</xsd:sequence>
			<xsd:attribute name="Category" type="xsd:string" use="optional" default="">
				<xsd:annotation>
					<xsd:documentation source="Identifies remark category (e.g. alpha coded remarks in Sabre); possible values are 'C', 'T'">Identifies remark category (e.g. alpha coded remarks in Sabre); possible values are 'C', 'T'.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Type" type="xsd:string" use="optional" default="">
				<xsd:annotation>
					<xsd:documentation>Identifies special type of GeneralRemark, e.g. BackOfficeRemark in Amadeus (Type = 'B').</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ItineraryRemark">
		<xsd:annotation>
			<xsd:documentation>Itinerary remark group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences" maxOccurs="unbounded"/>
				</xsd:choice>
				<xsd:choice minOccurs="0">
					<xsd:element ref="SegmentIDRef"/>
					<xsd:element ref="FlightReferences"/>
				</xsd:choice>
				<xsd:element ref="Text"/>
			</xsd:sequence>
			<xsd:attribute name="Type" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>Type of itinerary remark.  Values are:
A = Air
C = Car
H = Hotel
F-FreeFlowText remarkExample: A</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ReviewBookingQueue">
		<xsd:annotation>
			<xsd:documentation>Review booking queue group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Date" minOccurs="0"/>
				<xsd:element ref="QueueNumber" minOccurs="0"/>
				<xsd:element ref="PseudoCityCode" minOccurs="0"/>
				<xsd:element ref="Time" minOccurs="0"/>
				<xsd:element ref="Text" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="QueueNumber" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Queue number.  Example: 08</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="PseudoCityCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Agency's pseudo city code.  Example: LNJ2</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="DocumentInvoiceRemark">
		<xsd:annotation>
			<xsd:documentation>Document invoice remark group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences" maxOccurs="unbounded"/>
				</xsd:choice>
				<xsd:choice minOccurs="0">
					<xsd:element ref="SegmentIDRef"/>
					<xsd:element ref="FlightReferences"/>
				</xsd:choice>
				<xsd:element ref="Keyword" minOccurs="0"/>
				<xsd:element ref="Text"/>
				<xsd:sequence minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>needed for example for KeyWord AD</xsd:documentation>
					</xsd:annotation>
					<xsd:element ref="Amount"/>
					<xsd:element ref="CurrencyCode"/>
				</xsd:sequence>
			</xsd:sequence>
			<xsd:attribute name="Type" use="optional">
				<xsd:annotation>
					<xsd:documentation>Type of itinerary remark.  Values are:
A = Air
C = Car
H = Hotel
Example: A</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="A"/>
						<xsd:enumeration value="C"/>
						<xsd:enumeration value="H"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Keyword">
		<xsd:annotation>
			<xsd:documentation>Keyword.  Values are:

DS = Dollar save
PF = PTA fee amount
NP = Waived PTA fee amount
TK = Manual ticket numbers (replace the current description)
CA = Location, customer and selling agent 
BB  = Back office branch and account number
AC = Account number (replace the current description) 
AD - Invoice Adjustment Remarks 
DF = In foreign currency
FS = Fare save (replace the current description)
PT = PTA number
SF = Service fee
SA = Customer number SA account
SD = Customer number
CD = Customer number
RC = Routing code
FA = Faring agent remark
PH = Phone field override remark
Example: DS</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="DS"/>
				<xsd:enumeration value="PF"/>
				<xsd:enumeration value="NP"/>
				<xsd:enumeration value="TK"/>
				<xsd:enumeration value="CA"/>
				<xsd:enumeration value="BB"/>
				<xsd:enumeration value="AC"/>
				<xsd:enumeration value="DF"/>
				<xsd:enumeration value="FS"/>
				<xsd:enumeration value="PT"/>
				<xsd:enumeration value="SF"/>
				<xsd:enumeration value="SA"/>
				<xsd:enumeration value="SD"/>
				<xsd:enumeration value="CD"/>
				<xsd:enumeration value="RC"/>
				<xsd:enumeration value="FA"/>
				<xsd:enumeration value="PH"/>
				<xsd:enumeration value="AD"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="DuePaidText">
		<xsd:annotation>
			<xsd:documentation>Due paid text group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="DuePaidTextType"/>
				<xsd:element ref="Date" minOccurs="0"/>
				<xsd:element ref="DuePaidAmount"/>
				<xsd:element ref="CurrencyCode" minOccurs="0"/>
				<xsd:element ref="Text" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="Indicator" default="D">
				<xsd:annotation>
					<xsd:documentation>Due, paid or text indicator.  Values are:
D = Due
P = Paid
T = Text
Example: D</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="D"/>
						<xsd:enumeration value="P"/>
						<xsd:enumeration value="T"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="RateAmount" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Rate amount.  Example: 20000</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="OtherServiceInformation">
		<xsd:annotation>
			<xsd:documentation>Other service information group.  If TravelerAssociationNumber is not included, then OSI applies to all travelers.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences" maxOccurs="unbounded"/>
				</xsd:choice>
				<xsd:choice minOccurs="0">
					<xsd:element ref="SegmentIDRef"/>
					<xsd:element ref="FlightReferences"/>
				</xsd:choice>
				<xsd:element ref="AirlineCode"/>
				<xsd:element name="OSICode" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Conventional code (AIRIMP code) for other service information. Recommended to use when sending OSI to airline. Example: CTCA</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Text"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="SpecialServiceRequest">
		<xsd:annotation>
			<xsd:documentation>Special service request group.  If TravelerAssociationNumber is not included, then SSR applies to all travelers.  Same for SegmentAssociationNumber</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences" maxOccurs="unbounded"/>
				</xsd:choice>
				<xsd:choice minOccurs="0">
					<xsd:element ref="SegmentIDRef"/>
					<xsd:element ref="FlightReferences"/>
				</xsd:choice>
				<xsd:element ref="AirlineCode" minOccurs="0"/>
				<xsd:element ref="SSRCode"/>
				<xsd:element ref="NumberInParty" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Number of passengers/items.  Example: 1</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Text" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Quantity" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Amount of special service requested.  Example: 1</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Seat">
		<xsd:annotation>
			<xsd:documentation>Seat request group.

If SegmentIDRef is not included, then Seat request applies to all flight segments.

If the /PNRCreateRQ/EndTransaction element is present and an error occurs during seat processing, an information message will be returned, but XX/1 will still attempt to end transact the PNR.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="SegmentIDRef"/>
					<xsd:element ref="FlightReferences"/>
				</xsd:choice>
				<xsd:element ref="Assignment" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Seat assignment group

If TravelerIDRef is not included, then the seat assignment will be applied to all travelers. If more than traveler exists, this only makes sende for a Characteristic, not for a SeatLocation.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute ref="Source"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Assignment">
		<xsd:annotation>
			<xsd:documentation>Assignment group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:choice>
					<xsd:element ref="SeatLocation"/>
					<xsd:element ref="Characteristic"/>
				</xsd:choice>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Characteristic">
		<xsd:annotation>
			<xsd:documentation>Seat characteristic for generic seat request.  Values are:
NA = Non smoking aisle
NB = Non smoking bulkhead
NS = Non smoking seat
NW = Non smoking window
SA = Smoking aisle
SB = Smoking bulkhead
SS = Smoking seat
SW = Smoking window
Example: NW</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="Location" use="optional">
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="F"/>
								<xsd:enumeration value="L"/>
								<xsd:enumeration value="R"/>
								<xsd:enumeration value="T"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PricingInfo">
		<xsd:annotation>
			<xsd:documentation>Pricing information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:sequence>
					<xsd:choice minOccurs="0">
						<xsd:element name="TravelerIDRef" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>Reference to a Traveler element this PricingInfo is to be applied to.

If no TravelerIDRef is specified, the PricingInfo is applied to all Traveler. If at least one TravelerIDRef is specified to add a PassengerTypeCode override, all other Traveler to be priced must also be referenced by respective TravelerIDRef elements, whether they require a a PassengerTypeCode override or not.

Example: T1</xsd:documentation>
							</xsd:annotation>
							<xsd:complexType>
								<xsd:simpleContent>
									<xsd:extension base="xsd:string">
										<xsd:attribute name="PassengerTypeCode" type="xsd:string">
											<xsd:annotation>
												<xsd:documentation>The passenger type code to be applied *for pricing* for the traveler referenced by TravelerIDRef (See IATA PTC's).
		PassengerTypeCode is only required when there is a need to override the type code defined for the traveler via Traveler/@Type or resulting from agency/system defaults. This may be the case for instance 
- when booking a contract fare requiring a special type code (e.g. JCB)
- when booking a GOV fare for a traveler defined as ADT

Example: JCB</xsd:documentation>
											</xsd:annotation>
										</xsd:attribute>
									</xsd:extension>
								</xsd:simpleContent>
							</xsd:complexType>
						</xsd:element>
						<xsd:element ref="TravelerReferences" maxOccurs="unbounded"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element ref="SegmentIDRef" maxOccurs="unbounded"/>
						<xsd:element ref="FlightReferences" maxOccurs="unbounded"/>
					</xsd:choice>
					<xsd:choice minOccurs="0">
						<xsd:element ref="ServiceIDRef" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>Allows to price and re-priced new and existing (optional) services.

For booked services this is the reference to an existing ServiceElement, e.g. "8". For a new booking this references to the attribute AssociationID of the newly booked service element within this message, e.g. "S1"</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
						<xsd:element ref="ServiceReferences" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>This set of data values to be used instead of element number references.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:choice>
					<xsd:element name="FareCacheKey" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Internal fare reference for auto-exchanges.  Using this element requires a sessioned Auto-Exchange workflow.  This value is to be passed thru from a FlightPriceRS message when present.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="Restrictions" minOccurs="0"/>
					<xsd:element name="PricingCurrency" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Desired currency override for pricing only (not ticketing)
Example: EUR</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="AgencyType" minOccurs="0"/>
					<xsd:element ref="PrivateFares" minOccurs="0"/>
					<xsd:element ref="Commission" minOccurs="0"/>
					<xsd:element name="Endorsement" minOccurs="0" maxOccurs="3">
						<xsd:annotation>
							<xsd:documentation>Creates endorsements associated with the fare. See Type attribute  for details of endorsement types.

In general, on tickets issued manual endorsements will override those automatically generated by the GDS/CRS, which are then no longer visible in the PNR. 

However, if a GDS (e.g. Apollo, Sabre) returns both generated and manual endorsements stored w/ a fare, both will be present in PNRViewRS distinguished by their Type.

Amadeus allows only either-or mode - either manual or automatically generated enorsements will be present in the PNR.

Which endorsements will be printed on the ticket depends on GDS-specific logic. As a rule of thumb: manual will override generated.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:complexContent>
								<xsd:extension base="BasicEndorsement">
									<xsd:attribute name="Type" use="required">
										<xsd:annotation>
											<xsd:documentation>Identifies the creation mode of this line. Values are:

M - manual override entered by agent
P - manual agent entered to be appended to the automatically generated line.</xsd:documentation>
										</xsd:annotation>
										<xsd:simpleType>
											<xsd:restriction base="xsd:string">
												<xsd:length value="1"/>
												<xsd:enumeration value="M"/>
												<xsd:enumeration value="P"/>
											</xsd:restriction>
										</xsd:simpleType>
									</xsd:attribute>
								</xsd:extension>
							</xsd:complexContent>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="TicketingIdentifier" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Optional override element. Allows to override system settings for ticketing mode and force ticketing indicator in stored fare.
Values are:
E- E-Ticket
P - Paper Ticket

Restrictions:
Implemented for Sabre GDS only.  </xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:length value="1"/>
								<xsd:enumeration value="E"/>
								<xsd:enumeration value="P"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:element>
					<xsd:element ref="ValidatingCarrier" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Allows to specify the validating carrier for pricing. Example: DL</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="HistoricPricingDate" minOccurs="0"/>
				</xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="ManualPricing"/>
					<xsd:element ref="DiscountPricing"/>
					<xsd:element ref="ClassifiedFare"/>
					<xsd:element ref="DirectPricing"/>
				</xsd:choice>
			</xsd:sequence>
			<xsd:attribute name="FareType" default="PUBL">
				<xsd:annotation>
					<xsd:documentation>Type of fare being requested.  Values are:
PUBL = published fare
NEGO = Negotiated/private fare
PRIV = Private unified fares (Amadeus only)
BOTH = Published and negotiated fares
ATPC = ATPCO 
Example: PUBL</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:maxLength value="4"/>
						<xsd:minLength value="3"/>
						<xsd:enumeration value="PUBL"/>
						<xsd:enumeration value="NEGO"/>
						<xsd:enumeration value="PRIV"/>
						<xsd:enumeration value="BOTH"/>
						<xsd:enumeration value="ATPC"/>
						<xsd:enumeration value="OPT"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Price" default="N">
				<xsd:annotation>
					<xsd:documentation>Option to price PNR.  Values are:
Y = Yes
N = No
Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:maxLength value="1"/>
						<xsd:minLength value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="StorePrice" default="N">
				<xsd:annotation>
					<xsd:documentation>Option to store price in PNR.  Values are:
Y = Yes
N = No
Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:maxLength value="1"/>
						<xsd:minLength value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="BestPricing" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Used to find the best fare available regardless of the class of service requested.  Possible values are:
Y = get the best fare available
N = price accordingly to the other parameters in the PricingInfo group.
Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="ConnectionSelection" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Indicates if a connection selection pricing must be applied in Sabre.  Possible values are:
- Y: apply connection selection pricing
- N: do not apply connection selection pricing (default)
Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="PriceServicesOnly">
				<xsd:annotation>
					<xsd:documentation>Allowed value: Y

Used to price and reprice optional service without repricing base fare, typically set after selections from a ServiceListRS message</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="AutoExchange">
				<xsd:annotation>
					<xsd:documentation>Allowed value = "Y"

Identifies this fare as a returned solution from an auto-exchanging application such as ITA Reshop.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PrivateFares">
		<xsd:annotation>
			<xsd:documentation>Negotiated fares (Private Fares) group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Office"/>
				<xsd:element ref="Corporate" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="PromoCodes" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="LoyaltyPrograms" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Loyalty Program data</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="LoyaltyMemberID">
								<xsd:annotation>
									<xsd:documentation>Membership number </xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="Name">
								<xsd:annotation>
									<xsd:documentation>Individual Program name</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element ref="AirlineCode">
								<xsd:annotation>
									<xsd:documentation>Airline code of the airline offering this Loyaty Program</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerInfo" maxOccurs="unbounded"/>
					<xsd:element name="PassengerType" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>Passenger Type Codes to be used for itinerary pricing.  You can use ADT, CHD etc. if you don't store the PAX type in the name filed or override here the stored type with contract specific PAX types - JCB for bulk adult inventory.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:choice minOccurs="0">
									<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
									<xsd:element ref="TravelerReferences" maxOccurs="unbounded"/>
								</xsd:choice>
								<xsd:element name="Code" type="xsd:string">
									<xsd:annotation>
										<xsd:documentation>Contract and/or GDS specific PassengerType Code. See IATA PTC's Example: JCB</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Office">
		<xsd:annotation>
			<xsd:documentation>Pseudo city under which private fares are stored.  Example: 1C1K</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="Provider" use="required">
						<xsd:annotation>
							<xsd:documentation>Code of the provider system that holds the private fares. Possibles values are:
1A = Amadeus
1B = Abacus
1V = Apollo
1G = Galileo
1S = Sabre (also 1W)
1P = Worldspan
F1 = Farelogix
Example: 1V</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:length value="2"/>
								<xsd:enumeration value="1A"/>
								<xsd:enumeration value="1W"/>
								<xsd:enumeration value="1P"/>
								<xsd:enumeration value="1V"/>
								<xsd:enumeration value="1G"/>
								<xsd:enumeration value="1S"/>
								<xsd:enumeration value="1B"/>
								<xsd:enumeration value="F1"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Corporate">
		<xsd:annotation>
			<xsd:documentation>Corporate information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:element ref="AirlineCode" minOccurs="0"/>
				<xsd:element ref="Account" minOccurs="0"/>
				<xsd:element ref="Contract" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="CorporateIndex">
				<xsd:annotation>
					<xsd:documentation>Corporation associated with this program</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PromoCodes">
		<xsd:annotation>
			<xsd:documentation>Corporate info group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:element ref="AirlineCode" minOccurs="0"/>
				<xsd:element name="PromoCode">
					<xsd:annotation>
						<xsd:documentation>Code ID / Number</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="CorporateIndex">
				<xsd:annotation>
					<xsd:documentation>Corporation associated with this program</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Account">
		<xsd:annotation>
			<xsd:documentation>Specifies the corporate account number to use to price private fares.  Example: 000243</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string"/>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Contract" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Specifies the contract code, to use to price private fares.  Example: 00001</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="EndTransaction">
		<xsd:annotation>
			<xsd:documentation>End of transaction group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="PNRName" minOccurs="0"/>
				<xsd:element ref="PseudoCityCode" minOccurs="0"/>
				<xsd:element ref="Queue" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="TransactionType" use="required">
				<xsd:annotation>
					<xsd:documentation>End of transaction type.  Values are:
ET = End transaction
ER = End transaction and retrieve PNR
IG = Ignore transaction
IR = Ignore transaction and retrieve PNR
RD = Redisplay
QT = End transaction and queue
QR = End transaction, queue and retrieve PNR
EK = Confirm schedule changes and end transact (only supported for Amadues and Apollo so far)

Example: ET</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="ET"/>
						<xsd:enumeration value="ER"/>
						<xsd:enumeration value="IG"/>
						<xsd:enumeration value="IR"/>
						<xsd:enumeration value="RD"/>
						<xsd:enumeration value="QT"/>
						<xsd:enumeration value="QR"/>
						<xsd:enumeration value="EK"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="IgnoreWarnings" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Option to ignore warning for change of segments with restricted class of service.  Values are:  Y = Yes, N = No.  Example: N</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PNRName" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Free text entered by the user to identify the PNR easily by this text instead of the record locator.  Example: Houston Trip</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="QueueCategory" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Queue category.  Example: 10</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Traveler">
		<xsd:annotation>
			<xsd:documentation>Traveler group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="TravelerName"/>
				<xsd:element ref="Infant" minOccurs="0"/>
				<xsd:element ref="DiscountInfo" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="AssociationID" type="xsd:ID" use="required">
				<xsd:annotation>
					<xsd:documentation>Unique traveler ID used to associate other elements to this traveler at PNR creation time.  Example: T1</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Type" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>Passenger type.  Values are: ADT = Adult, INS = Infant occupying seat, CHD = Child, YTH = Youth, MIL = Military, GOV = Government, SRC = Senior Citizen, STD = Student (Example: ADT)</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="PartyAssociation">
				<xsd:annotation>
					<xsd:documentation>This association identifies a group of travelers as a single party, most typically is a group by Surname

Allowed value:  
Pnn (P01-P99)</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="TopTierAssociation">
				<xsd:annotation>
					<xsd:documentation>Associated a top tier member with a companion(s)  for the purpose of extended top tier benefits.

Allowed value:  
Tnn (T01-T99)</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FrequentTravelerGroup">
		<xsd:annotation>
			<xsd:documentation>FrequentTravelerGroup</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice>
					<xsd:element ref="TravelerIDRef"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:sequence>
					<xsd:element ref="FFCompanyCode"/>
					<xsd:element ref="FFNumber"/>
					<xsd:element ref="FFFlyingCompany" minOccurs="0"/>
					<xsd:element name="SubscriberName" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Name group</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element ref="Surname">
									<xsd:annotation>
										<xsd:documentation>Subscriber family name.  Example: SMITH</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element ref="GivenName">
									<xsd:annotation>
										<xsd:documentation>Subscriber given (first) name. Example: JANE</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element ref="Initial" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Suscriber initial or middle name Example: G or George</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element ref="Title" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Subscriber title.  Example: MISS, MRS, REV</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
				<xsd:element name="FreqGuestNumber" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Frequent Guest Card and Status information</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element ref="CompanyCode"/>
							<xsd:element ref="IDNumber">
								<xsd:annotation>
									<xsd:documentation>Frequent Renter or Guest ID number.  Example: 0956301007</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element ref="ProgramName" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Program name.  

Example: 
Miles and More (air)
Hilton HHonors (hotel)
Emerald Club (car)</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="Association" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Associated airline frequent flyer program.  This is the frequent flyer program a traveler assigns in order to earn additional miles/points from hotel and/or car companies</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element ref="AirlineCode">
											<xsd:annotation>
												<xsd:documentation>Issuing Airline Code.  Example: LH</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element ref="IDNumber">
											<xsd:annotation>
												<xsd:documentation>Frequent flyer ID number.  Example: 0956301007</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
						<xsd:attribute name="Type">
							<xsd:annotation>
								<xsd:documentation>Identified association to one of the following groups:

C = CAR
H = HOTEL </xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="OtherMemberships" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Discount Cards such as AAA, AARP, etc.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element ref="AssociationCode" minOccurs="0"/>
							<xsd:element ref="IDNumber">
								<xsd:annotation>
									<xsd:documentation>Membership ID number.  Example: 0956301007</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element ref="ProgramName" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Program name.  

Example: 
AARP Membership
AAA Membership</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="BillingAndDeliveryData">
		<xsd:annotation>
			<xsd:documentation>Billing and delivery data group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="FormOfPayment" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>A FormOfPayment element specifies, which means of payment (i.e CreditCard or Other) is/are to be used to pay for a PNR or parts of it.

If TravelerIDRef elements are left out, the FormOfPayment refers to all travelers. If SegmentIDRef elements are left out, the FormOfPayment refers to all segments. 

A FormOfPayment with more than one means of payment (CreditCard and/or Other child elements) is referred to as a "split payment". For a split payment, one must specify (either for all or all but one of the means of payment), which amount to pay using each means of payment (see PartialAmount attributes). This can only be done in a meaningful way, if all segments the FormOfPayment refers to are paid for in one and the same currency, as the PartialAmount values refer to this currency and its number of decimals.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="AddressGroup" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="NumberOfCars" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Number of cars being sold.  Example: 1</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="AddressGroup">
		<xsd:annotation>
			<xsd:documentation>Address group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences" maxOccurs="unbounded"/>
				</xsd:choice>
				<xsd:choice minOccurs="0">
					<xsd:element ref="SegmentIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="FlightReferences" maxOccurs="unbounded"/>
				</xsd:choice>
				<xsd:element name="OptionalCompanyName" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Addressee's if the addressee as an organisation.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="OptionalName" minOccurs="0"/>
				<xsd:element ref="Address" maxOccurs="2"/>
				<xsd:element ref="City"/>
				<xsd:element ref="PostalCode"/>
				<xsd:element ref="StateCode" minOccurs="0"/>
				<xsd:element ref="Country"/>
				<xsd:element ref="CountryCode">
					<xsd:annotation>
						<xsd:documentation>ISO Country code. This element is introduced as mandatory although GDS implementation will not require its presence until 30MAR2008.

Example: US</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Use" use="optional">
				<xsd:annotation>
					<xsd:documentation>Indicates use of address information.  Values are:
B = Billing
D = Delivery
A = Agency address (Sabre)
H = Mailing home address (Amadeus)
O = Mailing miscellaneous address (Amadeus)
M = Mailing address (Amadeus)

As you can see B and D are supported by all GDS. See for GDS specific address types above.

Example: D</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:length value="1"/>
						<xsd:enumeration value="B"/>
						<xsd:enumeration value="D"/>
						<xsd:enumeration value="A"/>
						<xsd:enumeration value="H"/>
						<xsd:enumeration value="O"/>
						<xsd:enumeration value="M"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="SplitItems" use="optional">
				<xsd:annotation>
					<xsd:documentation>Indicates if the address elements should be split in the reservation system across multiple lines (entries). Possible values are: 
Y = split entries
N = do not split and keep all elements into one entry
Example: N</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"/>
						<xsd:maxLength value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ServiceIDRef">
		<xsd:annotation>
			<xsd:documentation>ID reference used to asscociate this item to a service item.

Example: S1</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string"/>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FormOfPayment">
		<xsd:annotation>
			<xsd:documentation>Form of payment group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences" maxOccurs="unbounded"/>
				</xsd:choice>
				<xsd:choice minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Note: When attribute ServicesOnly is set to "Y" there can not be any SegmentElementNumber association (traveler association is allowed) </xsd:documentation>
					</xsd:annotation>
					<xsd:element ref="SegmentIDRef" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>ID reference used to asscociate this item to a segment.  

Example: F1</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="FlightReferences" maxOccurs="unbounded"/>
				</xsd:choice>
				<xsd:choice minOccurs="0">
					<xsd:element ref="ServiceIDRef" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>Allows to price and re-priced new and existing (optional) services.

For booked services this is the reference to an existing ServiceElement, e.g. "8". For a new booking this references to the attribute AssociationID of the newly booked service element within this message, e.g. "S1"</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="ServiceReferences" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>This set of data values to be used instead of element number references.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
				<xsd:choice maxOccurs="3">
					<xsd:element ref="CreditCard"/>
					<xsd:element ref="Other">
						<xsd:annotation>
							<xsd:documentation>Other payment information.  Example: CHECK, CASH</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
			</xsd:sequence>
			<xsd:attribute name="ServicesOnly">
				<xsd:annotation>
					<xsd:documentation>Identifies that this FOP is only used for Services as defined under the "Service" node. When set to yes, NO "SegmenetElementNumber" reference is allowed (Traveler association still allowed).  Values: Y and N (default)</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FlightArrival">
		<xsd:annotation>
			<xsd:documentation>Flight arrival information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirlineCode"/>
				<xsd:element ref="FlightNumber"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Queue">
		<xsd:annotation>
			<xsd:documentation>Queue group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="PseudoCityCode" minOccurs="0"/>
				<xsd:element ref="Date" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Date for future queue placement in ISO 8601 format (yyyy-mm-dd).  

If a Date is specified, this will trigger a future queue placement (a.k.a "queue minder"). Specifying the current date will result in an error.

Example: 2001-12-25</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element ref="QueueNumber"/>
						<xsd:element ref="QueueCategory">
							<xsd:annotation>
								<xsd:documentation>Queue category. 
Since Sabre does not have queue categories, this value is used as a PIC (Prefatory Instruction Code).

Example: 10</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
					<xsd:sequence>
						<xsd:element ref="QueueName"/>
						<xsd:element ref="QueueCategory" minOccurs="0"/>
					</xsd:sequence>
				</xsd:choice>
			</xsd:sequence>
			<xsd:attribute ref="Source"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DiscountInfo">
		<xsd:annotation>
			<xsd:documentation>Passenger discount information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Type" minOccurs="0"/>
				<xsd:element ref="Amount" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Restrictions">
		<xsd:annotation>
			<xsd:documentation>Pricing restrictions group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="TravelerInfo" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="MinimumStay" default="Y">
				<xsd:annotation>
					<xsd:documentation>Allow fares with minimum stay requirement.  Values are:
Y = Yes
N = No
Default: Y
Example: N</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:maxLength value="1"/>
						<xsd:minLength value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="MaximumStay" default="Y">
				<xsd:annotation>
					<xsd:documentation>Allow fares with maximum stay requirement.  Values are:
Y = Yes
N = No
Default: Y
Example: N</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:maxLength value="1"/>
						<xsd:minLength value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Advance" default="Y">
				<xsd:annotation>
					<xsd:documentation>Allow fares with advance requirement.  Values are:
Y = Yes
N = No
Default: Y
Example: N</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:maxLength value="1"/>
						<xsd:minLength value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Penalty" default="Y">
				<xsd:annotation>
					<xsd:documentation>Allow fares with penalty restrictions.  Values are:
Y = Yes
N = No
Default: Y
Example: N</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:maxLength value="1"/>
						<xsd:minLength value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="BookingCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Hotel booking code.  Example: A1KRAC</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Carrier">
		<xsd:annotation>
			<xsd:documentation>Flight carrier group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:annotation>
					<xsd:documentation>IMPORTANT:
Note thatFlightNumber element is mandatory for regular flight sell. Only optional for OPEN segments . See also Flight/@Ttype=O  attribute of the Flight element.</xsd:documentation>
				</xsd:annotation>
				<xsd:element ref="AirlineCode"/>
				<xsd:element ref="FlightNumber" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Location" type="CarLocation">
		<xsd:annotation>
			<xsd:documentation>Location group</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CarVendorCode">
		<xsd:annotation>
			<xsd:documentation>Car vendor code.  Example: ZI</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="LinkType" use="optional">
						<xsd:annotation>
							<xsd:documentation>Link Type.  Values are:
GCM = Galileo carmaster only participant
GLP = Galileo link partner
ASA = Amadeus standard access
ACA= Amadeus complete access
ACP= Amadeus complete access plus
SDA= Sabre direct connect access
SDC= Sabre direct connect sell
SOL= Sabre other link type
WAP= WebSphereDIR
WMP= WebSphereDIR
WNA= WebSphereDIR

AMADEUS default is ASA

Example: ASA</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="3"/>
								<xsd:maxLength value="3"/>
								<xsd:enumeration value="GCM">
									<xsd:annotation>
										<xsd:documentation>Galileo carmaster only participant</xsd:documentation>
									</xsd:annotation>
								</xsd:enumeration>
								<xsd:enumeration value="GLP">
									<xsd:annotation>
										<xsd:documentation>Galileo link partner</xsd:documentation>
									</xsd:annotation>
								</xsd:enumeration>
								<xsd:enumeration value="ASA">
									<xsd:annotation>
										<xsd:documentation>Amadeus standard access</xsd:documentation>
									</xsd:annotation>
								</xsd:enumeration>
								<xsd:enumeration value="ACA">
									<xsd:annotation>
										<xsd:documentation>Amadeus complete access</xsd:documentation>
									</xsd:annotation>
								</xsd:enumeration>
								<xsd:enumeration value="ACP">
									<xsd:annotation>
										<xsd:documentation>Amadeus complete access plus</xsd:documentation>
									</xsd:annotation>
								</xsd:enumeration>
								<xsd:enumeration value="SDA">
									<xsd:annotation>
										<xsd:documentation>Sabre direct connect access</xsd:documentation>
									</xsd:annotation>
								</xsd:enumeration>
								<xsd:enumeration value="SDC">
									<xsd:annotation>
										<xsd:documentation>Sabre direct connect sell</xsd:documentation>
									</xsd:annotation>
								</xsd:enumeration>
								<xsd:enumeration value="SOL">
									<xsd:annotation>
										<xsd:documentation>Sabre other link type</xsd:documentation>
									</xsd:annotation>
								</xsd:enumeration>
								<xsd:enumeration value="WAP">
									<xsd:annotation>
										<xsd:documentation>WebSphereDIR</xsd:documentation>
									</xsd:annotation>
								</xsd:enumeration>
								<xsd:enumeration value="WMP">
									<xsd:annotation>
										<xsd:documentation>WebSphereDIR</xsd:documentation>
									</xsd:annotation>
								</xsd:enumeration>
								<xsd:enumeration value="WNA">
									<xsd:annotation>
										<xsd:documentation>WebSphereDIR</xsd:documentation>
									</xsd:annotation>
								</xsd:enumeration>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CarType" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Car type.  Example: ECAR</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="RateOptions">
		<xsd:annotation>
			<xsd:documentation>Rate options group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="RateCode"/>
				<xsd:element ref="RateAmount"/>
				<xsd:element ref="CurrencyCode"/>
				<xsd:element name="RateID" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Rate identification number.  Example: 153425</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="RateQualifier" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="Type" use="optional">
				<xsd:annotation>
					<xsd:documentation>Rate type.  Values are:
D = Daily
E = Weekend
W = Weekly
M = Monthly
H = Hourly
P = Package
Example: W</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="D"/>
						<xsd:enumeration value="E"/>
						<xsd:enumeration value="W"/>
						<xsd:enumeration value="M"/>
						<xsd:enumeration value="H"/>
						<xsd:enumeration value="P"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Category" use="optional">
				<xsd:annotation>
					<xsd:documentation>Rate category.  Values are:
A = Association
B = Business standard
C = Corporate
G = Government
I = Industry (Travel)
K = Package
L = Inclusive 
P = Promotional
R = Credential
S = Standard
U = Consortium
V = Convention
X = Negotiated
Example: G</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="A"/>
						<xsd:enumeration value="B"/>
						<xsd:enumeration value="C"/>
						<xsd:enumeration value="G"/>
						<xsd:enumeration value="I"/>
						<xsd:enumeration value="K"/>
						<xsd:enumeration value="L"/>
						<xsd:enumeration value="P"/>
						<xsd:enumeration value="R"/>
						<xsd:enumeration value="S"/>
						<xsd:enumeration value="U"/>
						<xsd:enumeration value="V"/>
						<xsd:enumeration value="X"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CorporateRateOverride" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Corporate rate override.  Example: 25900</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CorporateDiscountNumber" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Corporate discount number.  Example: 5643356</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CCCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Credit card code.  Example: VI</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CCNumber" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Credit card number.  Example: 4011236654652341</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="NumberOfNights" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Number of nights.  Example: 5</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Room">
		<xsd:annotation>
			<xsd:documentation>Room detail group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="BookingCode"/>
				<xsd:element ref="RateCategory" minOccurs="0"/>
				<xsd:element ref="RoomType"/>
				<xsd:element ref="NumberOfRooms"/>
				<xsd:element ref="RateAmount" minOccurs="0"/>
				<xsd:element ref="CurrencyCode" minOccurs="0"/>
				<xsd:element ref="RateCode" minOccurs="0" maxOccurs="3"/>
				<xsd:element ref="RoomOptions" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="RateCategory">
		<xsd:annotation>
			<xsd:documentation>Rate category.  Values are:

ASN = Association
CLB = Club
CON = Convention
COR = Corporate
DAY = Day room
FAM = Family
GOV = Government
MIL = Military
NEG = Negotiated
PKG = Package
PRO = Promotional
RAC = Standard 
SPE = Special
SRS = Senior citizen
STP = Stopover
TUR = Tour
TVL = Travel industry
WKD = Weekend
Example: GOV</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="ASN"/>
				<xsd:enumeration value="CLB"/>
				<xsd:enumeration value="CON"/>
				<xsd:enumeration value="COR"/>
				<xsd:enumeration value="DAY"/>
				<xsd:enumeration value="FAM"/>
				<xsd:enumeration value="GOV"/>
				<xsd:enumeration value="MIL"/>
				<xsd:enumeration value="NEG"/>
				<xsd:enumeration value="PKG"/>
				<xsd:enumeration value="PRO"/>
				<xsd:enumeration value="RAC"/>
				<xsd:enumeration value="SPE"/>
				<xsd:enumeration value="SRS"/>
				<xsd:enumeration value="STP"/>
				<xsd:enumeration value="TUR"/>
				<xsd:enumeration value="TVL"/>
				<xsd:enumeration value="WKD"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="TravelerName">
		<xsd:annotation>
			<xsd:documentation>Name group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Surname"/>
				<xsd:element ref="GivenName"/>
				<xsd:element ref="Initial" minOccurs="0"/>
				<xsd:element ref="Title" minOccurs="0"/>
				<xsd:choice minOccurs="0">
					<xsd:element ref="Age" minOccurs="0"/>
					<xsd:element ref="DateOfBirth" minOccurs="0"/>
				</xsd:choice>
				<xsd:element ref="NameRemark" minOccurs="0"/>
				<xsd:element ref="Gender" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Traveler gender.  Values are: F = Female M = Male.  Example: M</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="ProfileIndex" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FFCompanyCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Frequent flyer company code.  Example: AF</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="FFNumber" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Frequent flyer number.  Example: 0956301007</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Telephone">
		<xsd:annotation>
			<xsd:documentation>Telephone group.  *Please note that Galileo does not support TravelerIDRef is in this group.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences" maxOccurs="unbounded"/>
				</xsd:choice>
				<xsd:element ref="TelephoneNumber"/>
				<xsd:element ref="CityCode" minOccurs="0"/>
				<xsd:element ref="StateCode" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>State code.  Example: NY</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="CountryCode" minOccurs="0"/>
				<xsd:element name="Remark" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Freeflow text remark.

Example: After Hours</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Type" use="optional">
				<xsd:annotation>
					<xsd:documentation>Phone type.  Values are:
A = AGENCY
B = BUSINESS
C = CELLULAR
F = FAX
H = HOME
M = MOBILE
O = OTHER Example: H</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="A"/>
						<xsd:enumeration value="B"/>
						<xsd:enumeration value="C"/>
						<xsd:enumeration value="F"/>
						<xsd:enumeration value="H"/>
						<xsd:enumeration value="M"/>
						<xsd:enumeration value="O"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DuePaidAmount" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Due or paid amount.  Example: 15200</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="DuePaidTextType">
		<xsd:annotation>
			<xsd:documentation>Due paid text type.  Values are:
AS = Surface
AX = Air taxi
AT = Tour operator
AH = Airimp hotel
AC = Airimp car
Example: AS</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="AS"/>
				<xsd:enumeration value="AX"/>
				<xsd:enumeration value="AT"/>
				<xsd:enumeration value="AH"/>
				<xsd:enumeration value="AC"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="SeatLocation">
		<xsd:annotation>
			<xsd:documentation>Seat assignment location for specific seat request.  Example: 03A</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="Position">
						<xsd:annotation>
							<xsd:documentation>Column position in the plane. Possible values are:
W = Window
A = Aisle
C = Center (between two seats)
WA = Window on one side and aisle on the other side
AW = Aisle on one side and window on the other side
Example: W</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="ExitRow">
						<xsd:annotation>
							<xsd:documentation>Values allowed: Y/N</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="SSRCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Special service request code.  IATA standard.  Example: VGML</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Amount" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Monetary amount.  This is the real amount without the decimal point.  An amount of 10000 means 100.00 Example:  100     </xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="TelephoneNumber" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Telephone number.  Example: 305-269-6975</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Issued" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Ticket issued.  Leave this element empty to create "issued ticket" ticketing element.  Example: - </xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="TimeLimit">
		<xsd:annotation>
			<xsd:documentation>Time limit group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Date"/>
				<xsd:element ref="Time"/>
				<xsd:element ref="PseudoCityCode" minOccurs="0"/>
				<xsd:element ref="AirportCode" minOccurs="0"/>
				<xsd:element ref="AirlineCode" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Prepaid" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Prepaid ticketing.  Leave this element empty to create "prepaid ticket" ticketing element.  Example: - </xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Native" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>This is for the input of any ticketing native command.  Example: 7TAW</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CCExpiration">
		<xsd:annotation>
			<xsd:documentation>Credit card expiration group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Month"/>
				<xsd:element ref="Year"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Month">
		<xsd:annotation>
			<xsd:documentation>Credit card expiration month.  Example: 02</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:length value="2"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Year">
		<xsd:annotation>
			<xsd:documentation>Last two digits of the credit card expiration year.  Example: 06</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:length value="2"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="CardholderLastName">
		<xsd:annotation>
			<xsd:documentation>Credit card holder's last name.  This is only required for Sabre.  Example: SMITH</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="RecordLocator">
		<xsd:annotation>
			<xsd:documentation>PNR record locator used to indicate to which PNR the create elements should be added to.  Example: VP1256</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="6"/>
				<xsd:maxLength value="6"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="QueueName" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Used to queue pnr.  Example: Schedule Changes</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="NameRemark" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Free text name remark.  Example: A123456</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="FrequentFlyer">
		<xsd:annotation>
			<xsd:documentation>Frequent flyer group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="FFCode" minOccurs="0"/>
				<xsd:element ref="FFNumber"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FFCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Frequent flyer code.  Example: DL</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="UserRemark">
		<xsd:annotation>
			<xsd:documentation>User defined remark group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="UserNumber"/>
				<xsd:element ref="Text"/>
			</xsd:sequence>
			<xsd:attribute name="InhibitPrint" use="required">
				<xsd:annotation>
					<xsd:documentation>Option to print remark.  Values are:
Y = Inhibit remark print on invoice
N = Print remark on invoice  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"/>
						<xsd:maxLength value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="HistoricalRemark">
		<xsd:annotation>
			<xsd:documentation>Historical remark group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Text"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="UserNumber" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>User defined number.  Example: 82</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="AccountingLine">
		<xsd:annotation>
			<xsd:documentation>Accounting line information</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice>
					<xsd:element ref="SegmentIDRef">
						<xsd:annotation>
							<xsd:documentation>ID reference used to asscociate this item to a segment.  

Example: F1</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="FlightReferences"/>
				</xsd:choice>
				<xsd:element ref="VendorText"/>
				<xsd:element ref="ChargeCode"/>
				<xsd:element ref="ReceiptNumber" minOccurs="0"/>
				<xsd:element ref="Commission"/>
				<xsd:element ref="BaseAmount"/>
				<xsd:element ref="TaxAmount"/>
				<xsd:element ref="TaxSurcharge" minOccurs="0"/>
				<xsd:element ref="FareApplication"/>
				<xsd:element ref="Payment"/>
				<xsd:element ref="NumberOfDocuments"/>
				<xsd:element ref="Text" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="Type" use="required" fixed="OTH">
				<xsd:annotation>
					<xsd:documentation>Accounting line type.  It can either be a supplier name or a vendor code or a number or segment type.  Today it's value is fixed and can be only OTH, which means we only support OTH type accounting line.  Example: OTH</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="3"/>
						<xsd:maxLength value="3"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="VendorText">
		<xsd:annotation>
			<xsd:documentation>Free text vendor code.  Example: TAXREC</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="6"/>
				<xsd:maxLength value="6"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="ChargeCode">
		<xsd:annotation>
			<xsd:documentation>Charge description code.  Example: EMA</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="3"/>
				<xsd:maxLength value="3"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="ReceiptNumber" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Ticket or voucher receipt number.  Example: 1234567</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Commission" type="CommissionType">
		<xsd:annotation>
			<xsd:documentation>Commission percentage or amount.  Example: 20.00</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="BaseAmount">
		<xsd:annotation>
			<xsd:documentation>Base fare amount.  Example: 120.00</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="Type" use="required">
						<xsd:annotation>
							<xsd:documentation>Commission type.  Values are: P = Percent, A = Amount  Example: A</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="P"/>
								<xsd:enumeration value="A"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="TaxAmount">
		<xsd:annotation>
			<xsd:documentation>Tax amount.  Example: 1000</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="Type" use="required">
						<xsd:annotation>
							<xsd:documentation>Commission type.  Values are: P = Percent, A = Amount  Example: A</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="P"/>
								<xsd:enumeration value="A"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FareApplication">
		<xsd:annotation>
			<xsd:documentation>Fare application information.  Possible values are:
ONE = total amount for one passenger
PER = total amount per person in the group
ALL = total amount for all passengers
Example: ALL</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="3"/>
				<xsd:maxLength value="3"/>
				<xsd:enumeration value="ONE"/>
				<xsd:enumeration value="PER"/>
				<xsd:enumeration value="ALL"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="NumberOfDocuments" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Number of documents.  Example: 1</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Payment" type="Payment_Type">
		<xsd:annotation>
			<xsd:documentation>Payment information group</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="TaxSurcharge" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Tax surcharge information.  Example: 20.00</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CreditCardInformation">
		<xsd:annotation>
			<xsd:documentation>Credit Card information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="CreditCardInformationType"/>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PricingInstruction">
		<xsd:annotation>
			<xsd:documentation>Pricing instruction.  Empty for attribute Type = S. Contains pricing command for Type = P and M. Example: Y//DA25.00</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="Type" use="required">
						<xsd:annotation>
							<xsd:documentation>Pricing instruction type.  Values are: P = Price only
S = Store Price
M = Manual Store Price  Example: P</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="P"/>
								<xsd:enumeration value="S"/>
								<xsd:enumeration value="M"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="TicketingInstructions">
		<xsd:annotation>
			<xsd:documentation>Ticketing instruction for future ticketing and pricing processes group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element ref="SecondaryAction" maxOccurs="unbounded"/>
					<xsd:element ref="PricingInstruction" minOccurs="0"/>
				</xsd:sequence>
				<xsd:element name="TicketExchange">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:choice minOccurs="0">
								<xsd:element ref="TravelerIDRef"/>
								<xsd:element ref="TravelerReferences"/>
							</xsd:choice>
							<xsd:choice minOccurs="0">
								<xsd:element ref="SegmentIDRef">
									<xsd:annotation>
										<xsd:documentation>ID reference used to asscociate this item to a segment.  

Example: F1</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element ref="FlightReferences"/>
							</xsd:choice>
							<xsd:element name="CommissionGroup" minOccurs="0">
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="Commission">
											<xsd:complexType>
												<xsd:simpleContent>
													<xsd:restriction base="CommissionType"/>
												</xsd:simpleContent>
											</xsd:complexType>
										</xsd:element>
										<xsd:element name="OldCommission" minOccurs="0">
											<xsd:complexType>
												<xsd:simpleContent>
													<xsd:extension base="CommissionType"/>
												</xsd:simpleContent>
											</xsd:complexType>
										</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="PaymentGroup" minOccurs="0">
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="Payment" type="Payment_Type"/>
										<xsd:element name="OldPayment" minOccurs="0">
											<xsd:complexType>
												<xsd:complexContent>
													<xsd:extension base="Payment_Type"/>
												</xsd:complexContent>
											</xsd:complexType>
										</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="OriginalDocument" type="DocumentIssueType"/>
							<xsd:element name="ExchangeForDocument" minOccurs="0" maxOccurs="2">
								<xsd:complexType>
									<xsd:complexContent>
										<xsd:extension base="DocumentIssueType"/>
									</xsd:complexContent>
								</xsd:complexType>
							</xsd:element>
							<xsd:element ref="Amount" minOccurs="0"/>
							<xsd:element ref="BaseAmount" minOccurs="0"/>
							<xsd:element ref="TaxAmount" minOccurs="0"/>
							<xsd:element name="PenaltyAmount" type="xsd:string" minOccurs="0"/>
							<xsd:element ref="Text" minOccurs="0"/>
						</xsd:sequence>
						<xsd:attribute name="Type" use="required">
							<xsd:annotation>
								<xsd:documentation>Type of exchange: E-even eschange, R - residual value exchange, A - add-collect exchange</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:length value="1"/>
									<xsd:enumeration value="E"/>
									<xsd:enumeration value="R"/>
									<xsd:enumeration value="A"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:choice>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="SecondaryAction">
		<xsd:annotation>
			<xsd:documentation>Secondary action data for future process. The data depends on the Code attribute. Possibile SecondaryAction values when:
Code = A : Airline Validation
     Airline code

Code = E : Electronic Ticketing
     D = Default
     O = Override electronic ticketing default
    
Code = H : Hemisphere Code
     0 = UNITED STATES /EXCLUDING HAWAII/
     1 = MEXICO/CENTRAL AMERICA
     2 = CARIBBEAN
     3 = SOUTH AMERICA
     4 = EUROPE/GREENLAND
     5 = AFRICA
     6 = MIDDLE EAST/WESTERN ASIA
     7 = ASIA
     8 = AUSTRALIA/NEW ZEALAND/SOUTH PACIFIC AND HAWAII
     9 = CANADA

Code = J : Journey Code
     1 = BUSINESS
     2 = PLEASURE
     3 = SELECTED CHARTERS

Code = K : Commission
     amount (ex: 20.00)  or
     P + percent (ex: P5)

Code = P : Passenger Type
     Passenger Types or Discount Codes separated by a / (ex: ADT/CHD)

Code = U : Tour Order Number
     I + tour number = Inclusive (ex: I123456)
     B + tour number = Bulk inclusive (ex: B123456)
     N + tour number = (ex: N123456)
Example: B123456</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="Code" use="required">
						<xsd:annotation>
							<xsd:documentation>Secondary action codes for future ticketing process.  Possible values are:
A = AIRLINE VALIDATION

E = ELECTRONIC TICKETING

H = HEMISPHERE CODE (FOR CANADIAN AGENCIES)

J = JOURNEY CODE (FOR CANADIAN AGENCIES)

K = COMMISSION

P = PASSENGER TYPE

U = TOUR ORDER NUMBER 
Q = PRICING COMMAND

Example: K</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="A"/>
								<xsd:enumeration value="E"/>
								<xsd:enumeration value="H"/>
								<xsd:enumeration value="J"/>
								<xsd:enumeration value="K"/>
								<xsd:enumeration value="P"/>
								<xsd:enumeration value="U"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="MoveFromProfile">
		<xsd:annotation>
			<xsd:documentation>Contains information that needs to be moved from a Profile into PNR</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AgencyProfile" minOccurs="0"/>
				<xsd:element ref="PseudoCityCode" minOccurs="0"/>
				<xsd:element ref="BusinessProfile" minOccurs="0"/>
				<xsd:element ref="TravelerProfile" minOccurs="0"/>
				<xsd:element ref="StartLine" minOccurs="0"/>
				<xsd:element ref="EndLine" minOccurs="0"/>
				<xsd:element name="RefLineNumber" type="xsd:nonNegativeInteger" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Line number in the profile display. The profile will be moved by line reference. Supported only in sessioned mode.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="MoveAgencyProfile">
				<xsd:annotation>
					<xsd:documentation>This indicator controls whether agency profile should be moved into PNR along with business/personal profiles. Values are: 
Y = automatically move agency profile, 
N = do not move agency profile automatically (this is the default.).
Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:length value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AgencyProfile" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Agency profile.  Example: A Tours</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="BusinessProfile" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Business profile.  Example: Business</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="TravelerProfile" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Travel profile.  Example: PUBLIC/JOHN</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="StartLine" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Profile start line of elements to be moved into PNR.  Example: 1</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="EndLine" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Profile end line of elements to be moved into PNR.  Example: 4</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="DiscountPricing">
		<xsd:annotation>
			<xsd:documentation>Pricing fare basis and discount information</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="DiscountGroup" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FareBasisCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Fare basis code to price.  Example: BAP7</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="TicketDesignator" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Ticket designator to price.  Example: AM10AC</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Discount">
		<xsd:annotation>
			<xsd:documentation>Pricing discount value.  Example: 2000</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="Type" use="required">
						<xsd:annotation>
							<xsd:documentation>Type of discount.  Values are:
P = Percent
A = Amount Example: A</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="P"/>
								<xsd:enumeration value="A"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ManualPricing">
		<xsd:annotation>
			<xsd:documentation>Manual pricing information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element ref="Text"/>
				</xsd:sequence>
				<xsd:sequence>
					<xsd:element ref="CurrencyCode"/>
					<xsd:element name="Fare" maxOccurs="unbounded">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:choice>
									<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
									<xsd:element ref="TravelerReferences"/>
								</xsd:choice>
								<xsd:element ref="Price"/>
								<xsd:element name="NetRemit" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Net remit group.</xsd:documentation>
									</xsd:annotation>
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="APBC" type="xsd:positiveInteger" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>This IATA term stands for 'Amount Paid By Customer' and is needed for Net Remit methods 2A, 2E. Note that currency and decimal point are governed by the Currency alement definition of the FareGroup/Currency element.
Example: 57500 </xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="AEBA" type="xsd:positiveInteger" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>This IATA term stands for 'Amount Entered By Agent' and is needed for Net Remit methods 2A, 2E
Note that currency and decimal point are governed by the Currency alement definition of the FareGroup/Currency element.
Example: 50500  </xsd:documentation>
												</xsd:annotation>
											</xsd:element>
										</xsd:sequence>
										<xsd:attribute name="NRIndicator" type="xsd:string"/>
									</xsd:complexType>
								</xsd:element>
								<xsd:element ref="Commission" minOccurs="0"/>
								<xsd:element name="FareRules">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="FareInfo" minOccurs="0" maxOccurs="unbounded">
												<xsd:complexType>
													<xsd:sequence>
														<xsd:element ref="DepartureDate"/>
														<xsd:element ref="DepartureTime" minOccurs="0"/>
														<xsd:element name="DepartureCode">
															<xsd:annotation>
																<xsd:documentation>Departure IATA 3-letter airport or city code.  Example: NYC</xsd:documentation>
															</xsd:annotation>
															<xsd:simpleType>
																<xsd:restriction base="xsd:string">
																	<xsd:length value="3"/>
																</xsd:restriction>
															</xsd:simpleType>
														</xsd:element>
														<xsd:element name="ArrivalDate" type="xsd:date" minOccurs="0">
															<xsd:annotation>
																<xsd:documentation>Departure date in ISO 8601 format.  Example: 2002-12-25</xsd:documentation>
															</xsd:annotation>
														</xsd:element>
														<xsd:element ref="ArrivalTime" minOccurs="0"/>
														<xsd:element name="ArrivalCode">
															<xsd:annotation>
																<xsd:documentation>Arrival IATA 3-letter airport or city code.  Example: NYC</xsd:documentation>
															</xsd:annotation>
															<xsd:simpleType>
																<xsd:restriction base="xsd:string">
																	<xsd:length value="3"/>
																</xsd:restriction>
															</xsd:simpleType>
														</xsd:element>
														<xsd:element ref="FareBasisCode"/>
														<xsd:element ref="TicketDesignator" minOccurs="0"/>
														<xsd:element ref="AirlineCode"/>
														<xsd:element ref="FareRefKey" minOccurs="0">
															<xsd:annotation>
																<xsd:documentation>If this value is present in the FlightPriceRS it must be mapped to this request</xsd:documentation>
															</xsd:annotation>
														</xsd:element>
														<xsd:choice>
															<xsd:sequence>
																<xsd:element name="RelatedSegment" maxOccurs="16">
																	<xsd:annotation>
																		<xsd:documentation>FUTURE USE

A FareInfo element refers to one or more AirGroup/Flight elements. It has one RelatedSegment element for each Flight element it refers to.</xsd:documentation>
																	</xsd:annotation>
																	<xsd:complexType>
																		<xsd:sequence>
																			<xsd:choice>
																				<xsd:element ref="SegmentIDRef">
																					<xsd:annotation>
																						<xsd:documentation>ID reference used to asscociate this item to a segment.  

Example: F1</xsd:documentation>
																					</xsd:annotation>
																				</xsd:element>
																				<xsd:element ref="FlightReferences"/>
																			</xsd:choice>
																			<xsd:element name="Cabin" minOccurs="0">
																				<xsd:annotation>
																					<xsd:documentation>Cabin code.  Values are:
F = First class
C = Business class
Y = Economy class
W = Premium Economy
Example: Y</xsd:documentation>
																				</xsd:annotation>
																				<xsd:simpleType>
																					<xsd:restriction base="xsd:string">
																						<xsd:enumeration value="F"/>
																						<xsd:enumeration value="C"/>
																						<xsd:enumeration value="Y"/>
																						<xsd:enumeration value="W"/>
																					</xsd:restriction>
																				</xsd:simpleType>
																			</xsd:element>
																			<xsd:element ref="ClassOfService"/>
																			<xsd:element name="BaggageAllowance" type="xsd:string" minOccurs="0">
																				<xsd:annotation>
																					<xsd:documentation>Baggage allowance data. Pieces, kilogramm or pound. Example: 35K or PC
Possible values:
xxK
xxP
PC
xxPC
where xx represents the amount of kilos (or pounds) or the number of pieces allowed, respectively.</xsd:documentation>
																				</xsd:annotation>
																			</xsd:element>
																			<xsd:element ref="NVB" minOccurs="0"/>
																			<xsd:element ref="NVA" minOccurs="0"/>
																			<xsd:element name="StopOverIndicator" minOccurs="0">
																				<xsd:annotation>
																					<xsd:documentation>Indicates if stopover is permitted w/ the fare. Uses industry values to reflect the status.  Values are X, O

When X is the value - the departure city of the segment was considered a transfer point at time of fare calculation. 
If the passenger wants to stop in that city, the fare must be recalculated; the fare may or may not permit stopovers. </xsd:documentation>
																				</xsd:annotation>
																				<xsd:simpleType>
																					<xsd:restriction base="xsd:string">
																						<xsd:enumeration value="X"/>
																						<xsd:enumeration value="O"/>
																					</xsd:restriction>
																				</xsd:simpleType>
																			</xsd:element>
																		</xsd:sequence>
																	</xsd:complexType>
																</xsd:element>
															</xsd:sequence>
															<xsd:sequence>
																<xsd:choice>
																	<xsd:element ref="SegmentIDRef">
																		<xsd:annotation>
																			<xsd:documentation>ID reference used to asscociate this item to a segment.  

Example: F1</xsd:documentation>
																		</xsd:annotation>
																	</xsd:element>
																	<xsd:element ref="FlightReferences"/>
																</xsd:choice>
																<xsd:element name="Cabin" minOccurs="0">
																	<xsd:annotation>
																		<xsd:documentation>Cabin code.  Values are:
F = First class
C = Business class
Y = Economy class
W = Premium Economy
Example: Y</xsd:documentation>
																	</xsd:annotation>
																	<xsd:simpleType>
																		<xsd:restriction base="xsd:string">
																			<xsd:enumeration value="F"/>
																			<xsd:enumeration value="C"/>
																			<xsd:enumeration value="Y"/>
																			<xsd:enumeration value="W"/>
																		</xsd:restriction>
																	</xsd:simpleType>
																</xsd:element>
																<xsd:element ref="ClassOfService" minOccurs="0"/>
																<xsd:element name="BaggageAllowance" type="xsd:string" minOccurs="0">
																	<xsd:annotation>
																		<xsd:documentation>Baggage allowance data. Pieces, kilogramm or pound. Example: 35K or PC
Possible values:
xxK
xxP
PC
xxPC
where xx represents the amount of kilos (or pounds) or the number of pieces allowed, respectively.</xsd:documentation>
																	</xsd:annotation>
																</xsd:element>
																<xsd:element ref="NVB" minOccurs="0"/>
																<xsd:element ref="NVA" minOccurs="0"/>
																<xsd:element name="StopOverIndicator" minOccurs="0">
																	<xsd:annotation>
																		<xsd:documentation>Indicates if stopover is permitted w/ the fare. Uses industry values to reflect the status.  Values are X, O

When X is the value - the departure city of the segment was considered a transfer point at time of fare calculation. 
If the passenger wants to stop in that city, the fare must be recalculated; the fare may or may not permit stopovers. </xsd:documentation>
																	</xsd:annotation>
																	<xsd:simpleType>
																		<xsd:restriction base="xsd:string">
																			<xsd:enumeration value="X"/>
																			<xsd:enumeration value="O"/>
																		</xsd:restriction>
																	</xsd:simpleType>
																</xsd:element>
															</xsd:sequence>
														</xsd:choice>
													</xsd:sequence>
												</xsd:complexType>
											</xsd:element>
											<xsd:element name="TicketByDate" type="xsd:date" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Last day to ticket</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element ref="Penalty" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Penalty group</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="FareCalculation" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>fare calculation line</xsd:documentation>
												</xsd:annotation>
												<xsd:simpleType>
													<xsd:restriction base="xsd:string">
														<xsd:minLength value="1"/>
													</xsd:restriction>
												</xsd:simpleType>
											</xsd:element>
											<xsd:element name="Endorsements" minOccurs="0" maxOccurs="unbounded">
												<xsd:annotation>
													<xsd:documentation>Endorsements defined by carriers for the fare to be printed in the endorsements box on tickets. Exmple: NONEND/NONREF</xsd:documentation>
												</xsd:annotation>
												<xsd:complexType>
													<xsd:sequence>
														<xsd:element ref="Text"/>
														<xsd:choice minOccurs="0">
															<xsd:element ref="SegmentIDRef">
																<xsd:annotation>
																	<xsd:documentation>ID reference used to asscociate this item to a segment.  

Example: F1</xsd:documentation>
																</xsd:annotation>
															</xsd:element>
															<xsd:element ref="FlightReferences"/>
														</xsd:choice>
													</xsd:sequence>
													<xsd:attribute name="Type">
														<xsd:annotation>
															<xsd:documentation>Identifies the creation mode of this line. Values are:

M - manual override entered by agent
P - manual agent entered to be appended to the automatically generated line.</xsd:documentation>
														</xsd:annotation>
														<xsd:simpleType>
															<xsd:restriction base="xsd:string">
																<xsd:enumeration value="M"/>
																<xsd:enumeration value="P"/>
															</xsd:restriction>
														</xsd:simpleType>
													</xsd:attribute>
												</xsd:complexType>
											</xsd:element>
											<xsd:element name="TourCode" minOccurs="0">
												<xsd:complexType>
													<xsd:sequence>
														<xsd:element ref="Text"/>
														<xsd:choice minOccurs="0">
															<xsd:element ref="SegmentIDRef" maxOccurs="unbounded">
																<xsd:annotation>
																	<xsd:documentation>ID reference used to asscociate this item to a segment.  

Example: F1</xsd:documentation>
																</xsd:annotation>
															</xsd:element>
															<xsd:element ref="FlightReferences" maxOccurs="unbounded"/>
														</xsd:choice>
													</xsd:sequence>
												</xsd:complexType>
											</xsd:element>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
								<xsd:element name="ExchangeInfo" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Information returned by an Auto-Exchange application (e.g. ITA Reshop)</xsd:documentation>
									</xsd:annotation>
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element ref="CurrencyCode"/>
											<xsd:element name="Penalty" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Penalty/Change Fee amount returned by the auto-exchange application for requested transaction</xsd:documentation>
												</xsd:annotation>
												<xsd:complexType>
													<xsd:attribute name="Amount">
														<xsd:annotation>
															<xsd:documentation>The total fare amount including taxes of a fare alternative.</xsd:documentation>
														</xsd:annotation>
													</xsd:attribute>
												</xsd:complexType>
											</xsd:element>
											<xsd:element name="CommPenalty" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Commission allowed on penalty expressed as an amount</xsd:documentation>
												</xsd:annotation>
												<xsd:complexType>
													<xsd:attribute name="Amount">
														<xsd:annotation>
															<xsd:documentation>The commission amount.</xsd:documentation>
														</xsd:annotation>
													</xsd:attribute>
												</xsd:complexType>
											</xsd:element>
											<xsd:element name="ValueOfOldTicket" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>This is the old ticketed total fare.</xsd:documentation>
												</xsd:annotation>
												<xsd:complexType>
													<xsd:attribute name="Amount">
														<xsd:annotation>
															<xsd:documentation>The total fare amount including taxes of the old ticketed fare</xsd:documentation>
														</xsd:annotation>
													</xsd:attribute>
												</xsd:complexType>
											</xsd:element>
											<xsd:element name="LowFareAlternative" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>This is e.g. a fare identified by an auto-exchange application to be lower then the requested reissuance plus applicable penalty.</xsd:documentation>
												</xsd:annotation>
												<xsd:complexType>
													<xsd:attribute name="Amount">
														<xsd:annotation>
															<xsd:documentation>The total fare amount including taxes of a fare alternative.</xsd:documentation>
														</xsd:annotation>
													</xsd:attribute>
												</xsd:complexType>
											</xsd:element>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
							<xsd:attribute name="Type" type="xsd:string" use="required">
								<xsd:annotation>
									<xsd:documentation>PAX Type priced. Values are: ADT, CHD, SRC, INF etc.</xsd:documentation>
								</xsd:annotation>
							</xsd:attribute>
							<xsd:attribute name="TypeCount" type="xsd:integer" use="optional">
								<xsd:annotation>
									<xsd:documentation>Optional count of the PAX in the PNR priced at this fare.
Example: 2</xsd:documentation>
								</xsd:annotation>
							</xsd:attribute>
							<xsd:attribute name="TypeTotalPrice" type="xsd:integer" use="optional">
								<xsd:annotation>
									<xsd:documentation>Optional totat amount of the PAX priced in this fare.</xsd:documentation>
								</xsd:annotation>
							</xsd:attribute>
							<xsd:attribute name="Tour" use="optional">
								<xsd:annotation>
									<xsd:documentation>tour identifier: I - inclusice tour, B - bulk tour
Identifier for ticket mode. Possible values are:
F - First Ticket
I - IT Ticket
U - Bulk Ticket
</xsd:documentation>
								</xsd:annotation>
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:minLength value="1"/>
										<xsd:maxLength value="1"/>
										<xsd:enumeration value="I"/>
										<xsd:enumeration value="B"/>
										<xsd:enumeration value="F"/>
										<xsd:enumeration value="U"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:attribute>
							<xsd:attribute name="NetFare">
								<xsd:annotation>
									<xsd:documentation>Allowed value = "Y"

Identifies Cat35 C-Type net fare</xsd:documentation>
								</xsd:annotation>
							</xsd:attribute>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="TravelStats" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Statistical data as needed for BSP and/or ARC reporting</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="PurposeCode" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>Purpose Code.
Valid values:
1 = Business
2 = Pleasure
3 = Charter

Canadian requirement</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="DestinationCode" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>1 = Mexico, Costa Rica, Central America, Canal zone
2 = Islands and countries of the Caribbean, Bermuda, including PR, VI
3 = South America
4 = Europe incl Morocco, Tunisia, Algeria, Greenland
5 = Africa
6 = Middle East (western Asia) 
7 = Asia including India
8 = Australia, New Zealand. Pacific islands incl Hawaii,
excluding Guam
0 = United States (wholly within the USA) or trans- border Canada – USA (or vice-versa) 

Canadian requirement</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:choice>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Options">
		<xsd:annotation>
			<xsd:documentation>List of all purchased/selected options (discounts and surcharges)</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Option" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Individual pricing option</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:choice minOccurs="0">
								<xsd:element ref="SegmentIDRef">
									<xsd:annotation>
										<xsd:documentation>ID reference used to asscociate this item to a segment.  

Example: F1</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element ref="FlightReferences"/>
							</xsd:choice>
							<xsd:element name="Description" minOccurs="0">
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="Text" maxOccurs="unbounded">
											<xsd:annotation>
												<xsd:documentation>Title description of offered option - normally a one liner, e.g. "Check Baggage"
</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="Amount" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Amount for this option (or option differential in case of upsell) in amount.  Currency/Decimals of FareGroup applies;
Example: 
300
1500
(this translates e.g. to $3.00 and $15.00 for USD currency)</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:simpleContent>
										<xsd:extension base="xsd:string"/>
									</xsd:simpleContent>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
						<xsd:attribute name="SegmentIDRef">
							<xsd:annotation>
								<xsd:documentation>[DEPRECATED - use element instead] The value of the SegmentIDRef element is the flight/segment position of the corresponding OriginDestination groups in document order.</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="DepartureCode" use="optional">
							<xsd:annotation>
								<xsd:documentation>Origin airport code of respective flight; 
e.g. IAH</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="ArrivalCode" use="optional">
							<xsd:annotation>
								<xsd:documentation>Destination airport code of respective flight; 
e.g. IAH</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="OptionID" use="optional">
							<xsd:annotation>
								<xsd:documentation>Option unique ID. Example: div020</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="OptionName" type="xsd:string" use="optional">
							<xsd:annotation>
								<xsd:documentation>Option Name. Example : GO1_0</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="Type" use="required">
							<xsd:annotation>
								<xsd:documentation>Indicator if this option is a discount or a surcharge;
Values are: 
"Discount" - subtracted from fare
"Surcharge" - added to fare </xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Authorization">
		<xsd:annotation>
			<xsd:documentation>Credit card authorization group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Amount"/>
				<xsd:element ref="AirlineCode"/>
			</xsd:sequence>
			<xsd:attribute name="Type" use="required">
				<xsd:annotation>
					<xsd:documentation>Credit card authorization type. Values are: A = authorize card only
S = aythorize card and store approval code in the PNR  D = verify the address associated with this credit card and store the verification status in PNR. If no address associated - erro message will be returned. Example: A</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:length value="1"/>
						<xsd:enumeration value="A"/>
						<xsd:enumeration value="S"/>
						<xsd:enumeration value="D"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AgencyType" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Agency predefined pricing type code.  Example: LMG</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Miscellaneous">
		<xsd:annotation>
			<xsd:documentation>Miscellaneous segment group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="OtherSegment" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="InsuranceSegment" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="MCOSegment" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="PTASegment" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="AirTaxiSegment" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="LandSegment" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="BusSegment" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="RailSegment" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="SeaSegment" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="TourSegment" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="CarPassiveSegment" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Car passive segment group.

Note that Amadeus will return action code HK for passive sells so that the car segment will appear in the PNRViewRS/LandGroup/Car section after the booking as regular segment. </xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="HotelPassiveSegment" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="ChauffeurBusDriveSegment" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="AssociationID" type="xsd:ID" use="required">
				<xsd:annotation>
					<xsd:documentation>Unique segment ID used to associate other elements to this segment at PNR creation time.  Example: F1</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="VendorCode">
		<xsd:annotation>
			<xsd:documentation>Vendor code.  Example: CS</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="2"/>
				<xsd:maxLength value="2"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="ServiceDate" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Service date in ISO 8601 format (yyyy-mm-dd).  Example: 2002-12-25</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Purchase">
		<xsd:annotation>
			<xsd:documentation>Purchase group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice>
				<xsd:element ref="CityCode"/>
				<xsd:element ref="CityName"/>
			</xsd:choice>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CityName" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>City name, can be used with OTH type only.  Example: LILLE</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="EmailAddress">
		<xsd:annotation>
			<xsd:documentation>Email address group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences" maxOccurs="unbounded"/>
				</xsd:choice>
				<xsd:element ref="Email"/>
				<xsd:element name="Language" type="CountryCodeAlpha2" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Language(s) preferred by traveler using .net language codes (localization codes). 

Sample:  fr-ca</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Type" use="optional">
				<xsd:annotation>
					<xsd:documentation>Email type.  Values are:
B = BUSINESS
H = HOME
E = EMERGENCY
O = OTHER 

Example: H</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="B"/>
						<xsd:enumeration value="H"/>
						<xsd:enumeration value="E"/>
						<xsd:enumeration value="O"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Email" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Traveler email address.  Example: abc@test.com</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="FrequentGuest">
		<xsd:annotation>
			<xsd:documentation>Frequent guest group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="FGCode" minOccurs="0"/>
				<xsd:element ref="FGNumber"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FGCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Frequent guest code.  Example: MC</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="FGNumber" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Frequent guest number.  Example: 123456</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="FFFlyingCompany" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Frequent flyer flying company on which the miles will be accrued.  Example: DL</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ClassifiedFare">
		<xsd:annotation>
			<xsd:documentation>Classified fares group allowing to price using the fare basis code.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:element ref="ClassifiedGroup" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Display">
		<xsd:annotation>
			<xsd:documentation>Display group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="History" minOccurs="0"/>
				<xsd:element ref="HistoricalFares" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="History">
		<xsd:annotation>
			<xsd:documentation>Display history of fares.  Values are: Y = Yes, N = No.  Example: Y</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
				<xsd:maxLength value="1"/>
				<xsd:enumeration value="Y"/>
				<xsd:enumeration value="N"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="HistoricalFares">
		<xsd:annotation>
			<xsd:documentation>Display historical fares.  Values are: Y = Yes, N = No.  Example: Y</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
				<xsd:maxLength value="1"/>
				<xsd:enumeration value="Y"/>
				<xsd:enumeration value="N"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="ActionCode">
		<xsd:annotation>
			<xsd:documentation>Action code for the sell of a segment.  This a standard defined action code used by different airlines and reservation systems.  If omitted the default value is NN.  Example: GK</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="2"/>
				<xsd:maxLength value="2"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Insurance">
		<xsd:annotation>
			<xsd:documentation>Insurance segment information</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="VendorCode"/>
				<xsd:element ref="PurchaseDate"/>
				<xsd:element ref="ActionCode" minOccurs="0"/>
				<xsd:element ref="NumberInParty" minOccurs="0"/>
				<xsd:element ref="DepartureCity"/>
				<xsd:element ref="DepartureDate"/>
				<xsd:element ref="DestinationCity"/>
				<xsd:element ref="ReturnDate"/>
				<xsd:element ref="PlanType"/>
				<xsd:element ref="PassengerIDRef" maxOccurs="unbounded"/>
				<xsd:element ref="Coverage" minOccurs="0" maxOccurs="2"/>
				<xsd:element ref="PartialRefund" minOccurs="0"/>
				<xsd:element ref="ChangeGroup" minOccurs="0"/>
				<xsd:element ref="PaymentType" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="OtherInformation"/>
			</xsd:sequence>
			<xsd:attribute name="AssociationID" type="xsd:ID" use="required">
				<xsd:annotation>
					<xsd:documentation>Unique segment ID used to associate other elements to this segment at PNR creation time.  Example: F1</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Type" use="optional" default="B">
				<xsd:annotation>
					<xsd:documentation>Inurance request type. Possible values are:
B = Booking requested
C = Change requested
R = Refund requested.
The default value is B. Example: B</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"/>
						<xsd:maxLength value="1"/>
						<xsd:enumeration value="B"/>
						<xsd:enumeration value="C"/>
						<xsd:enumeration value="R"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DepartureCity">
		<xsd:annotation>
			<xsd:documentation>Departure city code or city name.  If Type is R (refund) or C (change) the departure city can be empty.   Example: YYZ</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string"/>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="DepartureDate" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Departure date in ISO 8601 format.  Example: 2002-12-25</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="PurchaseDate" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Insurance purchase date.  Example: 2002-12-25</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ReturnDate" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Return date is ISO 8601 format.  Example: 2002-12-25</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="PlanType" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Insurance plan type.  Example: TPKG</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="PassengerIDRef" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Traveler reference ID used to associate this element to a traveler at PNR creation time.  This ID can have three different value types

(1) It can be an ID that cross-references the same ID that is in a Traveler AssociationID attribute.  This is the case when Traveler names and insurance segments are in the same input XML.  Ex: T1  (2) It can be the traveler PNR element number. This would be the case when the passenger name is already in the PNR and the insurance segment is added to the PNR.  Ex: 1.1 (3) It can have the value ALL, which would associated the insurance segment to all passengers in the PNR. Example: ALL</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="DestinationCity" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Destination city code or city name.  If Type is R (refund) or C (change) the destination city can be empty.  Example: Toronto</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Coverage" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Insurance coverage type.  Example: TCI 950</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="PaymentType">
		<xsd:annotation>
			<xsd:documentation>Insurance payment type group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="CCCode" minOccurs="0"/>
				<xsd:element ref="CCNumber" minOccurs="0"/>
				<xsd:element ref="CCExpiration" minOccurs="0"/>
				<xsd:element ref="CardholderLastName" minOccurs="0"/>
				<xsd:choice minOccurs="0">
					<xsd:element ref="PassengerRef"/>
					<xsd:element ref="Percentage"/>
					<xsd:element ref="DollarValue"/>
				</xsd:choice>
			</xsd:sequence>
			<xsd:attribute name="Type" use="required">
				<xsd:annotation>
					<xsd:documentation>Payment type indicator. When CC, CCCode, CCNumber and CCExpiration become mandatory. Possible values are: 
CA = cash
CC = credit card
CK = check
Example: CC</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="2"/>
						<xsd:maxLength value="2"/>
						<xsd:enumeration value="CA"/>
						<xsd:enumeration value="CC"/>
						<xsd:enumeration value="CK"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="OtherInformation">
		<xsd:annotation>
			<xsd:documentation>Other information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Contact" minOccurs="0"/>
				<xsd:element ref="Address" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="PassengerInformation" maxOccurs="unbounded"/>
				<xsd:element ref="Agent"/>
				<xsd:element ref="StateCode" minOccurs="0"/>
				<xsd:element ref="CarRental" minOccurs="0"/>
				<xsd:element ref="Language" minOccurs="0"/>
				<xsd:element ref="TourOperator" minOccurs="0"/>
				<xsd:element ref="PolicyNumber" minOccurs="0"/>
				<xsd:element ref="RefundReason" minOccurs="0"/>
				<xsd:element ref="AuthorizationNumber" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Contact">
		<xsd:annotation>
			<xsd:documentation>Contact information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="CityCode"/>
				<xsd:element ref="TelephoneNumber"/>
			</xsd:sequence>
			<xsd:attribute name="Type" use="required">
				<xsd:annotation>
					<xsd:documentation>Contact type.  Possible values are:
B = BUSINESS
F = FAX
R = Residence:
Example: B</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"/>
						<xsd:maxLength value="1"/>
						<xsd:enumeration value="R"/>
						<xsd:enumeration value="B"/>
						<xsd:enumeration value="F"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PassengerInformation">
		<xsd:annotation>
			<xsd:documentation>PassengerInformation group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="PassengerIDRef"/>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element ref="RateType" minOccurs="0"/>
						<xsd:choice>
							<xsd:element ref="DateOfBirth"/>
							<xsd:element ref="Age"/>
						</xsd:choice>
						<xsd:element ref="Beneficiary" minOccurs="0"/>
					</xsd:sequence>
					<xsd:element ref="IDNumber"/>
				</xsd:choice>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="IDNumber" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Identification number.  Example: 12345</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Beneficiary" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Benefiaciary information.  Example: JOE</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Agent" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Agent code.  Example: TT</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Language" type="xsd:string" default="ENGLISH">
		<xsd:annotation>
			<xsd:documentation>Language preference.  Example: English</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="TourOperator" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Tour operator infromation.  Example: 01234</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="PolicyNumber" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Policy number.  Example: Y123T456</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="AuthorizationNumber" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Authorization number.  Usually it is a phone or a fax number.  Example: 305-269-6975</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="RefundReason" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Refund reason information text.  Example: Discount </xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CarRental">
		<xsd:annotation>
			<xsd:documentation>Car rental information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="PickUpDate"/>
				<xsd:element ref="DropOffDate"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PickUpDate" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Car rental pick up date.  Example: 2002-12-25</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="DropOffDate" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Car rental drop off date.  Example: 2002-12-31</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="PartialRefund">
		<xsd:annotation>
			<xsd:documentation>Partial refund group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="RefundAmount"/>
				<xsd:element ref="RefundTax"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="RefundAmount" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Refund amount in cents.  5000 means 50.00.  Example: 5000</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="RefundTax" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Refund tax amount in cents.  1000 means 10.00.  Example: 1000</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ChangeGroup">
		<xsd:annotation>
			<xsd:documentation>Change group information</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="DepartureDate" minOccurs="0"/>
				<xsd:element ref="ReturnDate" minOccurs="0"/>
				<xsd:element ref="DestinationCity" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PassengerRef" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Passenger reference number for credit card payment.  Example 3</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Percentage" type="xsd:integer">
		<xsd:annotation>
			<xsd:documentation>Percentage value for credit card payment.  Example: 25</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="DollarValue" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Dollar amount value for credit card payment.  Example: 56.40</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Gender">
		<xsd:annotation>
			<xsd:documentation>Traveler gender.  Values are: F = Female M = Male.  Example: M</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
				<xsd:maxLength value="2"/>
				<xsd:enumeration value="F"/>
				<xsd:enumeration value="M"/>
				<xsd:enumeration value="MI"/>
				<xsd:enumeration value="FI"/>
				<xsd:enumeration value="U"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="DiscountGroup">
		<xsd:annotation>
			<xsd:documentation>Discount pricing group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="SegmentIDRef" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>ID reference used to asscociate this item to a segment.  

Example: F1</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="FlightReferences" maxOccurs="unbounded"/>
				</xsd:choice>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:element ref="FareBasisCode" minOccurs="0"/>
				<xsd:element ref="TicketDesignator" minOccurs="0"/>
				<xsd:element ref="Discount" minOccurs="0"/>
				<xsd:element ref="CurrencyCode" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ClassifiedGroup">
		<xsd:annotation>
			<xsd:documentation>Classified fare group.

Pricing by FBC and TicketDesignator (by PTC)</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="SegmentIDRef" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>ID reference used to asscociate this item to a segment.  

Example: F1</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="FlightReferences" maxOccurs="unbounded"/>
				</xsd:choice>
				<xsd:element ref="FareBasisCode"/>
				<xsd:element ref="TicketDesignator" minOccurs="0"/>
				<xsd:element ref="PseudoCityCode" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="PaxType" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>Passenger type requested for pricing. 

Some IATA values are :
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="OtherSegment">
		<xsd:annotation>
			<xsd:documentation>Other segment group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:element ref="VendorCode"/>
				<xsd:element ref="ServiceDate"/>
				<xsd:element ref="Purchase"/>
				<xsd:element ref="ActionCode"/>
				<xsd:element ref="NumberInParty"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="InsuranceSegment">
		<xsd:annotation>
			<xsd:documentation>Insurance segment group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:element ref="VendorCode"/>
				<xsd:element ref="ServiceDate"/>
				<xsd:element ref="Purchase"/>
				<xsd:element ref="ActionCode"/>
				<xsd:element ref="NumberInParty"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="MCOSegment">
		<xsd:annotation>
			<xsd:documentation>MCO segment group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:element ref="VendorCode"/>
				<xsd:element ref="ServiceDate"/>
				<xsd:element ref="Purchase"/>
				<xsd:element ref="ActionCode"/>
				<xsd:element ref="NumberInParty"/>
				<xsd:sequence minOccurs="0">
					<xsd:element ref="Amount"/>
					<xsd:element ref="CurrencyCode"/>
				</xsd:sequence>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="AccountingText" minOccurs="0">
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:minLength value="1"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PTASegment">
		<xsd:annotation>
			<xsd:documentation>PTA segment group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:element ref="VendorCode"/>
				<xsd:element ref="ServiceDate"/>
				<xsd:element ref="Purchase"/>
				<xsd:element ref="ActionCode"/>
				<xsd:element ref="NumberInParty"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AirTaxiSegment">
		<xsd:annotation>
			<xsd:documentation>Air taxi segment group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:element ref="VendorCode"/>
				<xsd:element ref="ServiceDate"/>
				<xsd:element ref="OriginCityCode"/>
				<xsd:element ref="DestinationCityCode"/>
				<xsd:element ref="ActionCode"/>
				<xsd:element ref="NumberInParty"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="LandSegment">
		<xsd:annotation>
			<xsd:documentation>Land segment group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:element ref="VendorCode"/>
				<xsd:element ref="ServiceDate"/>
				<xsd:element ref="OriginCityCode"/>
				<xsd:element ref="DestinationCityCode"/>
				<xsd:element ref="ActionCode"/>
				<xsd:element ref="NumberInParty"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="BusSegment">
		<xsd:annotation>
			<xsd:documentation>Bus segment group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:element ref="VendorCode"/>
				<xsd:element ref="DepartureDate"/>
				<xsd:element ref="OriginCityCode"/>
				<xsd:element ref="DestinationCityCode"/>
				<xsd:element ref="ActionCode"/>
				<xsd:element ref="NumberInParty"/>
				<xsd:element ref="DeparturePoint" minOccurs="0"/>
				<xsd:element ref="DepartureTime" minOccurs="0"/>
				<xsd:element name="ArrivalPoint" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Arrival point.  Example: Terminal 3</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="ArrivalTime" minOccurs="0"/>
				<xsd:element ref="BusName" minOccurs="0"/>
				<xsd:element ref="ServiceInformation" minOccurs="0"/>
				<xsd:element ref="ConfirmationNumber" minOccurs="0"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="RailSegment">
		<xsd:annotation>
			<xsd:documentation>Rail segment group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:element ref="VendorCode"/>
				<xsd:element ref="DepartureDate"/>
				<xsd:element ref="OriginCityCode"/>
				<xsd:element ref="DestinationCityCode"/>
				<xsd:element ref="ActionCode"/>
				<xsd:element ref="NumberInParty"/>
				<xsd:element ref="DeparturePoint" minOccurs="0"/>
				<xsd:element ref="DepartureTime" minOccurs="0"/>
				<xsd:element ref="ArrivalPoint" minOccurs="0"/>
				<xsd:element ref="ArrivalTime" minOccurs="0"/>
				<xsd:element ref="RailName" minOccurs="0"/>
				<xsd:element ref="ServiceInformation" minOccurs="0"/>
				<xsd:element ref="ConfirmationNumber" minOccurs="0"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="SeaSegment">
		<xsd:annotation>
			<xsd:documentation>Sea segment group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:element ref="VendorCode"/>
				<xsd:element ref="DepartureDate"/>
				<xsd:element ref="OriginCityCode"/>
				<xsd:element ref="DestinationCityCode"/>
				<xsd:element ref="ActionCode"/>
				<xsd:element ref="NumberInParty"/>
				<xsd:element ref="DeparturePoint" minOccurs="0"/>
				<xsd:element ref="DepartureTime" minOccurs="0"/>
				<xsd:element ref="ArrivalPoint" minOccurs="0"/>
				<xsd:element ref="ArrivalTime" minOccurs="0"/>
				<xsd:element ref="ShipName" minOccurs="0"/>
				<xsd:element ref="ServiceInformation" minOccurs="0"/>
				<xsd:element ref="ConfirmationNumber" minOccurs="0"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="TourSegment">
		<xsd:annotation>
			<xsd:documentation>Tour segment group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:element ref="VendorCode"/>
				<xsd:element ref="StartDate"/>
				<xsd:element ref="CityCode"/>
				<xsd:element ref="ActionCode"/>
				<xsd:element ref="NumberInParty"/>
				<xsd:element ref="TourName" minOccurs="0"/>
				<xsd:element ref="TourCode" minOccurs="0"/>
				<xsd:element ref="RoomCode" minOccurs="0"/>
				<xsd:element ref="ServiceInformation" minOccurs="0"/>
				<xsd:element ref="ConfirmationNumber" minOccurs="0"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CarPassiveSegment">
		<xsd:annotation>
			<xsd:documentation>Car passive segment group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:element ref="CarVendorCode"/>
				<xsd:element ref="CityCode"/>
				<xsd:element ref="ActionCode"/>
				<xsd:element ref="NumberOfCars"/>
				<xsd:element ref="PickUpInfo"/>
				<xsd:element ref="DropOffInfo"/>
				<xsd:element ref="CarType"/>
				<xsd:element name="RateOptions" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Rate information. Includes rate plan, amount, currency, mileage plan etc.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element ref="RateAmount"/>
							<xsd:element ref="CurrencyCode"/>
							<xsd:element name="DistanceUnit">
								<xsd:annotation>
									<xsd:documentation>Distance unit applied for all distance information (See MileKmLimit element):
M = Miles
K = Kilometers.
Example: M</xsd:documentation>
								</xsd:annotation>
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:minLength value="1"/>
										<xsd:maxLength value="1"/>
										<xsd:enumeration value="M"/>
										<xsd:enumeration value="K"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:element>
							<xsd:element name="MileKmRate" type="xsd:positiveInteger" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Rate charged per mile/kilometer. Rate charged per additional mile/kilometer if element MileKmLimit has a positive integer value of max miles/km allowed with this rate included in the rate.  Example: 025
</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element ref="MileKmLimit">
								<xsd:annotation>
									<xsd:documentation>Identifies mileage plan sold. 

Note: Amadeus does not have a designated format for mileage plan indicator. Thus, if entered and booking is for Amadeus GDS this value will be ignored. 
Values are: either UNL for unlimited mileage or a positive integer representing the max miles/km free for this rate.

NOTE: For Apollo/Galileo and Worldspan MileKmRate  is mandatory if MileKmLimit has value different than 'UNL' - worlspan requires charges per mile or kilometer to be entered see MileKmRate element.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="ExtraCharges" minOccurs="0" maxOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Car data group.
FUTURE USE. NOT SUPPORTED YET.</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="ExtraChargesAmount" type="xsd:integer">
											<xsd:annotation>
												<xsd:documentation>Extra charges amount.  Example: 5500</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element ref="MileKmLimit" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Identifies mileage plan sold. 

Note: Amadeus does not have a designated format for mileage plan indicator. Thus, if entered and booking is for Amadeus GDS this value will be ignored. 
Values are: either UNL for unlimited mileage or a positive integer representing the max miles/km free for this rate.

</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
									<xsd:attribute name="Type" use="required">
										<xsd:annotation>
											<xsd:documentation>Extra charges description.  
Values are: 
D = Day
H = Hour

Example: D</xsd:documentation>
										</xsd:annotation>
										<xsd:simpleType>
											<xsd:restriction base="xsd:string">
												<xsd:enumeration value="D"/>
												<xsd:enumeration value="H"/>
											</xsd:restriction>
										</xsd:simpleType>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
						<xsd:attribute name="Type" use="optional">
							<xsd:annotation>
								<xsd:documentation>Rate type.  Values are:
D = Daily
E = Weekend
W = Weekly
M = Monthly
H = Hourly
P = Package
Example: W</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:enumeration value="D"/>
									<xsd:enumeration value="E"/>
									<xsd:enumeration value="W"/>
									<xsd:enumeration value="M"/>
									<xsd:enumeration value="H"/>
									<xsd:enumeration value="P"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:attribute>
						<xsd:attribute name="Category" use="optional">
							<xsd:annotation>
								<xsd:documentation>Rate category.  Values are:
A = Association
B = Business standard
C = Corporate
G = Government
I = Industry (Travel)
K = Package
L = Inclusive 
P = Promotional
R = Credential
S = Standard
U = Consortium
V = Convention
X = Negotiated
Example: G
Note that Amadeus will require Category if rate Type (also referred to as rate plan) is entered.</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:enumeration value="A"/>
									<xsd:enumeration value="B"/>
									<xsd:enumeration value="C"/>
									<xsd:enumeration value="G"/>
									<xsd:enumeration value="I"/>
									<xsd:enumeration value="K"/>
									<xsd:enumeration value="L"/>
									<xsd:enumeration value="P"/>
									<xsd:enumeration value="R"/>
									<xsd:enumeration value="S"/>
									<xsd:enumeration value="U"/>
									<xsd:enumeration value="V"/>
									<xsd:enumeration value="X"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="BookingSource" minOccurs="0"/>
				<xsd:element ref="ServiceInformation" minOccurs="0"/>
				<xsd:element ref="ConfirmationNumber" minOccurs="0"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="HotelPassiveSegment">
		<xsd:annotation>
			<xsd:documentation>Hotel passive segment group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:element ref="CarrierCode"/>
				<xsd:element ref="CheckInDate"/>
				<xsd:element ref="CheckOutDate"/>
				<xsd:element ref="CityCode"/>
				<xsd:element ref="ActionCode"/>
				<xsd:element ref="NumberOfRooms"/>
				<xsd:element ref="RoomType" minOccurs="0"/>
				<xsd:element ref="RoomRate" minOccurs="0"/>
				<xsd:element ref="Guarantee" minOccurs="0"/>
				<xsd:element ref="HotelInformation" minOccurs="0"/>
				<xsd:element ref="ConfirmationNumber" minOccurs="0"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="OriginCityCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Origin city code.  Example: MIA</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="RailName" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Rail name.  Example: Amtrak</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ServiceInformation" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Service information.  Example:  Group traveling together</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="TourName" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Tour name.  Example: N E Inns</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="TourCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Tour code.  Example: YK643TU</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="DeparturePoint" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Departure point.  Example: Terminal 1</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Guarantee">
		<xsd:annotation>
			<xsd:documentation>Guarantee information.  Values are: Y = Yes, N = No.  Example: Y</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="Y"/>
				<xsd:enumeration value="N"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="RoomRate">
		<xsd:annotation>
			<xsd:documentation>Room rate group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Amount"/>
				<xsd:element ref="CurrencyCode" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DepartureTime">
		<xsd:annotation>
			<xsd:documentation>Departure time in ISO 8601 format (hh:mm).  Example: 10:30</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:pattern value="([0-1][0-9]|2[0-4]):[0-5][0-9]">
					<xsd:annotation>
						<xsd:documentation>
</xsd:documentation>
					</xsd:annotation>
				</xsd:pattern>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="ArrivalTime">
		<xsd:annotation>
			<xsd:documentation>Arrival time in ISO 8601 format (hh:mm).  Example: 14:30</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:pattern value="([0-1][0-9]|2[0-4]):[0-5][0-9]">
					<xsd:annotation>
						<xsd:documentation>
</xsd:documentation>
					</xsd:annotation>
				</xsd:pattern>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="ConfirmationNumber" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Confirmation number.  Example: 62FE77</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="StartDate" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Start date in ISO 8601 format (yyyy-mm-dd).  Example: 2002-12-01</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="HotelInformation">
		<xsd:annotation>
			<xsd:documentation>Hotel information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="HotelName" minOccurs="0"/>
				<xsd:element ref="Address" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="TelephoneNumber" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="HotelName" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Hotel name.  Example: Holiday Inn</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CarrierCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Carrier code.  Example: AA</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="BusName" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Bus name.  Example: Greyhound</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ShipName" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Ship name.  Example: Nordic Empress</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="DestinationCityCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Destination city code.  Example: MIA</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ArrivalPoint" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Arrival point.  Example: Terminal 3</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="RoomCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Room type code for tour segment.  Possible values are: SGLB = Single accomodation, DBLB = Double accomodation, TRPB = Triple accomodation.  Example: SGLB</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="PickUpInfo">
		<xsd:annotation>
			<xsd:documentation>Pick up information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Date"/>
				<xsd:element ref="Time" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Time in ISO 8601 format (hh:mm).  
MANDATORY for Amadeus!

Example: 14:30</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="CityCode" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DropOffInfo">
		<xsd:annotation>
			<xsd:documentation>Drop off information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Date"/>
				<xsd:element ref="Time" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Time in ISO 8601 format (hh:mm).  
MANDATORY for Amadeus!

Example: 14:30</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="CityCode" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="RateType">
		<xsd:annotation>
			<xsd:documentation>Rate type applied.  Possible values are:
F = family rate
P = per passenger rate.  Example: F</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
				<xsd:maxLength value="1"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Remark">
		<xsd:annotation>
			<xsd:documentation>Form of payment to be sent to history remark.  Values are: Y = Yes, N = No.  Example: Y</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="Y"/>
				<xsd:enumeration value="N"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="TravelerInfo">
		<xsd:annotation>
			<xsd:documentation>Number of passengers of the specified type.  Example: 2</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="Type" type="xsd:string" use="required">
						<xsd:annotation>
							<xsd:documentation>Passenger type requested for pricing.  If the passenger type sent to the GDS is not in the below predefined list, then it is passed as is to the GDS.  Predefined values are: 
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CardholderFirstName">
		<xsd:annotation>
			<xsd:documentation>Credit card holder's first name.  Example: JOHN</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="RateQualifier" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Rate qualifier.  Example: Unknown</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="HiddenRemark">
		<xsd:annotation>
			<xsd:documentation>Hidden remark.  Example: Unknown</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:element ref="Text"/>
				<xsd:element ref="PseudoCityCode" minOccurs="0" maxOccurs="5"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:complexType name="Payment_Type">
		<xsd:annotation>
			<xsd:documentation>Name "Payment_Type" was chosen, because there is already a global element with name "PaymentType". Although this is valid in a schema, it causes an error, when generating code with JAXB.</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="CreditCardInformation">
				<xsd:annotation>
					<xsd:documentation>Credit Card Payment</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:complexContent>
						<xsd:extension base="CreditCardInformationType"/>
					</xsd:complexContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Other">
				<xsd:annotation>
					<xsd:documentation>Other form Of Payment. Allowed values are: CA - CASH, CK- CHECK</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="CA"/>
						<xsd:enumeration value="CK"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="CreditCardInformationType">
		<xsd:sequence>
			<xsd:element ref="CCCode"/>
			<xsd:element ref="CCNumber"/>
			<xsd:element ref="CCExpiration"/>
			<xsd:choice minOccurs="0">
				<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
				<xsd:element ref="TravelerReferences"/>
			</xsd:choice>
			<xsd:element ref="CardholderFirstName" minOccurs="0"/>
			<xsd:element ref="CardholderLastName" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DocumentIssueType">
		<xsd:sequence>
			<xsd:element name="Airline" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>3 digit airline code.             Exaple: 001 for AA </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="TicketNumber">
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:string">
							<xsd:attribute name="Type" use="required">
								<xsd:annotation>
									<xsd:documentation>Ticket Type: E- e-ticket, P- paper ticket</xsd:documentation>
								</xsd:annotation>
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:enumeration value="P"/>
										<xsd:enumeration value="E"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:attribute>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="CheckDigit" type="xsd:string" minOccurs="0"/>
			<xsd:element name="Coupon" type="xsd:int" minOccurs="0" maxOccurs="4">
				<xsd:annotation>
					<xsd:documentation>Coupon numbers in ascending order</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="LastConjunctionDigits" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Last two digits of the last conjunction document</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="LasConjuctionCheckDigit" type="xsd:string" minOccurs="0"/>
			<xsd:element name="ConjunctionCoupon" type="xsd:string" minOccurs="0" maxOccurs="4"/>
			<xsd:choice minOccurs="0">
				<xsd:element ref="CityCode"/>
				<xsd:element name="IATACode" type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>Agency IATA code.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="DateOfIssue" type="xsd:date">
				<xsd:annotation>
					<xsd:documentation>Date of the document issuance: YYYY-MM-DD</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="TravelerGroup">
		<xsd:annotation>
			<xsd:documentation>Traveler group.  Includes pricing information for all passengers of the same type. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="BookingClass" type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>Booking class of service for specified passenger type.  This class is returned according to the passenger type priced.  Example: B</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Price"/>
				<xsd:choice>
					<xsd:element name="ValidBefore" type="xsd:string"/>
					<xsd:element name="ValidAfter" type="xsd:string"/>
				</xsd:choice>
			</xsd:sequence>
			<xsd:attribute name="TypeRequested" use="required">
				<xsd:annotation>
					<xsd:documentation>Passenger type being requested for pricing.  If the passenger type sent by the GDS is not in the below predefined list, then it is shown as is. If the type priced is different from the type requested and the GDS does not send back the type requested, this type code wil be XXX.  Predefined values are: 
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
XXX = Undefined
 Example: CHD</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string"/>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="TypePriced" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>Passenger type being priced. This type can be different from the type requested if there is no available fare for the requested type.  For example the requested type is GOV and the priced type is ADT because there is no available fare for type GOV and there is an available fare for type ADT. 
If the passenger type sent by the GDS is not the below predefined list, then it is shown as is. 
Predefined values are:
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth 
Example: ADT</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="TypeCount" use="required">
				<xsd:annotation>
					<xsd:documentation>Number of travelers of the same passenger type.  Example: 2</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:integer">
						<xsd:minInclusive value="0"/>
						<xsd:maxInclusive value="9"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="TypeTotalPrice" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Total price for all passengers of the same type.  It is the result of Price multiplied by TypeCount.  Example: 200000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Price">
		<xsd:annotation>
			<xsd:documentation>Price group for the PAX type identified in the Fare/Type attribute.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="BaseFare">
					<xsd:annotation>
						<xsd:documentation>Base fare amount. See amount attribute.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:complexContent>
							<xsd:restriction base="BaseFareType">
								<xsd:sequence>
									<xsd:element ref="FiledIn" minOccurs="0"/>
									<xsd:element name="Surcharges" type="SurchargesType" minOccurs="0" maxOccurs="0">
										<xsd:annotation>
											<xsd:documentation>Surcharges group</xsd:documentation>
										</xsd:annotation>
									</xsd:element>
								</xsd:sequence>
								<xsd:attribute name="Amount" type="xsd:integer" use="required">
									<xsd:annotation>
										<xsd:documentation>Total base fare amount that includes surcharges (if any).  Example: 200000</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
							</xsd:restriction>
						</xsd:complexContent>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="Taxes"/>
			</xsd:sequence>
			<xsd:attribute name="Total" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Total Fare amount for one traveler of the specified passenger type.  Total price = base fare amount + taxes amount.  Example: 230000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Designator" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Tax or surcharge designator.  Example: US</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Description" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Tax or surcharge description.  Example: US national transportation</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Taxes">
		<xsd:annotation>
			<xsd:documentation>Taxes group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Tax" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="Amount" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Total taxes amount.  Example: 30000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Tax">
		<xsd:annotation>
			<xsd:documentation>Tax break down information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Designator" minOccurs="0"/>
				<xsd:element ref="Nature" minOccurs="0"/>
				<xsd:element ref="Description" minOccurs="0"/>
				<xsd:element name="CollectionPoint" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>For XF and ZP taxes. 
Tax data break down for each collection point.  

The sum of individual amounts entered here must  be equal to the Amount entered in the Tax element.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element ref="AirportCode"/>
							<xsd:element name="AirportAmount">
								<xsd:annotation>
									<xsd:documentation>The amount actually filed by the airport in the currency applicable to the geographical location of the airport
(same as shown in FareCalculation line)</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element ref="CurrencyCode"/>
						</xsd:sequence>
						<xsd:attribute name="Amount" type="xsd:integer" use="required">
							<xsd:annotation>
								<xsd:documentation>Individual amount for collection point.  
Example: 2500</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="Paid">
							<xsd:annotation>
								<xsd:documentation>Indicator to represent that given tax is already paid. Will be used only in the new Ticket issued as part of exchange process is the BSP markets.   
Value is  "PD"</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:enumeration value="PD"/>
									<xsd:enumeration value="RF"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Amount" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Individual tax amount.  Example: 2500</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Paid" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Identifies if this particular tax was paid. Note that the posisitve indicator was changed from Y to PD(paid).
Values are: PD (paid), RF(to be refunded) or N or omit the attribute - this would indicate that this tax is not paid.
Example: PD</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"/>
						<xsd:maxLength value="2"/>
						<xsd:enumeration value="PD"/>
						<xsd:enumeration value="N"/>
						<xsd:enumeration value="RF"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Nature" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Tax nature.  Example: US2</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="BillingNumber">
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="BillingReference">
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="ChauffeurBusDriveSegment">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
					<xsd:element ref="TravelerReferences"/>
				</xsd:choice>
				<xsd:choice>
					<xsd:element ref="SegmentIDRef">
						<xsd:annotation>
							<xsd:documentation>ID reference used to asscociate this item to a segment.  

Example: F1</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="FlightReferences"/>
				</xsd:choice>
				<xsd:element ref="VendorCode"/>
				<xsd:element ref="ActionCode"/>
				<xsd:element name="NumberOfServices" type="xsd:integer" nillable="0">
					<xsd:annotation>
						<xsd:documentation>Number of Cars required or Bus</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="ServiceInfo">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element ref="Date"/>
							<xsd:element ref="Time" minOccurs="0"/>
							<xsd:element ref="CityCode"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ServiceType">
					<xsd:annotation>
						<xsd:documentation>Type of service. Possible values are:
CDD - Chauffer Drive on Departure
CDA - Chauffer Drive on Arrival
BSD - Bus Service on Departure
BSA - Bus Service on Arrival
</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:length value="3"/>
							<xsd:enumeration value="CDD"/>
							<xsd:enumeration value="CDA"/>
							<xsd:enumeration value="BSD"/>
							<xsd:enumeration value="BSA"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element name="PointOfSale">
					<xsd:annotation>
						<xsd:documentation>TODO</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:minLength value="1"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element ref="Text" minOccurs="0"/>
				<xsd:element ref="TelephoneNumber" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="MileKmLimit">
		<xsd:annotation>
			<xsd:documentation>Identifies mileage plan sold. 

Note: Amadeus does not have a designated format for mileage plan indicator. Thus, if entered and booking is for Amadeus GDS this value will be ignored. 
Values are: either UNL for unlimited mileage or a positive integer representing the max miles/km free for this rate.

NOTE: For Worldspan ExtraCharges is mandatory if MileKmLimit has value different than 'UNL' - worlspan requires charges per mile or kilometer to be entered.</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
				<xsd:pattern value="\d+|UNL"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="DirectPricing">
		<xsd:annotation>
			<xsd:documentation>Direct pricing using a fare reference for a particular passenger/segment combination. Only supported in LCC adapter (Non-GDS pricing).</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Fare" maxOccurs="2">
					<xsd:annotation>
						<xsd:documentation>Up to two one way fares or  one round trip fare can be priced together.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:choice>
								<xsd:element ref="SegmentIDRef" maxOccurs="2">
									<xsd:annotation>
										<xsd:documentation>ID reference used to asscociate this item to a segment.  

Example: F1</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element ref="FlightReferences" maxOccurs="2"/>
							</xsd:choice>
							<xsd:element ref="FareRefKey"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ValidatingCarrier">
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:length value="2"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="ServicePrice">
		<xsd:annotation>
			<xsd:documentation>EXCLUSIVELY used for non-fare related items, such as:

TASF (Travel Agt Service Fees)
DEPOSITS (EMD-S/MCO)</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="CurrencyCode" minOccurs="0"/>
				<xsd:element name="BasePrice">
					<xsd:annotation>
						<xsd:documentation>Base (net) price of Service</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:attribute name="Amount" use="required">
							<xsd:annotation>
								<xsd:documentation>Net price of service
Example: 6750</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="Taxes" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Tax Group</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Tax" minOccurs="0" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>Tax break down information group </xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence minOccurs="0">
										<xsd:element name="Designator" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Tax or surcharge designator.  Example: US</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="Description" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Tax or surcharge description.  Example: US national transportation</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
									<xsd:attribute name="Amount" use="required">
										<xsd:annotation>
											<xsd:documentation>Individual tax amount.  Example: 250</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
						<xsd:attribute name="Amount" use="required">
							<xsd:annotation>
								<xsd:documentation>Total taxes amount.  Example: 750</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Total" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Total amount for this service.

Total = base price +  total amount of taxes.

Example: 7500</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ProfileIndex">
		<xsd:annotation>
			<xsd:documentation>Associated profile index for this traveler.

Example: 6457</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute ref="Source">
						<xsd:annotation>
							<xsd:documentation>Identifies the profile source.

In other words where is the profile database hosted, e.g. CustomDB, etc.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="CorporateIndex">
						<xsd:annotation>
							<xsd:documentation>This is the ProfileIndex assign to the associated Corporate Profile of this traveler.

Example: 117</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="CorporateName">
						<xsd:annotation>
							<xsd:documentation>This is the Profile Name given to this corporation.

Example: IBM CORP</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="TicketText">
		<xsd:annotation>
			<xsd:documentation>Text related to the ticket penalty.  Values are:
AD = ticket is not refundable after departure

BD = ticket is not refundable before departure  
Example: BD </xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="AD"/>
				<xsd:enumeration value="BD"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Change">
		<xsd:annotation>
			<xsd:documentation>Change penalty group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Amount"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Cancel">
		<xsd:annotation>
			<xsd:documentation>Cancel penalty group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Amount"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Replace">
		<xsd:annotation>
			<xsd:documentation>Replacement penalty group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Amount" minOccurs="0"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FeeApplies">
		<xsd:annotation>
			<xsd:documentation>Fee applies group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="FailureToConfirm" default="N">
				<xsd:annotation>
					<xsd:documentation>Y = Pax must confirm space
N = No confirmation required
Example: N</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Cancellation" default="N">
				<xsd:annotation>
					<xsd:documentation>Y = Cancellation fee applies
N = No cancellation fee
Example: N</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Carrier" default="N">
				<xsd:annotation>
					<xsd:documentation>Y = Carrier fee applies
N = No carrier fee
Example: N</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="ReplaceTicket" default="N">
				<xsd:annotation>
					<xsd:documentation>Y = Replacement fee applies
N = No replacement fee
Example: N</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="ChangeItinerary" default="N">
				<xsd:annotation>
					<xsd:documentation>Y = Change itinerary fee applies
N = No change fee
Example: N</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Penalty">
		<xsd:annotation>
			<xsd:documentation>Penalty group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="TicketText" minOccurs="0"/>
				<xsd:element ref="FeeApplies" minOccurs="0"/>
				<xsd:element ref="CurrencyCode" minOccurs="0"/>
				<xsd:element ref="Change" minOccurs="0"/>
				<xsd:element ref="Cancel" minOccurs="0"/>
				<xsd:element ref="Replace" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="TicketRefundable" use="optional">
				<xsd:annotation>
					<xsd:documentation>Indicates if ticket is refundable.  Values are:
Y = Ticket is refundable
N = Ticket is not refundable
Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="DepositRequired" use="optional">
				<xsd:annotation>
					<xsd:documentation>Indicates if deposit is required.  Values are:
Y = Deposit required
N = Deposit not required
Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="DepositRefundable" use="optional">
				<xsd:annotation>
					<xsd:documentation>Indicates if deposit is refundable.  Values are:
Y = Deposit is refundable
N = Deposit is not refundable
Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="SegmentRefKey">
		<xsd:annotation>
			<xsd:documentation>SegmentRefKey contains  references for subsequent transactions (used by selected airlines, e.g. AC)</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="GroupInfo">
		<xsd:annotation>
			<xsd:documentation>Detailed Group PNR information.  This information will be used tocreate a Group PNR and to generate mandatory Group SSR (GRPS) elements.

Some data such as time limits for deposit and for submitting individual names can be used for PNR entries where allowed/required and serve as additional group information</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="GroupName">
					<xsd:annotation>
						<xsd:documentation>Group name.
(Mandatory for group SSR)
Example: ColoradoRiverRafting</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="GroupApproval" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Approval number given by airline. 
(Optional for group SSR)

Example: IT90</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="GroupFareDetails" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>For each PTC (Passenger Type Code) separate details are needed</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element ref="FareBasisCode">
								<xsd:annotation>
									<xsd:documentation>This is the contracted Fare Basis Code. 
Note: A Fare Basis Code may all that is assigned to a group.

Example: GWKD7</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:sequence minOccurs="0">
								<xsd:element ref="Amount">
									<xsd:annotation>
										<xsd:documentation>Fare Base Amount.  
Note: An amount is not necessarily needed for a group, a Fare Basis Code may be used as a group contract base.
Example: 7500</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element ref="CurrencyCode"/>
							</xsd:sequence>
							<xsd:element name="PTC" minOccurs="0" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>PTCs covered by this FareBasis code

Any IATA PTC is possible but these Group specific values are most common here: 
GIT = Group Inclusive Tour
GYT = Youth Group
GIY = Group InclTour Youth
GRP = Group
GSP = Group School Party

Example: GIT</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="GroupSize">
					<xsd:annotation>
						<xsd:documentation>Group size details</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:choice>
							<xsd:element name="OriginalSeats">
								<xsd:annotation>
									<xsd:documentation>The number of seats originally contracted for this group.
Example: 80</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="SeatAddition">
								<xsd:annotation>
									<xsd:documentation>Number of seats to be added to current allocation.
Example: 10</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="SeatReduction">
								<xsd:annotation>
									<xsd:documentation>Number of seats to be removed from current seat allocation.
Example: 10</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:choice>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="NameTimeLimit" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Date by which the individual names must be given.  Also called the NTBA (Names to be advised) or Names Time Limit.
</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element ref="Date">
								<xsd:annotation>
									<xsd:documentation>Date to be given in ISO 8601 format (yyyy-mm-dd)

Example: 2009-05-10</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="DepositTimeLimit" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Date by which the contracted deposit is to be paid.  There may be multiple deposit time limits (at various stages of the group sale)</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element ref="Date">
								<xsd:annotation>
									<xsd:documentation>Date to be given in ISO 8601 format (yyyy-mm-dd)

Example: 2009-05-10</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:choice>
								<xsd:element name="Percentage">
									<xsd:annotation>
										<xsd:documentation>Typically a percentage (without fraction), e.g. 25% of the total group fare.

Example:  25</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:sequence>
									<xsd:element ref="Amount"/>
									<xsd:element ref="CurrencyCode"/>
								</xsd:sequence>
							</xsd:choice>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="BookingInstructions">
		<xsd:annotation>
			<xsd:documentation>Contains instructions how to book this service with respective source</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="SSRCode" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="OSIText" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="Method" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Allowed Values are:
SSR
API
OSI</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="UpgradeMethod" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Allowed Values:
A = AutoUpgrade
S = SSR request</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:simpleContent>
							<xsd:extension base="xsd:string">
								<xsd:attribute name="NewClass">
									<xsd:annotation>
										<xsd:documentation>Instructs which new class to book</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
							</xsd:extension>
						</xsd:simpleContent>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Any freeflow to instruct DC</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Equipment" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Use of this node here is experimental</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="UserInput" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>User input required for this service</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="UserText" minOccurs="0" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>Returned user entry</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:simpleContent>
										<xsd:extension base="xsd:string">
											<xsd:attribute name="InputID" use="required">
												<xsd:annotation>
													<xsd:documentation>Identifies this input value for backend component.
Sample: 
PUTime,
DOTime,
Address,
etc</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
										</xsd:extension>
									</xsd:simpleContent>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="UserDropdown" minOccurs="0" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>Returned user selection</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="MenuItem">
											<xsd:annotation>
												<xsd:documentation>Item(s) selected by user</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
									<xsd:attribute name="InputID" use="required">
										<xsd:annotation>
											<xsd:documentation>Identifies this input value for backend component.
Sample: 
PUTime,
DOTime,
Address,
etc</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="UserChoices" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Returned user selection</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element ref="FlightOptions"/>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Equipment">
		<xsd:annotation>
			<xsd:documentation>Flight equipment group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Code"/>
				<xsd:element ref="Name"/>
			</xsd:sequence>
			<xsd:attribute name="AircraftType">
				<xsd:annotation>
					<xsd:documentation>Airline specific 'physical aircraft type'

Example:  757</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Name" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Equipment name.  Example: Boeing 747 series</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="QualifierGroup">
		<xsd:annotation>
			<xsd:documentation>Contains qualifiers such as Corporate ID, Contract ID, LoyaltyProgram ID, Office ID, Promotion ID </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="PromoCodes" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Promo info group</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Corporate" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="LoyaltyPrograms" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Loyalty Program data</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:choice minOccurs="0">
								<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
								<xsd:element ref="TravelerReferences"/>
							</xsd:choice>
							<xsd:element name="LoyaltyMemberID">
								<xsd:annotation>
									<xsd:documentation>Membership number </xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="Name">
								<xsd:annotation>
									<xsd:documentation>Individual Program name</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="GroupID" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Associates this account to a pre-defined group</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element ref="AirlineCode">
								<xsd:annotation>
									<xsd:documentation>Airline code of the airline offering this Loyaty Program</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
						<xsd:attribute name="CorporateIndex">
							<xsd:annotation>
								<xsd:documentation>Corporation associated with this program</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="InExchangeForTicket">
		<xsd:annotation>
			<xsd:documentation>Mandatory for AutoExchange applications such as ReShop from ITA.  If used, then the attribute @Reshop in the PricingInfo node MUST also be set to "Y".</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="TicketNumber" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>The 13-digit TicketNumber to be used for Auto Exchange proccesses, such as ReShop from ITA.

In case of a conjunctive set, this is the 1st number of the set.

Example: 0110987654321</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:simpleContent>
							<xsd:extension base="xsd:integer">
								<xsd:attribute ref="Source" use="required"/>
								<xsd:attribute name="TravelerID" use="required">
									<xsd:annotation>
										<xsd:documentation>The traveler element number associated to this ticket.

Example: 1</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
								<xsd:attribute name="PaxType" type="xsd:string" use="required">
									<xsd:annotation>
										<xsd:documentation>Passenger type priced from original ticket image. 

Some IATA values are :
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
							</xsd:extension>
						</xsd:simpleContent>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="InstantPurchase">
		<xsd:annotation>
			<xsd:documentation>Instant Purchase indicator.  Values are:
CC = Purchase is immediately charged to CC
AP = Purchase is using AirPass credit(s)
PP = Purchase is charged via PayPal (future use)
N = not an instant purchase (default)

Example: CC</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
				<xsd:maxLength value="2"/>
				<xsd:enumeration value="TT"/>
				<xsd:enumeration value="CC"/>
				<xsd:enumeration value="AP"/>
				<xsd:enumeration value="PP"/>
				<xsd:enumeration value="N"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="ProgramName" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Frequent flyer program name.  Example: Frequence Plus</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CompanyCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Car Company or Hotel Chain 2-letter code.  Example: ZE</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="AssociationCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Code for organization or association.  Example: AARP, AAA</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="FlightOptions">
		<xsd:annotation>
			<xsd:documentation>Alternate flights offered w/this service, such as stand by flight choices (or reaccommodation flights)</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Flight" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Flight group</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="DepartureCode" use="required">
				<xsd:annotation>
					<xsd:documentation>Departure airport or city code for overall OD.  Example: JFK</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="3"/>
						<xsd:maxLength value="3"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="ArrivalCode" use="required">
				<xsd:annotation>
					<xsd:documentation>Arrival airport or city code for overall OD.  Example: MIA</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="3"/>
						<xsd:maxLength value="3"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FlightReferences">
		<xsd:annotation>
			<xsd:documentation>Flight/Segment element associated to this item</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirlineCode"/>
				<xsd:element ref="FlightNumber"/>
				<xsd:element ref="ClassOfService"/>
				<xsd:element ref="Date"/>
				<xsd:element ref="Time"/>
				<xsd:element ref="DepartureCode"/>
				<xsd:element ref="ArrivalCode"/>
			</xsd:sequence>
			<xsd:attribute name="BookingDate" use="required">
				<xsd:annotation>
					<xsd:documentation>ISO format: yyyy-mm-dd</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="BookingTime" use="required">
				<xsd:annotation>
					<xsd:documentation>ISO format: hh:mm</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DepartureCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Departure airport or city code.  Example: MIA</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ArrivalCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Arrival airport or city code.  Example: NYC</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="TravelerReferences">
		<xsd:annotation>
			<xsd:documentation>Name group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Surname"/>
				<xsd:element ref="GivenName"/>
				<xsd:element ref="Initial" minOccurs="0"/>
				<xsd:element ref="Title" minOccurs="0"/>
				<xsd:choice minOccurs="0">
					<xsd:element ref="Age" minOccurs="0"/>
					<xsd:element ref="DateOfBirth" minOccurs="0"/>
				</xsd:choice>
				<xsd:element name="Gender" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Traveler gender.  Values are: F = Female M = Male.  Example: M</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:enumeration value="F"/>
							<xsd:enumeration value="M"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element ref="InfantData" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="Type" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>Passenger type. Values are: ADT = Adult, INS = Infant occupying seat, CHD = Child, YTH = Youth, MIL = Military, GOV = Government, SRC = Senior Citizen, STD = Student (Example: ADT)</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="InfantData">
		<xsd:annotation>
			<xsd:documentation>Infant traveler group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Surname"/>
				<xsd:element name="GivenName" type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>Infant Traveler given (first) name.  </xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="DateOfBirth"/>
				<xsd:element ref="Gender" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="Type" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>Infant PAX type. Although regular INF type will be automatically set, this optional attribute would show if present a different PTC for infants. Particularly useful for bulk contracts - JNF pax type. 
Example: JNF</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ServiceReferences">
		<xsd:annotation>
			<xsd:documentation>This set of data values to be used instead of element number references.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="PriceRefKey" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="ServiceType">
				<xsd:annotation>
					<xsd:documentation>The ATPCO defined code for the type of service (also referred to as 'Flight/Ticket/Merchandise Byte 21)':

F = Flight (TypeValue=2)
R = Rule Buster (Type Value = 5)
T = Ticket (TypeValue=3 if EMD-S is issued, 4 if other)
M = Merchandise (TypeValue=1 if EMD-S is issued, 4 if other)</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ServiceCode">
				<xsd:annotation>
					<xsd:documentation>Additional unique ATPCO code.
Example: OC</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="SubCode">
				<xsd:annotation>
					<xsd:documentation>ATPCO RFISC (ReasonForIssuance  SubCode).
Example of RFISC: 0CC  </xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>
