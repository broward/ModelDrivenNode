<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<xsd:include schemaLocation="CommonTypes.xsd"/>
	<xsd:element name="FlightPriceRQ">
		<xsd:annotation>
			<xsd:documentation>Flight price request root element</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="FlightPassGroup" minOccurs="0"/>
				<xsd:element ref="SaleInfo" minOccurs="0"/>
				<xsd:element ref="TicketingInfo" minOccurs="0"/>
				<xsd:element name="RecordLocator" type="PNRRecordLocator" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>PNR record locator hosting the segments used in this request in order to provide additional PNR data.  

For internal tracking purposes only (no GDS PNR retrieval will take place)
Example: XJUATR</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="TravelerInfo" maxOccurs="unbounded"/>
				<xsd:element name="TravelerIDs" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>If no PNR exists (shopping), this provides traveler types as well as FQTV information for each traveler.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:choice minOccurs="0">
								<xsd:element ref="TravelerIDRef">
									<xsd:annotation>
										<xsd:documentation>Reference to an existing Traveler element in the PNRViewRS or an arbitrary association value..

Example: 1</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element ref="TravelerReferences">
									<xsd:annotation>
										<xsd:documentation>Traveler name details</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:choice>
							<xsd:element name="FQTVInfo" minOccurs="0" maxOccurs="unbounded">
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="FFNumber" type="xsd:string">
											<xsd:annotation>
												<xsd:documentation>Frequent flyer number.  Example: 0956301007</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="FFCompanyCode" type="xsd:string">
											<xsd:annotation>
												<xsd:documentation>Frequent flyer company code.  Example: AF</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="LoyaltyProgramRef" minOccurs="0" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>Loyalty Program data</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="LoyaltyMemberID">
											<xsd:annotation>
												<xsd:documentation>Membership number </xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="Name">
											<xsd:annotation>
												<xsd:documentation>Individual Program name</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element ref="AirlineCode">
											<xsd:annotation>
												<xsd:documentation>Airline code of the airline offering this Loyaty Program</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="ProgramStatus" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Traveler Status related to Program
Example: VP, DIR</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
									<xsd:attribute name="ProgramGroup">
										<xsd:annotation>
											<xsd:documentation>Group association within program</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="FreqGuestNumber" minOccurs="0" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>Frequent Guest Card and Status information</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element ref="CompanyCode"/>
										<xsd:element ref="IDNumber">
											<xsd:annotation>
												<xsd:documentation>Frequent Renter or Guest ID number.  Example: 0956301007</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element ref="ProgramName" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Program name.  

Example: 
Miles and More (air)
Hilton HHonors (hotel)
Emerald Club (car)</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="Association" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Associated airline frequent flyer program.  This is the frequent flyer program a traveler assigns in order to earn additional miles/points from hotel and/or car companies</xsd:documentation>
											</xsd:annotation>
											<xsd:complexType>
												<xsd:sequence>
													<xsd:element ref="AirlineCode">
														<xsd:annotation>
															<xsd:documentation>Issuing Airline Code.  Example: LH</xsd:documentation>
														</xsd:annotation>
													</xsd:element>
													<xsd:element ref="IDNumber">
														<xsd:annotation>
															<xsd:documentation>Frequent flyer ID number.  Example: 0956301007</xsd:documentation>
														</xsd:annotation>
													</xsd:element>
												</xsd:sequence>
											</xsd:complexType>
										</xsd:element>
									</xsd:sequence>
									<xsd:attribute name="Type">
										<xsd:annotation>
											<xsd:documentation>Identified association to one of the following groups:

C = CAR
H = HOTEL </xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="OtherMemberships" minOccurs="0" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>Discount Cards such as AAA, AARP, etc.</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element ref="AssociationCode" minOccurs="0"/>
										<xsd:element ref="IDNumber">
											<xsd:annotation>
												<xsd:documentation>Membership ID number.  Example: 0956301007</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element ref="ProgramName" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Program name.  

Example: 
AARP Membership
AAA Membership</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
							<xsd:element ref="ProfileIndex" minOccurs="0"/>
							<xsd:choice minOccurs="0">
								<xsd:element ref="CreditCard" maxOccurs="unbounded"/>
								<xsd:element name="CCIssuer" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="CCIINNumber" type="xsd:integer" minOccurs="0">
												<xsd:annotation>
													<xsd:documentation>Credit card IIN/BIN number.
A six-digit Issuer Identification Number (IIN),  Also Knows as BIN "Bank Identification Number". 
Example: 401123</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element ref="CCCode"/>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
							</xsd:choice>
						</xsd:sequence>
						<xsd:attribute name="AssociationID">
							<xsd:annotation>
								<xsd:documentation>[DEPRECATED - use element TravelerRef or TravelerReferences instead]

A unique traveler reference if an association to individual travelers is needed, such as for optional services.

Example: T1</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="PaxType" type="xsd:string" use="required">
							<xsd:annotation>
								<xsd:documentation>Passenger type requested for pricing. 

Some IATA values are :
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="OriginDestination" maxOccurs="unbounded"/>
				<xsd:element name="OptionalServices" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Optional Services group</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Service" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>Service details</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:choice minOccurs="0">
											<xsd:element ref="SegmentIDRef" maxOccurs="unbounded">
												<xsd:annotation>
													<xsd:documentation>Use the attribute AssociationID of the flight element within this message, e.g. "F1"</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element ref="FlightReferences" maxOccurs="unbounded"/>
										</xsd:choice>
										<xsd:choice minOccurs="0">
											<xsd:element ref="TravelerIDRef">
												<xsd:annotation>
													<xsd:documentation>If FlightPriceRQ/Traveler provides AssociationID values, this services should identify to which traveler it is associated.

The corresponding response will return the association in the final response.

Example: T1</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element ref="TravelerReferences"/>
										</xsd:choice>
										<xsd:element name="ServiceLocation" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Optionally used for non-flight related services, such as airline lounge pass, pre-paid booklets for drinks/meals or WiFi.

This is the 3-letter IATA city- or airport code related to the service.  For example, an airport lounge pass may only be valid for one location.

Example: DFW</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element ref="ServiceDate" minOccurs="0"/>
										<xsd:element name="Description" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Title description (Commercial Name) of this service - normally a one liner, e.g. "3rd Bag Fee"</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="DescriptionVariable" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>This value is used to provide a variable value for an selected service.

Sample: for a Premium Seat this will be a seat number; for a annual pass of onboard WiFi this will be the credentials, etc.  

Examples:
"9D"
"UID: GO8978 PW: 1234"</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="DescriptionDetails" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Detailed description of this service</xsd:documentation>
											</xsd:annotation>
											<xsd:complexType>
												<xsd:sequence>
													<xsd:element name="Text" maxOccurs="unbounded"/>
												</xsd:sequence>
											</xsd:complexType>
										</xsd:element>
										<xsd:element name="ReferenceKey" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Unique reference key. If present in pricing response messages, must be included.</xsd:documentation>
											</xsd:annotation>
											<xsd:simpleType>
												<xsd:restriction base="xsd:string">
													<xsd:minLength value="1"/>
												</xsd:restriction>
											</xsd:simpleType>
										</xsd:element>
										<xsd:element name="Diagnostics" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Unique Diagnostic ID</xsd:documentation>
											</xsd:annotation>
											<xsd:complexType>
												<xsd:attribute name="ID">
													<xsd:annotation>
														<xsd:documentation>Unique diagnostic ID to track ancillary service issues with merchandising engine</xsd:documentation>
													</xsd:annotation>
												</xsd:attribute>
											</xsd:complexType>
										</xsd:element>
										<xsd:element ref="BookingInstructions"/>
									</xsd:sequence>
									<xsd:attribute name="AssociationID" type="xsd:ID" use="required">
										<xsd:annotation>
											<xsd:documentation>Unique ID used to associate to this element in the PricingInfo node of this message.  Example: S1</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="SaleStatus">
										<xsd:annotation>
											<xsd:documentation>Allowed Values:

"Issued"
"Booked"

"Issued" represents those services which have been issued and have a valid EMDInfo node

"Booked" represent items sold/booked but not yet issued

Values are returned in the response</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="ReasonCode" use="required">
										<xsd:annotation>
											<xsd:documentation>IATA RFIC (ReasonFor IssuanceCode, a 1-character main code)
Example of RFIC: A  

Note: Only services of same RFIC code can be combined on an EMD-A document.  For example, if there are services of RFIC code "A" and "B", two separate EMD documents are needed, issuing all services of "A" and "B" on seperate docs.</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="SubCode" use="required">
										<xsd:annotation>
											<xsd:documentation>ATPCO RFIS (ReasonForIssuance  Subcode).
Example of RFIS: 0CC  </xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="ServiceCode">
										<xsd:annotation>
											<xsd:documentation>Additional unique ATPCO code.
Example: OC</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="ServiceType">
										<xsd:annotation>
											<xsd:documentation>The ATPCO defined code for the type of service (also referred to as 'Flight/Ticket/Merchandise Byte 21)':

F = Flight (TypeValue=2)
R = Rule Buster (Type Value = 5)
T = Ticket (TypeValue=3 if EMD-S is issued, 4 if other)
M = Merchandise (TypeValue=1 if EMD-S is issued, 4 if other)</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="FareBrand">
										<xsd:annotation>
											<xsd:documentation>Service is part of a bundle associated to this fare brand</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="Quantity">
										<xsd:annotation>
											<xsd:documentation>This attribute provides how many service/items of the same type have been ordered. 

Possible Values: 
1-99; 1 being the default

Example: 3</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="ProviderIDRef">
										<xsd:annotation>
											<xsd:documentation>Allows to associate this service to a unique provider tag/id/ref</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ExcludedServices" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>This node is used exclusively for services which have been offered as INCLUDED but can be deselected by the user.  This currently only applies to branded fares were a bundle of services can be included in the brand.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Service" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>Service details</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:choice minOccurs="0">
											<xsd:element ref="SegmentIDRef" maxOccurs="unbounded">
												<xsd:annotation>
													<xsd:documentation>Use the attribute AssociationID of the flight element within this message, e.g. "F1"</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element ref="FlightReferences" maxOccurs="unbounded"/>
										</xsd:choice>
										<xsd:choice minOccurs="0">
											<xsd:element ref="TravelerIDRef">
												<xsd:annotation>
													<xsd:documentation>If FlightPriceRQ/Traveler provides AssociationID values, this services should identify to which traveler it is associated.

The corresponding response will return the association in the final response.

Example: T1</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element ref="TravelerReferences"/>
										</xsd:choice>
										<xsd:element name="ReferenceKey" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Unique reference key. If present in pricing response messages, must be included.</xsd:documentation>
											</xsd:annotation>
											<xsd:simpleType>
												<xsd:restriction base="xsd:string">
													<xsd:minLength value="1"/>
												</xsd:restriction>
											</xsd:simpleType>
										</xsd:element>
										<xsd:element name="Diagnostics" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Unique Diagnostic ID</xsd:documentation>
											</xsd:annotation>
											<xsd:complexType>
												<xsd:attribute name="ID">
													<xsd:annotation>
														<xsd:documentation>Unique diagnostic ID to track ancillary service issues with merchandising engine. If present in the offer it must be passed through.</xsd:documentation>
													</xsd:annotation>
												</xsd:attribute>
											</xsd:complexType>
										</xsd:element>
									</xsd:sequence>
									<xsd:attribute name="ReasonCode" use="required">
										<xsd:annotation>
											<xsd:documentation>IATA RFIC (ReasonFor IssuanceCode, a 1-character main code)
Example of RFIC: A  

Note: Only services of same RFIC code can be combined on an EMD-A document.  For example, if there are services of RFIC code "A" and "B", two separate EMD documents are needed, issuing all services of "A" and "B" on seperate docs.</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="SubCode" use="required">
										<xsd:annotation>
											<xsd:documentation>ATPCO RFIS (ReasonForIssuance  Subcode).
Example of RFIS: 0CC  </xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="ServiceCode">
										<xsd:annotation>
											<xsd:documentation>Additional unique ATPCO code.
Example: OC</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="FareBrand">
										<xsd:annotation>
											<xsd:documentation>Service is part of a bundle associated to this fare brand</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="PricingInfo" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="InExchangeForTicket" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Mandatory for AutoExchange applications such as ReShop from ITA.  If used, then the attribute @AutoExchange in the PricingInfo node MUST also be set to "Y".</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="version" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Version number.  Example: 1.0</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="DetailedFareType" type="xsd:string" default="N">
				<xsd:annotation>
					<xsd:documentation>Controls display of more detailed fare type info (only Amadeus for now, information is not returned by all GDS):
in case this attribute is set to 'Y' more detailed fare types will be displayed in the response; default value is 'N' which results in fare types PUBL, PRIV or NEGO;
(possible values are Y, N)</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="QueryID" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Optional, alphanumeric. Used only for internal tracking purposes.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="SaleInfo">
		<xsd:annotation>
			<xsd:documentation>Point of Sale information</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="CityCode" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Point of Sale City Code 
Example: BOS</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="CountryCode" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Point of Sale Country Code 
Example: US</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="CurrencyCode" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Point of Sale Currency Code
Example: USD</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:simpleContent>
							<xsd:restriction base="CurrencyCodeType">
								<xsd:pattern value="[A-Z0-9]{3}"/>
								<xsd:attribute name="NumberOfDecimals" type="xsd:integer" use="prohibited">
									<xsd:annotation>
										<xsd:documentation>Decimal position in fare amount.  Example: 2</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
							</xsd:restriction>
						</xsd:simpleContent>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="Identification" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CityCode">
		<xsd:annotation>
			<xsd:documentation>City where sale takes place or City where ticket will be issued. Example: MIA</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:maxLength value="3"/>
				<xsd:minLength value="3"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="CountryCode">
		<xsd:annotation>
			<xsd:documentation>Country where sale takes place or Ticket issuing country. Example: US</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:maxLength value="2"/>
				<xsd:minLength value="2"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="TicketingInfo">
		<xsd:annotation>
			<xsd:documentation>Ticketing Information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="CityCode" minOccurs="0"/>
				<xsd:element ref="CountryCode" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="TravelerInfo">
		<xsd:annotation>
			<xsd:documentation>Number of passengers of the specified type. 

Example: 2</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:integer">
					<xsd:attribute name="Type" type="xsd:string" use="required">
						<xsd:annotation>
							<xsd:documentation>Passenger type requested for pricing. If the passenger type sent to the GDS is not in the below predefined list, then it is passed as is to the GDS.
Predefined values are :
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="OriginDestination">
		<xsd:annotation>
			<xsd:documentation>Origin and Destination group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Flight" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Flight">
		<xsd:annotation>
			<xsd:documentation>Flight Info group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirlineCode"/>
				<xsd:element ref="FlightNumber"/>
				<xsd:element ref="Cabin" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Specifies cabin preference. Valid values are : F = First class, C = Business class, Y = Coach class, W = premium economy/coach. 
Example: F</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="ClassOfService"/>
				<xsd:element ref="Equipment"/>
				<xsd:element ref="Departure"/>
				<xsd:element ref="Arrival"/>
				<xsd:element ref="ActionCode" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>NOT SUPPORTED FOR GDS. IF ENTERED WILL BE IGNORED FOR GDS.
HOWEVER, SOME EXTERNAL PRICING ENGINES USE IT.

Action code for the sell of a segment.  This a standard defined action code used by different airlines and reservation systems.  If omitted the default value is NN.  Example: GK</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="NumberOfStops" minOccurs="0"/>
				<xsd:element ref="ReservationsDateTime" minOccurs="0"/>
				<xsd:element ref="PriceClass" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Identifies the price group (fare brand) associated to this flight.

If flights are selected from a branded fare offer in the FareSearchRS this element becomes mandatory</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="FareRefKey" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>If this value is present in the FareSearchRS it becomes mandatory to be mapped to this RQrequest</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute ref="Source" use="required"/>
			<xsd:attribute name="FlightRefKey">
				<xsd:annotation>
					<xsd:documentation>Unique ID to bind request and response, allows the UI to associate RQ and RS with an arbitrary values</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="AssociationID" type="xsd:ID" use="optional">
				<xsd:annotation>
					<xsd:documentation>Unique flight ID used to associate pricing information to the flight element.  Example: F1</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="MarriedSegment" use="optional">
				<xsd:annotation>
					<xsd:documentation>Married connection indicator.  Values:
B = Beginning of a group of married segments
E = End of a group of married segments</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="B"/>
						<xsd:enumeration value="E"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Type" use="optional">
				<xsd:annotation>
					<xsd:documentation>Optional flight type.  This is used to specify passive or open segments, and in the case of flown the segment is only added for historical pricing purposes.  
Values are:
P = Passive
O = Open
F = Flown (for pricing only)
Example: P</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="P"/>
						<xsd:enumeration value="O"/>
						<xsd:enumeration value="F"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="SelectedPriceOptions">
		<xsd:annotation>
			<xsd:documentation>List of all purchased/selected pricing options (discounts and surcharges)</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Option" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Individual pricing option</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Description" minOccurs="0">
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="Text" maxOccurs="unbounded">
											<xsd:annotation>
												<xsd:documentation>Title description of offered option - normally a one liner, e.g. "Check Baggage"
</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
							<xsd:choice>
								<xsd:element name="Amount" minOccurs="0" maxOccurs="5">
									<xsd:annotation>
										<xsd:documentation>NEW --- Amount for this option (or option differential in case of upsell) in amount.

The amount can be different for the various FQTVStatus (Tier levels)

Example: 1500
(this translates e.g. to $3.00 and $15.00 for USD)

Currency/Decimals of FareGroup applies</xsd:documentation>
									</xsd:annotation>
									<xsd:complexType>
										<xsd:simpleContent>
											<xsd:extension base="xsd:string">
												<xsd:attribute name="Included">
													<xsd:annotation>
														<xsd:documentation>*** NEW ***

Allowed Values:  I

Identifies that this item is free of charge due to FQTV status</xsd:documentation>
													</xsd:annotation>
												</xsd:attribute>
												<xsd:attribute name="NotApplicable">
													<xsd:annotation>
														<xsd:documentation>*** NEW ***

Allowed Values: Y

If set to 'Y' this item is not available/applicable due to FQTV status.

Sample:  Earning extra miles may only be allowed for a PLT status and is not applicable for a traveler without a FQTV account</xsd:documentation>
													</xsd:annotation>
												</xsd:attribute>
												<xsd:attribute name="FQTVNumber">
													<xsd:annotation>
														<xsd:documentation>This is the actual FrequentFlyer number associated to the FQTVStatus.  This will allow the POS GUI to associate the actual traveler with the respective option/price</xsd:documentation>
													</xsd:annotation>
												</xsd:attribute>
												<xsd:attribute name="FQTVStatus">
													<xsd:annotation>
														<xsd:documentation>The status (tier level) of the traveler's FQTV account.

This will be the value as provided by airline's FQTV database.

Samples:
AA(American AAdvantage):
-- Gold
-- Platinum
-- Executive Platinum

LH (Miles and More):
-- Frequent Traveller
-- Senator
-- HON Circle

EK (Emirates Skywards):
-- Silver
-- Gold</xsd:documentation>
													</xsd:annotation>
												</xsd:attribute>
											</xsd:extension>
										</xsd:simpleContent>
									</xsd:complexType>
								</xsd:element>
								<xsd:element name="OptionRefKey" minOccurs="0">
									<xsd:annotation>
										<xsd:documentation>A reference key previously assigned to an offered option or upsell may be passed thru to purchase such option.</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:choice>
						</xsd:sequence>
						<xsd:attribute name="OptionName" type="xsd:string" use="optional">
							<xsd:annotation>
								<xsd:documentation>Option Name or IATA RFIC (ReasonForIssuanceCode, a 1-character main code)

Example of Option Name: 
GO1_0

Example of RFIC: 
A  </xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="OptionID" use="optional">
							<xsd:annotation>
								<xsd:documentation>Unique Option ID or ATPCO RFIS (ReasonForIssuance) Subcode.

Example of unique ID: 
div020

Example of RFIS: 
0CC  </xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="Type" use="optional">
							<xsd:annotation>
								<xsd:documentation>Indicator if this option is a discount or a surcharge;
Values are: 
"Discount" - subtracted from fare
"Surcharge" - added to fare 

Note: A Discount is not possible when EMD method is used, but can be used for Fare Integrated method and Direct Settlement method</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AirlineCode">
		<xsd:annotation>
			<xsd:documentation>Airline Code. Example: DL</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:maxLength value="2"/>
				<xsd:minLength value="2"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Departure">
		<xsd:annotation>
			<xsd:documentation>Departure Information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirportCode"/>
				<xsd:element name="Date" type="Date">
					<xsd:annotation>
						<xsd:documentation>Specifies departure date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="Time" type="Time">
					<xsd:annotation>
						<xsd:documentation>Departure time in ISO 8601 twenty-four hour clock format. Example: 14:00</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Arrival">
		<xsd:annotation>
			<xsd:documentation>Arrival Information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirportCode"/>
				<xsd:element name="Date" type="Date">
					<xsd:annotation>
						<xsd:documentation>Specifies arrival date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="Time" type="Time">
					<xsd:annotation>
						<xsd:documentation>Arrival time in ISO 8601 twenty-four hour clock format. Example: 14:00</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PricingInfo">
		<xsd:annotation>
			<xsd:documentation>Fare Qualifier group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="SegmentIDRef" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>Allows to price (optional) services.

Use the attribute AssociationID of the flight element within this message, e.g. "F1"</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="FlightReferences" maxOccurs="unbounded"/>
				</xsd:choice>
				<xsd:choice minOccurs="0">
					<xsd:element ref="ServiceIDRef" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>Allows to price and re-priced new and existing (optional) services.

For booked services this is the reference to an existing ServiceElement, e.g. "8". For a new booking this references to the attribute AssociationID of the newly booked service element within this message, e.g. "S1"</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="ServiceReferences" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>This set of data values to be used instead of element number references.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
				<xsd:element name="ServicesFilter" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Used to request a filtered list of offered services.  The filter codes used are defined by ATPCO (S5 record attributes)

Note: can ONLY be used when attribute "RequestOption" value="Y".</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Attributes" minOccurs="0" maxOccurs="unbounded">
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="Group">
											<xsd:annotation>
												<xsd:documentation>Samples:
BG = Baggage
FF = Frequent Flyer
GT = Ground Transportation
         and Non Air Services
IE = In-flight entertainment
LG = Lounge
MD = Medical
ML = Meal/Beverage
PT = Pets
RO = Rule Override
SA = Prereserved Seat
         Assignment
SB = Standby
ST = Store
TS = Travel Services
UN = Unaccompanied
         Travel (Escort)
UP = Upgrades</xsd:documentation>
											</xsd:annotation>
											<xsd:complexType>
												<xsd:sequence>
													<xsd:element name="Code">
														<xsd:annotation>
															<xsd:documentation>Example: BG</xsd:documentation>
														</xsd:annotation>
													</xsd:element>
												</xsd:sequence>
											</xsd:complexType>
										</xsd:element>
										<xsd:element name="SubGroup" minOccurs="0" maxOccurs="unbounded">
											<xsd:annotation>
												<xsd:documentation>Samples for group "BG"
CT = Container
PP = Pre-paid excess
         baggage

Samples group "GT"
BU = Bus
LI = Limo, etc

Samples group "IE"
IT = Internet access
TV = Television, etc</xsd:documentation>
											</xsd:annotation>
											<xsd:complexType>
												<xsd:sequence>
													<xsd:element name="Code">
														<xsd:annotation>
															<xsd:documentation>Example: PP</xsd:documentation>
														</xsd:annotation>
													</xsd:element>
												</xsd:sequence>
											</xsd:complexType>
										</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="Restrictions" minOccurs="0"/>
				<xsd:element name="PricingCurrency" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Desired currency override for pricing only (not ticketing)
Example: EUR</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="PrivateFares" minOccurs="0"/>
				<xsd:element name="FareSelection" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Fare selection qualifiers, such as Ticket designator (journey level) and FareBasisCodes (flight/OD level)</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element ref="TicketDesignator" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Ticket designator provided here is used for fare selection at a journey level</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="SelectionData" minOccurs="0" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>Group fare selection data by PaxType (e.g. ADT, CHD, etc)</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="FareBasis" maxOccurs="unbounded">
											<xsd:annotation>
												<xsd:documentation>A FareBasisCode provided here is used for fare selection at the flight/OD level</xsd:documentation>
											</xsd:annotation>
											<xsd:complexType>
												<xsd:sequence>
													<xsd:choice minOccurs="0">
														<xsd:element ref="SegmentIDRef" maxOccurs="unbounded">
															<xsd:annotation>
																<xsd:documentation>ID reference used to asscociate this item to the respective FareBasisCode.</xsd:documentation>
															</xsd:annotation>
														</xsd:element>
														<xsd:element ref="FlightReferences" maxOccurs="unbounded"/>
													</xsd:choice>
													<xsd:element ref="FareBasisCode">
														<xsd:annotation>
															<xsd:documentation>Applies to entire pricing request if not associated to selected segments</xsd:documentation>
														</xsd:annotation>
													</xsd:element>
												</xsd:sequence>
											</xsd:complexType>
										</xsd:element>
									</xsd:sequence>
									<xsd:attribute name="PaxType" type="xsd:string" use="required">
										<xsd:annotation>
											<xsd:documentation>Passenger type code.

Some IATA values are :
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="ValidatingCarrier" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Allows to specify the validating carrier for pricing. Example: DL</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="AgencyType" minOccurs="0"/>
				<xsd:element ref="ReservationsDateTime" minOccurs="0"/>
				<xsd:element ref="HistoricPricingDate" minOccurs="0"/>
				<xsd:element ref="AltTicketingDate" minOccurs="0"/>
				<xsd:element name="TaxExemption" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Allows to exempt tax(es) by different criteria</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:choice minOccurs="0">
								<xsd:element ref="SegmentIDRef" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>Allows to price (optional) services.

Use the attribute AssociationID of the flight element within this message, e.g. "F1"</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element ref="FlightReferences" maxOccurs="unbounded"/>
							</xsd:choice>
							<xsd:element name="TaxCode" minOccurs="0" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>Exemption is based on identified tax codes plus (optional) tax types within a tax code</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="Designator">
											<xsd:annotation>
												<xsd:documentation>Identifies the Tax Code to be exempt, e.g. AY</xsd:documentation>
											</xsd:annotation>
											<xsd:complexType>
												<xsd:simpleContent>
													<xsd:extension base="xsd:string">
														<xsd:attribute name="CollectionPoint">
															<xsd:annotation>
																<xsd:documentation>3-letter airport code to identify the exemption of a  ZP or XF tax for this location</xsd:documentation>
															</xsd:annotation>
														</xsd:attribute>
													</xsd:extension>
												</xsd:simpleContent>
											</xsd:complexType>
										</xsd:element>
										<xsd:element name="TaxType" minOccurs="0" maxOccurs="unbounded">
											<xsd:annotation>
												<xsd:documentation>Identifies the tax type(s) within the tax code

Example: SE, TR</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
							<xsd:element ref="CountryCode" minOccurs="0" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>Exemption based on country code(s).</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="ProvinceCode" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Used in Canadian market.  Exemption is based on provinces</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="GovernmentBody" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Used in Canadian market.  Freeflow entity name must be provided for ceratin exemptions</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
						<xsd:attribute name="ExemptALL">
							<xsd:annotation>
								<xsd:documentation>Exempt from all taxes

Values allowed:
N = (default)
Y = exempt of all taxes</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="FareType">
				<xsd:annotation>
					<xsd:documentation>Specifies the type of fare.
PUBL = Published 
NEGO = Negotiated and Private 
BOTH = Published and Negotiated
ATPC = ATPCO loaded Private fares 

Note: If attribute value of "RequestOptions" = Y then do not provide any "FareType" attribute value.
</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="3"/>
						<xsd:maxLength value="4"/>
						<xsd:enumeration value="NEGO"/>
						<xsd:enumeration value="PUBL"/>
						<xsd:enumeration value="BOTH"/>
						<xsd:enumeration value="ATPC"/>
						<xsd:enumeration value="OPT"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="BestPricing" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Used to find the best fare available regardless of the class of service requested.  Possible values are:
Y = get the best fare available in the same cabin class
C = get the best fare available across all cabin classes (not supported on Sabre and Worldspan)
N = price accordingly to the other parameters in the PricingInfo group.
Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"/>
						<xsd:maxLength value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="C"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Cabin">
				<xsd:annotation>
					<xsd:documentation>A cabin preference for the complete itinerary. Will only be applied if @BestPricing is set to "C" (cross-cabin best pricing) and ignored otherwise.

NOTE: Currently only supported for Apollo/Galileo

Values: 
P = Premium first class
F = First class
C = Business class
W = Premium economy/coach. 
Y = Coach class

Example: C</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="C"/>
						<xsd:enumeration value="F"/>
						<xsd:enumeration value="P"/>
						<xsd:enumeration value="W"/>
						<xsd:enumeration value="Y"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="RequestOptions" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Used to request optional services offered by the airline(s) such as (flight, ticket, merchandising) options, e.g. premium seats, in-flight WiFi, baggage charge, etc.

Possible values are:
Y = get PricingOptions if available, otherwise return fare

If value=Y then there can not be a "FareType" attribute value.

Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"/>
						<xsd:maxLength value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="ImageSupport">
				<xsd:annotation>
					<xsd:documentation>Client application must indicate if application supports full images or image ids for this request.

Possible values:
IMG = client request the return of full images (in base64 code) in the response message.
ID = client requests only the image ID(s) in the response (and is utilizing the message ImageRQ/RS for subsequent retrieval of the image(s) itself.
BLANK (default) - if left blank no images nor image ids are returned

Example: ID</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ConnectionSelection" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Indicates if a connection selection pricing must be applied in Sabre.  Possible values are:
- Y: apply connection selection pricing
- N: do not apply connection selection pricing (default)
Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="AutoExchange">
				<xsd:annotation>
					<xsd:documentation>Allowed value = "Y"

Identifies this request as a request to be handled by an auto-exchange process (e.g. ReShop by ITA).

If set to "Y" a TicketImage must be populated as well</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PrivateFares">
		<xsd:annotation>
			<xsd:documentation>Negotiated Fares (Private Fares) group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Office" maxOccurs="unbounded"/>
				<xsd:element ref="Corporate" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="PromoCodes" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="Discounts" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Discount Group</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Discount" maxOccurs="unbounded">
								<xsd:complexType>
									<xsd:sequence>
										<xsd:choice minOccurs="0">
											<xsd:element ref="SegmentIDRef" maxOccurs="unbounded"/>
											<xsd:element ref="FlightReferences" maxOccurs="unbounded"/>
										</xsd:choice>
										<xsd:element name="DiscountValue">
											<xsd:annotation>
												<xsd:documentation>The value in percentage or amount</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="DiscountID" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Any DiscountID (if used as a ZapOff this needs to be stored under TicketDesignator in the fare as well)</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element ref="TicketDesignator">
											<xsd:annotation>
												<xsd:documentation>Ticket designator provided here is for (discount) pricing purposes.  Any ticket designator used for fare selection is to be mapped to the root of the "PricingInfo/FareSelection" node.

Example 
DISC (default)
SPCL
AD75</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element ref="CurrencyCode" minOccurs="0"/>
									</xsd:sequence>
									<xsd:attribute name="PaxType" type="xsd:string" use="required">
										<xsd:annotation>
											<xsd:documentation>Passenger type requested for pricing. 

Some IATA values are :
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="DiscountType">
										<xsd:annotation>
											<xsd:documentation>A = amount in currency units (default)
P = percentage</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="DiscountBase">
										<xsd:annotation>
											<xsd:documentation>Indicates if discount is to be applied to Base Fare or Total Fare. Allowed values:
T = Total Fare
B = Base Fare (default)
Example: B</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ClassifiedGroup" minOccurs="0" maxOccurs="0">
					<xsd:annotation>
						<xsd:documentation>[DEPRECATED 10/2012] 
Use FareSelection node at root level of PrivateFares instead

Classified fare group.

Pricing by FBC and TicketDesignator (by PTC)</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element ref="SegmentIDRef" minOccurs="0" maxOccurs="unbounded"/>
							<xsd:element ref="FareBasisCode"/>
							<xsd:element ref="TicketDesignator" minOccurs="0"/>
							<xsd:element ref="PseudoCityCode" minOccurs="0"/>
						</xsd:sequence>
						<xsd:attribute name="PaxType" type="xsd:string">
							<xsd:annotation>
								<xsd:documentation>Passenger type requested for pricing. 

Some IATA values are :
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="TourCodes" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Discount Group</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="TourCode" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>TourCode applicable to the PTC (TravelerGroup)</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:attribute name="PaxType" type="xsd:string" use="required">
										<xsd:annotation>
											<xsd:documentation>Passenger type requested for pricing. 

Some IATA values are :
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="LoyaltyPrograms" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Loyalty Program data</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="LoyaltyMemberID">
								<xsd:annotation>
									<xsd:documentation>Membership number </xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element ref="Name">
								<xsd:annotation>
									<xsd:documentation>Individual Program name</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element ref="AirlineCode">
								<xsd:annotation>
									<xsd:documentation>Airline code of the airline offering this Loyaty Program</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Office">
		<xsd:annotation>
			<xsd:documentation>Pseudo city under which private fares are stored. Example: 18C6</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="Provider" use="required">
						<xsd:annotation>
							<xsd:documentation>Code of the provider system that holds the private fares.  Values are:
1A = Amadeus
1B = Abacus
1V = Apollo
1G = Galileo
1S = Sabre (also 1W)
1P = Worldspan
1U = ITA
XS = SITA
 Example: 1V</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:length value="2"/>
								<xsd:enumeration value="1A"/>
								<xsd:enumeration value="1B"/>
								<xsd:enumeration value="1S"/>
								<xsd:enumeration value="1V"/>
								<xsd:enumeration value="1G"/>
								<xsd:enumeration value="1P"/>
								<xsd:enumeration value="1W"/>
								<xsd:enumeration value="F1"/>
								<xsd:enumeration value="1U"/>
								<xsd:enumeration value="XS"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
					<xsd:attribute name="Type">
						<xsd:annotation>
							<xsd:documentation>Future use.
Identifies if Office value is a PCC or IATA agency code/ID. Default is PCC.
Example: PCC</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="PCC"/>
								<xsd:enumeration value="IATA"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Corporate">
		<xsd:annotation>
			<xsd:documentation>Corporate Info group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirlineCode" minOccurs="0"/>
				<xsd:element ref="Account" minOccurs="0"/>
				<xsd:element ref="Contract" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PromoCodes">
		<xsd:annotation>
			<xsd:documentation>Corporate info group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirlineCode" minOccurs="0"/>
				<xsd:element name="PromoCode">
					<xsd:annotation>
						<xsd:documentation>Code ID / Number</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Account">
		<xsd:annotation>
			<xsd:documentation>Specifies the corporate account number to use to price private fares. Example: 12345</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string"/>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Contract" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Specifies the contract code, to use to price private fares. Example: 00001</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Restrictions">
		<xsd:annotation>
			<xsd:documentation>Pricing Restriction group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="MinimumStay" use="optional" default="Y">
				<xsd:annotation>
					<xsd:documentation>Y = Allow Minimum stay with fare 
N = Don't Allow Minimum stay with fare 
Default: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="MaximumStay" use="optional" default="Y">
				<xsd:annotation>
					<xsd:documentation>Y = Allow Maximum stay with fare
N = Don't Allow Maximum stay with fare
Default: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Advance" use="optional" default="Y">
				<xsd:annotation>
					<xsd:documentation>Y = Allow advance Purchase with fare
N = Don't Allow advance Purchase with fare
Default: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Penalty" use="optional" default="Y">
				<xsd:annotation>
					<xsd:documentation>Y = Allow penalties with fare
N = Don't Allow penalties with fare
Default: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AirportCode">
		<xsd:annotation>
			<xsd:documentation>Origin or destination Airport Code. Example: MIA</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="3"/>
				<xsd:maxLength value="3"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Cabin">
		<xsd:annotation>
			<xsd:documentation>Specifies cabin preference. Valid values are : F = First class, C = Business class, Y = Coach class. Example: F</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
				<xsd:maxLength value="1"/>
				<xsd:enumeration value="F"/>
				<xsd:enumeration value="C"/>
				<xsd:enumeration value="Y"/>
				<xsd:enumeration value="W"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Equipment">
		<xsd:annotation>
			<xsd:documentation>Equipment group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Code"/>
				<xsd:element ref="Name"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Name" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Airplane type name.  Example: Boeing 747 series</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="AgencyType">
		<xsd:annotation>
			<xsd:documentation>Agency predefined pricing type code.  Example: LMG</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="QFees" use="optional">
						<xsd:annotation>
							<xsd:documentation>Q Fees.  Possible values are: Y = Request Q Fees to be returned  N = Do not request Q Fees to be returned.  Example: Y</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="Y"/>
								<xsd:enumeration value="N"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FareBasisCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Fare basis code. Example: Y26</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="PseudoCityCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Agency's pseudo city code. Example: AX49</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="TicketDesignator" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Ticket designator to price.  Example: AM10AC</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ActionCode">
		<xsd:annotation>
			<xsd:documentation>Action code for the sell of a segment.  This a standard defined action code used by different airlines and reservation systems.  If omitted the default value is NN.  Example: GK</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="2"/>
				<xsd:maxLength value="2"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="ServiceDate" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Date of service in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="NumberOfStops">
		<xsd:annotation>
			<xsd:documentation>Number of stops.  Example: 0</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:integer">
				<xsd:maxInclusive value="9"/>
				<xsd:minInclusive value="0"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="SegmentRefKey">
		<xsd:annotation>
			<xsd:documentation>SegmentRefKey contains  references for subsequent transactions (used by selected airlines, e.g. AC)</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="FlightPassGroup">
		<xsd:annotation>
			<xsd:documentation>FlightPassGroup element</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="FlightPass" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>FlightPass Element(s)</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="SessionID" type="xsd:string" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>FlightPass Session token ID</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="FlightPassID">
								<xsd:annotation>
									<xsd:documentation>Unique FlightPass ID</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:attribute name="Owner">
										<xsd:annotation>
											<xsd:documentation>Only used for AC

FlightPass Owner ID. For AC FlightPass, Aeroplan number</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="AirlineCode">
								<xsd:annotation>
									<xsd:documentation>Airline issuing this FlightPass.

Example: AC</xsd:documentation>
								</xsd:annotation>
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:length value="3"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PriceClass">
		<xsd:annotation>
			<xsd:documentation>Identifies the price group associated to this price, e.g. TANGO</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="Name">
				<xsd:annotation>
					<xsd:documentation>this is the exact name of the respective price class (fare brand).
</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ValidatingCarrier">
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:length value="2"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="InExchangeForTicket">
		<xsd:annotation>
			<xsd:documentation>Mandatory for AutoExchange applications such as ReShop from ITA.  If used, then the attribute @Reshop in the PricingInfo node MUST also be set to "Y".</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="TicketNumber" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>The 13-digit TicketNumber to be used for Auto Exchange proccesses, such as ReShop from ITA.

In case of a conjunctive set, this is the 1st number of the set.

Example: 0110987654321</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:simpleContent>
							<xsd:extension base="xsd:integer">
								<xsd:attribute ref="Source" use="required"/>
								<xsd:attribute name="TravelerID" use="required">
									<xsd:annotation>
										<xsd:documentation>The traveler element number associated to this ticket.

Example: 1</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
								<xsd:attribute name="PaxType" type="xsd:string" use="required">
									<xsd:annotation>
										<xsd:documentation>Passenger type priced from original ticket image. 

Some IATA values are :
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
							</xsd:extension>
						</xsd:simpleContent>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CreditCard">
		<xsd:annotation>
			<xsd:documentation>Credit card group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="CCCode"/>
				<xsd:element ref="CCNumber">
					<xsd:annotation>
						<xsd:documentation>Credit card number.  Example: 4011236654652341

Can be returned encrypted.
Example: XXXXXXXXXXXX2341</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="CCExpiration"/>
				<xsd:sequence minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Credit card holder's name</xsd:documentation>
					</xsd:annotation>
					<xsd:element ref="CardholderFirstName" minOccurs="0"/>
					<xsd:element ref="CardholderLastName"/>
				</xsd:sequence>
				<xsd:element name="CCAddressGroup" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Address" type="xsd:string" maxOccurs="2">
								<xsd:annotation>
									<xsd:documentation>Street or PO Box address.  Example: 1234 Main Street</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="City" type="xsd:string">
								<xsd:annotation>
									<xsd:documentation>City name.  Example: NY</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="PostalCode" type="xsd:string">
								<xsd:annotation>
									<xsd:documentation>Postal code or zip code.  Example: 12345</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="StateCode" type="xsd:string" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>State code.  Example: NY</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="CountryCode" type="xsd:string">
								<xsd:annotation>
									<xsd:documentation>Country code.  Example: US</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CCCode">
		<xsd:annotation>
			<xsd:documentation>Credit card code.  Example: VI</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string"/>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="CCNumber" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Credit card number.  Example: 4011236654652341</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CCExpiration">
		<xsd:annotation>
			<xsd:documentation>Credit card expiration group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Month">
					<xsd:annotation>
						<xsd:documentation>Credit card expiration month. Example: 02
Can be returned encrypted.
Example: XX</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Year">
					<xsd:annotation>
						<xsd:documentation>Last two digits of the credit card expiration year.  Example: 06
Can be returned encrypted.
Example: XX</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CardholderFirstName">
		<xsd:annotation>
			<xsd:documentation>Credit card holder's first name.  Example: JOHN</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="CardholderLastName" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Credit card holder's last name.  This is only required for Sabre.  Example: SMITH</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Month" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Credit card expiration month.  Example: 02</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Year" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Last two digits of the credit card expiration year.  Example: 06</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="IDNumber" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Frequent flyer or guest ID number.  Example: 0956301007</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ProgramName" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Frequent flyer program name.  Example: Frequence Plus</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CompanyCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Car Company or Hotel Chain 2-letter code.  Example: ZE</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="AssociationCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Code for organization or association.  Example: AARP, AAA</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ProfileIndex">
		<xsd:annotation>
			<xsd:documentation>Associated profile index for this traveler.

Example: 6457</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute ref="Source">
						<xsd:annotation>
							<xsd:documentation>Identifies the profile source.

In other words where is the profile database hosted, e.g. CustomDB, etc.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="CorporateIndex">
						<xsd:annotation>
							<xsd:documentation>This is the ProfileIndex assign to the associated Corporate Profile of this traveler.

Example: 117</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="CorporateName">
						<xsd:annotation>
							<xsd:documentation>This is the Profile Name given to this corporation.

Example: IBM CORP</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="SSRCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Special service request code.  IATA standard.  Example: VGML</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="FlightOptions">
		<xsd:annotation>
			<xsd:documentation>Alternate flights offered w/this service, such as stand by flight choices (or reaccommodation flights)</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Flight" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Flight group</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="DepartureCode" use="required">
				<xsd:annotation>
					<xsd:documentation>Departure airport or city code for overall OD.  Example: JFK</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="3"/>
						<xsd:maxLength value="3"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="ArrivalCode" use="required">
				<xsd:annotation>
					<xsd:documentation>Arrival airport or city code for overall OD.  Example: MIA</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="3"/>
						<xsd:maxLength value="3"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="BookingInstructions">
		<xsd:annotation>
			<xsd:documentation>Contains instructions how to book this service with respective source</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="SSRCode" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="OSIText" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="Method" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Allowed Values are:
SSR
API
OSI</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="UpgradeMethod" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Allowed Values:
A = AutoUpgrade
S = SSR request</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:simpleContent>
							<xsd:extension base="xsd:string">
								<xsd:attribute name="NewClass">
									<xsd:annotation>
										<xsd:documentation>Instructs which new class to book</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
							</xsd:extension>
						</xsd:simpleContent>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Any freeflow to instruct DC</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Equipment" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Use of this node here is experimental</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="UserInput" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>User input required for this service</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="UserText" minOccurs="0" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>Returned user entry</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:simpleContent>
										<xsd:extension base="xsd:string">
											<xsd:attribute name="InputID" use="required">
												<xsd:annotation>
													<xsd:documentation>Identifies this input value for backend component.
Sample: 
PUTime,
DOTime,
Address,
etc</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
										</xsd:extension>
									</xsd:simpleContent>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="UserDropdown" minOccurs="0" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>Returned user selection</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="MenuItem">
											<xsd:annotation>
												<xsd:documentation>Item(s) description selected by user</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
									<xsd:attribute name="InputID" use="required">
										<xsd:annotation>
											<xsd:documentation>Identifies this input value for backend component.
Sample: 
PUTime,
DOTime,
Address,
etc</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="UserChoices" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Returned user selection</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element ref="FlightOptions"/>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="TravelerReferences">
		<xsd:annotation>
			<xsd:documentation>Traveler name details</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Surname"/>
				<xsd:element ref="GivenName"/>
				<xsd:element ref="Initial" minOccurs="0"/>
				<xsd:element ref="Title" minOccurs="0"/>
				<xsd:choice minOccurs="0">
					<xsd:element ref="Age" minOccurs="0"/>
					<xsd:element ref="DateOfBirth" minOccurs="0"/>
				</xsd:choice>
				<xsd:element name="Gender" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Traveler gender.  Values are: F = Female M = Male.  Example: M</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:enumeration value="F"/>
							<xsd:enumeration value="M"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element ref="InfantData" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="Type" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>Passenger type. Values are: ADT = Adult, INS = Infant occupying seat, CHD = Child, YTH = Youth, MIL = Military, GOV = Government, SRC = Senior Citizen, STD = Student (Example: ADT)</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Surname" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Traveler family (last) name.  Example: SMITH</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="GivenName" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Traveler given (first) name.  Example: JANE</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Initial" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Traveler middle initial.  Example: G</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Title" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Traveler title.  Example: MISS</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Age" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Traveler age.  Age is not supported in Galileo.  Example: 01</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="DateOfBirth" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Traveler birth date in ISO 8601 format (yyyy-mm-dd).  Date of birth is not supported in Galileo.  Example: 2001-12-25</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Gender">
		<xsd:annotation>
			<xsd:documentation>Traveler gender.  Values are: F = Female M = Male.  Example: M</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
				<xsd:maxLength value="2"/>
				<xsd:enumeration value="F"/>
				<xsd:enumeration value="M"/>
				<xsd:enumeration value="MI"/>
				<xsd:enumeration value="FI"/>
				<xsd:enumeration value="U"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="InfantData">
		<xsd:annotation>
			<xsd:documentation>Infant traveler group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Surname"/>
				<xsd:element name="GivenName" type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>Infant Traveler given (first) name.  </xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="DateOfBirth"/>
				<xsd:element ref="Gender" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="Type" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>Infant PAX type. Although regular INF type will be automatically set, this optional attribute would show if present a different PTC for infants. Particularly useful for bulk contracts - JNF pax type. 
Example: JNF</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FlightReferences">
		<xsd:annotation>
			<xsd:documentation>Flight/Segment element associated to this item</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirlineCode"/>
				<xsd:element ref="FlightNumber"/>
				<xsd:element ref="ClassOfService"/>
				<xsd:element ref="Date"/>
				<xsd:element ref="Time"/>
				<xsd:element ref="DepartureCode"/>
				<xsd:element ref="ArrivalCode"/>
			</xsd:sequence>
			<xsd:attribute name="BookingDate" use="required">
				<xsd:annotation>
					<xsd:documentation>ISO format: yyyy-mm-dd</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="BookingTime" use="required">
				<xsd:annotation>
					<xsd:documentation>ISO format: hh:mm</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DepartureCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Departure airport or city code.  Example: MIA</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ArrivalCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Arrival airport or city code.  Example: NYC</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Date" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Time">
		<xsd:annotation>
			<xsd:documentation>Time in ISO 8601 format (hh:mm).  Example: 14:30</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:pattern value="([0-1][0-9]|2[0-4]):[0-5][0-9]">
					<xsd:annotation>
						<xsd:documentation>
</xsd:documentation>
					</xsd:annotation>
				</xsd:pattern>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="ServiceIDRef">
		<xsd:annotation>
			<xsd:documentation>Allows to price selected (optional) services.

Use the attribute AssociationID of the service element within this message, e.g. "S1"</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string"/>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ServiceReferences">
		<xsd:annotation>
			<xsd:documentation>This set of data values to be used instead of element number references.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="PriceRefKey" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="ServiceType">
				<xsd:annotation>
					<xsd:documentation>The ATPCO defined code for the type of service (also referred to as 'Flight/Ticket/Merchandise Byte 21)':

F = Flight (TypeValue=2)
R = Rule Buster (Type Value = 5)
T = Ticket (TypeValue=3 if EMD-S is issued, 4 if other)
M = Merchandise (TypeValue=1 if EMD-S is issued, 4 if other)</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ServiceCode">
				<xsd:annotation>
					<xsd:documentation>Additional unique ATPCO code.
Example: OC</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="SubCode">
				<xsd:annotation>
					<xsd:documentation>ATPCO RFISC (ReasonForIssuance  SubCode).
Example of RFISC: 0CC  </xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>
