<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<xsd:include schemaLocation="CommonTypes.xsd"/>
	<xsd:element name="FareQuoteRQ">
		<xsd:annotation>
			<xsd:documentation>Fare quote request root element</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="OriginDestination"/>
				<xsd:element ref="FareOptions" minOccurs="0"/>
				<xsd:element name="HistoricalPricingInfo" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Historical pricing group. Required if OriginDestination group includes past date segments.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="ReservationDateTime" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>This timestamp indetifies when PNR was created client application requests historical pricing for.</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="Date" type="Date">
											<xsd:annotation>
												<xsd:documentation>Specifies departure or arrival date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="Time" type="Time" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Departure or arrival time in ISO 8601 twenty-four hour clock format. Example: 14:00</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="TicketedDateTime">
								<xsd:annotation>
									<xsd:documentation>Historical date and (optional) time to be used for this historical quote request.

Element is NOT restricted to histroical timestamp ut to be used for any historical date/time.</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="Date" type="Date">
											<xsd:annotation>
												<xsd:documentation>Specifies departure or arrival date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="Time" type="Time" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Departure or arrival time in ISO 8601 twenty-four hour clock format. Example: 14:00</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="RecordLocator" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Record Locator 

--- future use ---</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="version" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>Version number.  Example: 1.0</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="DetailedFareType" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Controls display of more detailed fare type info (only Amadeus for now, information is not returned by all GDS):
in case this attribute is set to 'Y' more detailed fare types will be displayed in the response; default value is 'N' which results in fare types PUBL, PRIV or NEGO;
(possible values are Y, N)</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="NumberOfAlternates">
				<xsd:annotation>
					<xsd:documentation>Maximum number of options requested. The service will collect options until this number is reached or the provider returns no more options (whatever happens first). The resulting set of options will be returned to the client.
CAUTION: Depending on the value this can be a time consuming transaction!

Values are:
Either a positive integer value identifying the number of requested options or  'ALL' to retrieve all of them.</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:pattern value="\d+|ALL"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="QueryID" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Optional, alphanumeric. Used only for internal tracking purposes.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DepartureCityCode">
		<xsd:annotation>
			<xsd:documentation>Departure city code.  Example: YYZ</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="3"/>
				<xsd:maxLength value="3"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="FareOptions">
		<xsd:annotation>
			<xsd:documentation>Fare quote options group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence minOccurs="0">
				<xsd:sequence minOccurs="0">
					<xsd:element ref="AirlineCode" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>Restrict search to a specific airline/airlines specified by AirlineCode. Note: 1A will only support up to three, SITA up to five Apollo/Galileo up to 3 and Worldspan up to 5.      					</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="BookingCode" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Restrict search to the specified airline and additionally to the booking class of service specified by BookingCode.  
Example: Y</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
				<xsd:element ref="PrivateFares" minOccurs="0"/>
				<xsd:element ref="CorporateCode" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>[keeping for backward compatibility]
use "Corporate" element under "PrivateFares"</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="TicketDesignator" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Ticket designator provided here is used for fare selection.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="FareQualifier" minOccurs="0" maxOccurs="3"/>
				<xsd:element ref="Cabin" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Cabin Values are: F, C, Y, W</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="CurrencyCode" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Desired currency code.
Example: USD</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:simpleContent>
							<xsd:restriction base="CurrencyCodeType">
								<xsd:pattern value="[A-Z0-9]{3}"/>
								<xsd:attribute name="NumberOfDecimals" type="xsd:integer" use="prohibited">
									<xsd:annotation>
										<xsd:documentation>Decimal position in fare amount.  Example: 2</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
							</xsd:restriction>
						</xsd:simpleContent>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="TaxInclude" default="N" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Indicates if tax is included in the rate returned.  Values are: Y = return fares including taxes, N = return fares without taxes.  Example: N</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:enumeration value="Y"/>
							<xsd:enumeration value="N"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element name="Restrictions" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Fare Restrictions for mimimum/maximum stay, advance purchase and penalties.
NOTE: FUTURE USE. NOT SUPPORTED YET.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:attribute name="MinimumStay" use="optional" default="Y">
							<xsd:annotation>
								<xsd:documentation>Y = Allow Minimum stay with fare 
N = Don't Allow Minimum stay with fare
Default: Y</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:pattern value="Y"/>
									<xsd:pattern value="N"/>
									<xsd:enumeration value="Y"/>
									<xsd:enumeration value="N"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:attribute>
						<xsd:attribute name="MaximumStay" use="optional" default="Y">
							<xsd:annotation>
								<xsd:documentation>Y = Allow Maximum stay with fare
N = Don't Allow Maximum stay with fare
Default: Y</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:pattern value="Y"/>
									<xsd:pattern value="N"/>
									<xsd:enumeration value="Y"/>
									<xsd:enumeration value="N"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:attribute>
						<xsd:attribute name="Advance" use="optional" default="Y">
							<xsd:annotation>
								<xsd:documentation>Y = Allow Advance Purchase with fare
N = Don't Allow advance Purchase with fare
Default: Y</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:pattern value="Y"/>
									<xsd:pattern value="N"/>
									<xsd:enumeration value="Y"/>
									<xsd:enumeration value="N"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:attribute>
						<xsd:attribute name="Penalty" use="optional" default="Y">
							<xsd:annotation>
								<xsd:documentation>Y = Allow Penalties with fare 
N = Don't Allow penalties with fare
Default: Y</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:pattern value="Y"/>
									<xsd:pattern value="N"/>
									<xsd:enumeration value="Y"/>
									<xsd:enumeration value="N"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="TravelerInfo" minOccurs="0" maxOccurs="4">
					<xsd:annotation>
						<xsd:documentation>Traveler type for which fare quotes will be requested. 
</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:attribute name="Type" type="xsd:string" use="required">
							<xsd:annotation>
								<xsd:documentation>Passenger type requested for pricing.  If the passenger type sent to the GDS is not in the below predefined list, then it is passed as is to the GDS.
 Predefined values are :
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
 Example: CHD</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="TravelerIDs" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>If no PNR exists (shopping), this provides traveler types as well as FQTV information for each traveler.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="FQTVInfo" minOccurs="0" maxOccurs="unbounded">
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="FFNumber" type="xsd:string">
											<xsd:annotation>
												<xsd:documentation>Frequent flyer number.  Example: 0956301007</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="FFCompanyCode" type="xsd:string">
											<xsd:annotation>
												<xsd:documentation>Frequent flyer company code.  Example: AF</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
						<xsd:attribute name="AssociationID">
							<xsd:annotation>
								<xsd:documentation>A unique traveler reference if an association to individual travelers is needed, such as for optional services.

Example: T1</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="PaxType" type="xsd:string" use="required">
							<xsd:annotation>
								<xsd:documentation>Passenger type requested for pricing. 

Some IATA values are :
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="OriginDestination">
		<xsd:annotation>
			<xsd:documentation>Origin and Destination group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice>
					<xsd:sequence>
						<xsd:element ref="DepartureDate"/>
						<xsd:element ref="ReturnDate" minOccurs="0"/>
					</xsd:sequence>
					<xsd:element ref="DepartureDateRange"/>
				</xsd:choice>
				<xsd:element ref="DepartureCityCode"/>
				<xsd:element ref="ArrivalCityCode"/>
				<xsd:element ref="FareType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Type of fare.  Values are: PUBL = Published fares NEGO = Negotiated, 
BOTH = both public and negotiated fares.
private fares.  Example: PUBL</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="TripType" minOccurs="0"/>
				<xsd:element name="GlobalIndicator" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Global directional indicator. 
IATA Global indicators are two-letter direction codes identifying the type of routing flown based on the area/sub-area locations of the terminal points and via points of such routing.

Example: WH, AT</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:length value="2"/>
							<xsd:enumeration value="WH"/>
							<xsd:enumeration value="EH"/>
							<xsd:enumeration value="AT"/>
							<xsd:enumeration value="SA"/>
							<xsd:enumeration value="PN"/>
							<xsd:enumeration value="PA"/>
							<xsd:enumeration value="AP"/>
							<xsd:enumeration value="TS"/>
							<xsd:enumeration value="RU"/>
							<xsd:enumeration value="FE"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DepartureDate" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Departure date in ISO 8601 format.  Example: 2001-12-25
Search for fares applicaple to exactly this outbound departure date.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ReturnDate">
		<xsd:annotation>
			<xsd:documentation>Return date in ISO 8601 format.  Example: 2001-12-31
Search for fares applicaple to exactly this return travel date (and the outbound departure date ).</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:date"/>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CorporateCode">
		<xsd:annotation>
			<xsd:documentation>*** DEPRECATED ***
use "Corporate" element under "PrivateFares"</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="Office" type="xsd:string" use="required">
						<xsd:annotation>
							<xsd:documentation>Pseudo city under which private (corporate) fares have been filed.  Example: 18C6</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AirlineCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Negotiated airline code.  Example: AC</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ArrivalCityCode">
		<xsd:annotation>
			<xsd:documentation>Arrival city code.  Example: YVR</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:length value="3"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="FareType" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Type of fare.  Values are: PUBL = Published fares NEGO = Negotiated, private fares.  Example: PUBL</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="FareQualifier" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Fare qualifier.  Example: PL</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="BookingCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Booking code.  Example: BK</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Cabin">
		<xsd:annotation>
			<xsd:documentation>Cabin Values are: F, C, Y</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
				<xsd:maxLength value="1"/>
				<xsd:enumeration value="F"/>
				<xsd:enumeration value="Y"/>
				<xsd:enumeration value="C"/>
				<xsd:enumeration value="W"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="DepartureDateRange">
		<xsd:annotation>
			<xsd:documentation>Departure date range group.
Search for fares for a range of outbound departure dates.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="StartDate"/>
				<xsd:element ref="EndDate"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="StartDate" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Start date in ISO 8601 format.  Example: 2001-12-25</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="EndDate" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>End date in ISO 8601 format.  Example: 2001-12-31</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="TripType">
		<xsd:annotation>
			<xsd:documentation>Type of trip. Values are:
O = return one way fares only
R = return round trip fares only
CT = return circle trip fares only
RW = return round the world fares only
Example: O
If left out, one way and round trip fares are returned.</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
				<xsd:maxLength value="1"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="PrivateFares">
		<xsd:annotation>
			<xsd:documentation>Negotiated fares (Private Fares) group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Office" maxOccurs="unbounded"/>
				<xsd:element ref="Corporate" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element ref="PromoCodes" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Office" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Pseudo city under which private fares are stored.  Example: 1C1K</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Corporate">
		<xsd:annotation>
			<xsd:documentation>Corporate info group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirlineCode" minOccurs="0"/>
				<xsd:element ref="Account">
					<xsd:annotation>
						<xsd:documentation>Specifies the corporate account number to use to price private fares.  Example: IBM or 675124</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Contract" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PromoCodes">
		<xsd:annotation>
			<xsd:documentation>Promo Codes</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirlineCode" minOccurs="0"/>
				<xsd:element name="PromoCode">
					<xsd:annotation>
						<xsd:documentation>Code ID / Number</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Account">
		<xsd:annotation>
			<xsd:documentation>Specifies the corporate account number to use to price private fares.  Example: 12345</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string"/>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Contract" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Specifies the contract code, to use to price private fares.  Example: 00001</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
</xsd:schema>
