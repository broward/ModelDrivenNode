<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<xsd:include schemaLocation="CommonTypes.xsd"/>
	<xsd:element name="FareSearchRS">
		<xsd:annotation>
			<xsd:documentation>Fare search response root element</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="FlightPassGroup" minOccurs="0"/>
				<xsd:element ref="InfoGroup" minOccurs="0"/>
				<xsd:sequence minOccurs="0">
					<xsd:element ref="FareGroup" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:sequence>
			<xsd:attribute name="version" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>Version number.  Example: 1.0</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="QueryID" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Optional, alphanumeric. Used only for internal tracking purposes.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FareGroup">
		<xsd:annotation>
			<xsd:documentation>Fare group containing all information regarding the air fares.  It includes the type of fare, the passenger type and number in party as well as tax information and restrictions, if any.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Remark" type="FreeFormTextField" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Remark contains miscellaneous warnings as free text. Example: SPLIT PNR</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="CurrencyCode"/>
				<xsd:element ref="TravelerGroup" maxOccurs="unbounded"/>
				<xsd:element ref="OriginDestination" maxOccurs="unbounded"/>
				<xsd:element name="BaggageData" minOccurs="0" maxOccurs="unbounded">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element ref="TravelerIDRef" maxOccurs="unbounded"/>
							<xsd:element ref="SegmentIDRef" maxOccurs="unbounded"/>
							<xsd:element ref="USDOT" minOccurs="0"/>
							<xsd:element ref="Allowance"/>
							<xsd:element ref="CarryOnAllowance">
								<xsd:annotation>
									<xsd:documentation>This node is returned when carry-on baggage allowance is requested and exists for any of the selected flights, </xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="Bags" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>This node is returned when to return the bag charges</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element ref="Bag" maxOccurs="unbounded"/>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ValidatingCarrier" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Validating carrier airline code. Standard IATA 2-letter alphanumeric code.
Example: AF</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="FareType" use="required">
				<xsd:annotation>
					<xsd:documentation>Type of fare being returned.  Values are:
PUBL = published fare
NEGO = negotiated/private fare
UNDF = undefined, the type of fare is unknown
A35F = CAT35 ATPCO NEGOTIATED
CA35 = CAT35 CORPORATE ATPCO NEGOTIATED
CNFR = CORPORATE NEGOTIATED
DDFR = DYNAMIC DISCOUNT
A15F = CAT15 ATPCO PRIVATE 
CA15 = CAT15 CORPORATE ATPCO PRIVATE
CDDF = CORPORATE DYNAMIC DISCOUNT
Example: NEGO</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="4"/>
						<xsd:maxLength value="4"/>
						<xsd:enumeration value="NEGO">
							<xsd:annotation>
								<xsd:documentation>NEGOTIATED</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="PUBL">
							<xsd:annotation>
								<xsd:documentation>PUBLIC</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="UNDF">
							<xsd:annotation>
								<xsd:documentation>UNDEFINED</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="A35F">
							<xsd:annotation>
								<xsd:documentation>CAT35 ATPCO NEGOTIATED
</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="CA35">
							<xsd:annotation>
								<xsd:documentation>CAT35 CORPORATE ATPCO NEGOTIATED</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="CNFR">
							<xsd:annotation>
								<xsd:documentation>CORPORATE NEGOTIATED
</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="DDFR">
							<xsd:annotation>
								<xsd:documentation>DYNAMIC DISCOUNT</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="A15F">
							<xsd:annotation>
								<xsd:documentation>CAT15 ATPCO PRIVATE </xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="CA15">
							<xsd:annotation>
								<xsd:documentation>CAT15 CORPORATE ATPCO PRIVATE</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="CDDF">
							<xsd:annotation>
								<xsd:documentation>CORPORATE DYNAMIC DISCOUNT</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="LCCB">
							<xsd:annotation>
								<xsd:documentation>Low Cost Carrier one-way (bound) fares</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
						<xsd:enumeration value="LCCI">
							<xsd:annotation>
								<xsd:documentation>Low Cost Carrier itinerary based fares</xsd:documentation>
							</xsd:annotation>
						</xsd:enumeration>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="NetFare">
				<xsd:annotation>
					<xsd:documentation>Allowed value = "Y"

Identifies Cat35 C-Type net fare</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="FareFormat">
				<xsd:annotation>
					<xsd:documentation>Fare categories returned.  

Values are:
LCCB = One-directionally priced fares
LCCI = Itinerary/Journey priced fares

Example: LCCB</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="4"/>
						<xsd:maxLength value="4"/>
						<xsd:enumeration value="LCCB"/>
						<xsd:enumeration value="LCCI"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="TravelerCount" use="required">
				<xsd:annotation>
					<xsd:documentation>Total number of passengers of all types for the entire itinerary.  Example: 4</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:integer">
						<xsd:minInclusive value="0"/>
						<xsd:maxInclusive value="18"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="TotalPrice" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Total price for the entire itinerary for all passengers of all types.  It is the sum of all TypeTotalPrice.  Example: 320000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="TotalLowestPrice" type="xsd:integer">
				<xsd:annotation>
					<xsd:documentation>Total lowest price for all passengers of all types(TravelerGroups). It is the sum of all 'TravelerGroup/TypeTotalLowest' elements.
Example: 300000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="TotalHighestPrice" type="xsd:integer">
				<xsd:annotation>
					<xsd:documentation>Total highest price for all passengers of all types(TravelerGroups). It is the sum of all 'TravelerGroup/TypeTotalHighest' elements.
Example: 300000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute ref="Source"/>
			<xsd:attribute name="AutoExchange">
				<xsd:annotation>
					<xsd:documentation>Allowed value = "Y"

Identifies this fare as a returned solution from an auto-exchanging application such as ITA Reshop.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FareRules">
		<xsd:annotation>
			<xsd:documentation>Fare rules information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="FareInfo" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>A FareInfo element contains data related to a fare component used during pricing. Since a fare may consist of more than one fare component, a FareGroup may have more than one FareInfo element.
This data can be used for FareRulesRQ as a follow up request.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="TripMileage" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Mileage for fared itinerary 
(=sum of ComponentMileage)

Example: 6565</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Penalty" minOccurs="0"/>
				<xsd:element ref="AdvancePurchase" minOccurs="0"/>
				<xsd:element ref="AdvanceTicketing" minOccurs="0"/>
				<xsd:element ref="InstantPurchase" minOccurs="0"/>
				<xsd:element ref="Ticketless" minOccurs="0"/>
				<xsd:element ref="MinimumStay" minOccurs="0"/>
				<xsd:element ref="MaximumStay" minOccurs="0"/>
				<xsd:element ref="CorporateFares" minOccurs="0"/>
				<xsd:element ref="TicketByDate" minOccurs="0"/>
				<xsd:element ref="Remark" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="Endorsement" minOccurs="0">
					<xsd:complexType>
						<xsd:complexContent>
							<xsd:extension base="BasicEndorsement">
								<xsd:attribute name="Type" use="required">
									<xsd:annotation>
										<xsd:documentation>Identifies the creation mode of this line. Values are:
A - automatically by pricing system
</xsd:documentation>
									</xsd:annotation>
									<xsd:simpleType>
										<xsd:restriction base="xsd:string">
											<xsd:length value="1"/>
											<xsd:enumeration value="A"/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
							</xsd:extension>
						</xsd:complexContent>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="FareCalculation" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>FareCalculation Line</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:minLength value="1"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element name="TourCode" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Tour code if applicable and associated with the priced fare. Alpha-numeric.
Example: ITGF12</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:minLength value="1"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PriceRange">
		<xsd:annotation>
			<xsd:documentation>Price group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="LowestPrice" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Lowest price for one traveler of the specified passenger type reflecting the lowest price found under ".../OriinDestination/Flight/Price/@Total"
Example: 110000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="HighestPrice" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Highest price for one traveler of the specified passenger type reflecting the highest price found under ".../OriinDestination/Flight/Price/@Total"
Example: 220000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:attribute name="PriceClassName" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Label of the price group associated to this price, e.g. TANGO</xsd:documentation>
		</xsd:annotation>
	</xsd:attribute>
	<xsd:element name="PriceGroup">
		<xsd:annotation>
			<xsd:documentation>List of prices offered for this OD and flight component, e.g. 3 PriceClasses are offered:
Tango - $200.00
Tango Plus - 300.00
Executive - 450.00</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="PriceClass" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PriceClass">
		<xsd:annotation>
			<xsd:documentation>Identifies the price group associated to this price, e.g. TANGO</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Price">
					<xsd:annotation>
						<xsd:documentation>Price group</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="BaseFare">
								<xsd:annotation>
									<xsd:documentation>Base fare group</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:complexContent>
										<xsd:restriction base="BaseFareType">
											<xsd:all>
												<xsd:element ref="FiledIn" minOccurs="0"/>
												<xsd:element name="Surcharges" type="SurchargesType" minOccurs="0">
													<xsd:annotation>
														<xsd:documentation>Surcharges group</xsd:documentation>
													</xsd:annotation>
												</xsd:element>
											</xsd:all>
										</xsd:restriction>
									</xsd:complexContent>
								</xsd:complexType>
							</xsd:element>
							<xsd:element ref="Taxes"/>
						</xsd:sequence>
						<xsd:attribute name="Total" type="xsd:integer" use="required">
							<xsd:annotation>
								<xsd:documentation>Total Fare amount for one traveler of the specified passenger type.  Total price = base fare amount + taxes amount.  Example: 230000</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute ref="TypeRequested"/>
						<xsd:attribute ref="TypePriced"/>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="PriceSegment" maxOccurs="unbounded">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element ref="SegmentIDRef"/>
							<xsd:element ref="FareBasisCode"/>
							<xsd:element ref="ClassOfService"/>
							<xsd:element ref="FareRefKey"/>
							<xsd:element ref="NVA"/>
							<xsd:element ref="NVB"/>
							<xsd:element ref="BaggageAllowance"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="ExchangeInfo" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="Name">
				<xsd:annotation>
					<xsd:documentation>references to the respective PriceClass as defind in the 'PriceClassComments' element.
Sample: TANGO</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ClassOfService" use="required">
				<xsd:annotation>
					<xsd:documentation>some carriers have an actual ClassofService linked to a PriceClass.
Sample: T</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Code">
				<xsd:annotation>
					<xsd:documentation>numeric reference code to the "PriceClassComments" attribute @PriceClassCode.  
Sample: 1</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Price">
		<xsd:annotation>
			<xsd:documentation>Price group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="BaseFare" type="BaseFareType">
					<xsd:annotation>
						<xsd:documentation>Base fare group</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Taxes"/>
			</xsd:sequence>
			<xsd:attribute name="Total" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Total Fare amount for one traveler of the specified passenger type.  Total price = base fare amount + taxes amount.  Example: 230000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Taxes">
		<xsd:annotation>
			<xsd:documentation>Taxes group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Tax" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="Amount" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Total taxes amount.  Example: 30000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Tax">
		<xsd:annotation>
			<xsd:documentation>Tax break down information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Designator" minOccurs="0"/>
				<xsd:element ref="Nature" minOccurs="0"/>
				<xsd:element ref="Description" minOccurs="0"/>
				<xsd:element ref="CurrencyCode" minOccurs="0"/>
				<xsd:element name="LocalAmount" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Amount in local value</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="CollectionPoint" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>For XF and ZP taxes. 
Tax data break down for each collection point.  

The sum of individual amounts entered here must  be equal to the Amount entered in the Tax element.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element ref="CurrencyCode"/>
							<xsd:element name="AirportAmount">
								<xsd:annotation>
									<xsd:documentation>The amount actually filed by the airport in the currency applicable to the geographical location of the airport
(same as shown in FareCalculation line)</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element ref="AirportCode"/>
						</xsd:sequence>
						<xsd:attribute name="Amount" type="xsd:integer">
							<xsd:annotation>
								<xsd:documentation>Individual amount for collection point.  
Example: 2500</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Amount" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Individual tax amount.  Example: 2500</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Refundable" use="optional">
				<xsd:annotation>
					<xsd:documentation>Indicates if tax is refundable.  Values are:
Y = Tax refundable (default)
N = Tax not refundable
Example: N</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Penalty">
		<xsd:annotation>
			<xsd:documentation>Penalty group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="TicketText" minOccurs="0"/>
				<xsd:element ref="FeeApplies" minOccurs="0"/>
				<xsd:element ref="CurrencyCode" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>If present, this element specifies the currency for all penalty amounts (see Change, Cancel,...). If missing, the FareGroup/CurrencyCode element applies.

Example: USD</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Change" minOccurs="0"/>
				<xsd:element ref="Cancel" minOccurs="0"/>
				<xsd:element ref="Failure" minOccurs="0"/>
				<xsd:element ref="Replace" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="TicketRefundable" use="optional">
				<xsd:annotation>
					<xsd:documentation>Indicates if ticket is refundable or not.  Values are: Y = Ticket is refundable
N = Ticket is not refundable.  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="DepositRequired" use="optional">
				<xsd:annotation>
					<xsd:documentation>Indicates if deposit is required or not.  Values are: Y = Deposit is required
N = Deposit is not required.  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="DepositRefundable" use="optional">
				<xsd:annotation>
					<xsd:documentation>Indicates if deposit is refundable or not.  Values are: Y = Deposit is refundable
N = Deposit is not refundable.  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AdvancePurchase">
		<xsd:annotation>
			<xsd:documentation>Advance purchase  restrictions.  The type is defined by the Advance Unit attribute.  If for example this number is 3 and the unit is D, the advance purchase  restriction is 3 days.  Example: 3</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="Unit" use="required">
						<xsd:annotation>
							<xsd:documentation>Advance purchase restriction value unit.  Values are:
H = Hours
D = Days
M = Months.  Example: H</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="H"/>
								<xsd:enumeration value="D"/>
								<xsd:enumeration value="M"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
					<xsd:attribute name="Permitted" use="required">
						<xsd:annotation>
							<xsd:documentation>Advance purchase restriction permitted attribute.  Values are:
L = Latest
E = Earliest
O = On time.  Example: L</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="L"/>
								<xsd:enumeration value="E"/>
								<xsd:enumeration value="O"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="MinimumStay">
		<xsd:annotation>
			<xsd:documentation>Minimum stay requirement group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice>
				<xsd:element ref="Value"/>
				<xsd:element ref="DayOfWeek"/>
			</xsd:choice>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="MaximumStay">
		<xsd:annotation>
			<xsd:documentation>Maximum stay requirement group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice>
				<xsd:element ref="Value"/>
				<xsd:element ref="DayOfWeek"/>
			</xsd:choice>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="TicketByDate">
		<xsd:annotation>
			<xsd:documentation>Ticket by date in ISO 8601 format (yyyy-mm-dd).  Example: 2002-12-25</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:date">
					<xsd:attribute ref="Time"/>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:attribute name="Time">
		<xsd:annotation>
			<xsd:documentation>Time in ISO 8601 format.  Example: 12:35 or 19:45</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:pattern value="([0-1][0-9]|2[0-4]):[0-5][0-9]">
					<xsd:annotation>
						<xsd:documentation>
</xsd:documentation>
					</xsd:annotation>
				</xsd:pattern>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:attribute>
	<xsd:element name="Designator" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Tax or surcharge designator.  Example: US</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Nature" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Tax nature.  Example: US2</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Description" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Tax or surcharge description.  Example: US national transportation</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Cabin">
		<xsd:annotation>
			<xsd:documentation>Cabin code.  Values are:
F = First class
C = Business class
Y = Economy class
Example: Y</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
				<xsd:maxLength value="1"/>
				<xsd:enumeration value="F"/>
				<xsd:enumeration value="C"/>
				<xsd:enumeration value="Y"/>
				<xsd:enumeration value="W"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="FareBasisCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Fare basis code.  Example: Y26</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="FeeApplies">
		<xsd:annotation>
			<xsd:documentation>Fee applies group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="FailureToConfirm" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Y = Pax must confirm space
N = No confirmation required.  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Cancellation" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Y = Cancellation Fee Applies
N = No Cancel Fee.  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Carrier" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Y = Carrier Fee applies
N = No carrier fees.  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="ReplaceTicket" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Y = Replacement fee applies
N = No replacement fee.  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="ChangeItinerary" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Y = Change Itinerary fee applies
N = No change fee.  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Change">
		<xsd:annotation>
			<xsd:documentation>Change penalty group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Amount" minOccurs="0"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Cancel">
		<xsd:annotation>
			<xsd:documentation>Cancel penalty group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Amount" minOccurs="0"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Failure">
		<xsd:annotation>
			<xsd:documentation>Failure to confirm penalty group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Amount" minOccurs="0"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Replace">
		<xsd:annotation>
			<xsd:documentation>Replacement penalty group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Amount" minOccurs="0"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="OriginDestination">
		<xsd:annotation>
			<xsd:documentation>Origin and destination group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="PriceClassComments" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Description and remarks associated to a PriceClass returned in the PriceGroup element, e.g. TANGO</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Flight" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Each Flight element contains an alternative set of Segments to travel from origin to destination. 

For each OriginDestination, one of the alternative Flight elements must be chosen. Each Flight element of one OriginDestination can be freely combined with any of the Flight elements of another OriginDestination.
All Flight elements of one OriginDestination will have the same number of Segments. </xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="URLRef" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Unique URL provided by LCC for access to predefined website, e.g. http://www.aircanada.com/shared/en/aco/flights/pop_faretypes.html</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="DepartureCode" use="required">
				<xsd:annotation>
					<xsd:documentation>Departure airport or city code.  Example: JFK</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="3"/>
						<xsd:maxLength value="3"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="ArrivalCode" use="required">
				<xsd:annotation>
					<xsd:documentation>Arrival airport or city code.  Example: MIA</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="3"/>
						<xsd:maxLength value="3"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PriceClassComments">
		<xsd:annotation>
			<xsd:documentation>Description and remarks associated to a PriceClass returned in the PriceGroup element, e.g. TANGO</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Icons" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Providing service icons included in this PriceClass, e.g.

WIFI = Free WiFi 
LOUNGE = Lounge Access
PRIORITY = Priotity Boarding
BAGGAGE =
1st bag free of charge
</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Icon" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>Individual icon ID.

Example: WIFI</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:simpleContent>
										<xsd:extension base="xsd:string">
											<xsd:attribute name="Description">
												<xsd:annotation>
													<xsd:documentation>Individual Icon description.
Example: Free WiFi on plane</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
										</xsd:extension>
									</xsd:simpleContent>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="Text" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Describing the highlights of the PriceClass.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="Combinability" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Lists all price classes with which this price class is combinable</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="FareBrand" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>List of the fare brand/price class labels</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute ref="PriceClassName"/>
			<xsd:attribute name="PriceClassCode">
				<xsd:annotation>
					<xsd:documentation>can be used as a key to associate this element with respective "Price" elements (which is returned with same value in the attribute @Code)</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ColumnOrder">
				<xsd:annotation>
					<xsd:documentation>If present this value determines the sequence of the PriceClass columns</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Flight">
		<xsd:annotation>
			<xsd:documentation>Group of different flight options</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="JourneyTime" minOccurs="0"/>
				<xsd:element ref="PriceGroup" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>List of prices offered for this OD and flight component, e.g. 3 PriceClasses are offered:
Tango - $200.00
Tango Plus - 300.00
Executive - 450.00</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Segment" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="JourneyTime">
		<xsd:annotation>
			<xsd:documentation>Total journey time of the flight.  Example: 13:45</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="5"/>
				<xsd:maxLength value="5"/>
				<xsd:pattern value="[0-9][0-9]:[0-5][0-9]">
					<xsd:annotation>
						<xsd:documentation>
</xsd:documentation>
					</xsd:annotation>
				</xsd:pattern>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Segment">
		<xsd:annotation>
			<xsd:documentation>Segment information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Departure"/>
				<xsd:element ref="Arrival"/>
				<xsd:element ref="Carrier"/>
				<xsd:element ref="OperatingCarrier" minOccurs="0"/>
				<xsd:element ref="Equipment"/>
				<xsd:element ref="NumberOfStops" minOccurs="0"/>
				<xsd:element ref="StopInformation" minOccurs="0"/>
				<xsd:element ref="Meals" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Indicates what types of meals are served.  Meal codes are IATA standard.  Codes can be any combination of following codes. 

If multiple meals are served, up to 6 codes can be entered. 

Values are:
B = Breakfast
K = Continental breakfast
V = Continental breakfast
L = Lunch
D = Dinner
S = Snack or brunch
O = Cold meal
H = Hot meal
M = Meal (non-specific)
R = Refreshment
C = Alcoholic beverages complimentary
F = Food for purchase
P = Alcoholic beverages for purchase
Y = Duty free sales available
G = Light lunch

Example: 
B (single meal)
BLSP (multiple codes)</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Frequency" minOccurs="0"/>
				<xsd:element ref="FlightDuration" minOccurs="0"/>
				<xsd:element ref="OnTimeInfo" minOccurs="0"/>
				<xsd:element ref="ElectronicTicketing" minOccurs="0"/>
				<xsd:element ref="Ticketless" minOccurs="0"/>
				<xsd:element ref="InstantPurchase" minOccurs="0"/>
				<xsd:element ref="TrafficRestrictions" minOccurs="0"/>
				<xsd:element ref="LegMiles" minOccurs="0"/>
				<xsd:element ref="Classes"/>
			</xsd:sequence>
			<xsd:attribute name="ChangeOfAirport" use="required">
				<xsd:annotation>
					<xsd:documentation>Change of airport indicator. Values are: Y = there is a change of airport in the connection
N = there is no change of airport in the connection.  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"/>
						<xsd:maxLength value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="MarriedSegment" use="optional">
				<xsd:annotation>
					<xsd:documentation>Indicates if married segment.  Values are: 
B= beginning of married segments group
I = interim flight segments
E = end of married segments group
Example: B
</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"/>
						<xsd:maxLength value="1"/>
						<xsd:enumeration value="B"/>
						<xsd:enumeration value="I"/>
						<xsd:enumeration value="E"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="CnxxIndicator" use="optional">
				<xsd:annotation>
					<xsd:documentation>Connection indicator.  Example: Y = Yes, N = No</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string"/>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="SellIndicator">
				<xsd:annotation>
					<xsd:documentation>Internal sell indicator used to identify segment grouping listed in a fare search response recommendation. If present in the response must be used as-is in PNRCreateRQ request for air sell. See PNRCreateRQ/CompletePNRElements/Itinerary/Flight.

NOTE: Usage required for Amadeus MasterPricer TravelBoardSearch -  improves bookability of recommendations.</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="SecureFlight" use="optional">
				<xsd:annotation>
					<xsd:documentation>Indicates if Secure Flight data is required for this flight.  
Values:
Y = Secure flight data must be provided
N = (Default) flight does not require Secure Flight data</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="StopInformation">
		<xsd:annotation>
			<xsd:documentation>Stop information group

A Change of Gauge flight requires the @ChangeOfGauge attribte to be set to Y; it also requires to map the new equipment used from this stop forward.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirportCode"/>
				<xsd:element ref="AirportName"/>
				<xsd:element ref="ArrivalDate"/>
				<xsd:element name="ArrivalTime" type="Time">
					<xsd:annotation>
						<xsd:documentation>Stop arrival time in ISO 8601 format (hh:mm).  Example: 14:50</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="DepartureDate"/>
				<xsd:element name="DepartureTime" type="Time">
					<xsd:annotation>
						<xsd:documentation>Stop departure time in ISO 8601 format (hh:mm).  Example: 14:50</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Equipment" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>ONLY used in case of a Change of Gauge flight the equipment for the continuation of the flight is mapped here.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="ChangeOfGauge">
				<xsd:annotation>
					<xsd:documentation>Possible Value: Y

Set if the flight is a Change of Gauge flight which will also require to map the NEW equipment (for the next leg of this flight) to the "Equipment" node</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Departure">
		<xsd:annotation>
			<xsd:documentation>Segment departure group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirportCode"/>
				<xsd:element ref="AirportName"/>
				<xsd:element ref="Date"/>
				<xsd:element ref="Time"/>
				<xsd:element ref="Terminal" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Arrival">
		<xsd:annotation>
			<xsd:documentation>Segment arrival group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirportCode"/>
				<xsd:element ref="AirportName"/>
				<xsd:element ref="Date"/>
				<xsd:element ref="Time"/>
				<xsd:element ref="ChangeOfDay" minOccurs="0"/>
				<xsd:element ref="Terminal" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AirlineCode">
		<xsd:annotation>
			<xsd:documentation>Airline code.  Example: AA</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="2"/>
				<xsd:maxLength value="2"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="AirlineName" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Airline name.  Example: American Airlines</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Name" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Airplane type name.  Example: Boeing 747 series</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="NumberOfStops">
		<xsd:annotation>
			<xsd:documentation>Number of stops.  Example: 0</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:integer">
				<xsd:minInclusive value="0"/>
				<xsd:maxInclusive value="9"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Meals">
		<xsd:annotation>
			<xsd:documentation>Indicates what types of meals are served.  Meal codes are IATA standard:
B = Breakfast
K = Continental Breakfast
V = Continental Breakfast
L = Lunch
D = Dinner
S = Snack or Brunch
O = Cold Meal
H = Hot Meal
M = Meal (Non-Specific)
R = Refreshment
C = Alcoholic Beverages Complimentary
F = Food for Purchase
P = Alcoholic Beverages for Purchase
Y = Duty Free Sales Available
G = Light Lunch
 Example: B</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="B"/>
				<xsd:enumeration value="K"/>
				<xsd:enumeration value="V"/>
				<xsd:enumeration value="L"/>
				<xsd:enumeration value="D"/>
				<xsd:enumeration value="S"/>
				<xsd:enumeration value="O"/>
				<xsd:enumeration value="H"/>
				<xsd:enumeration value="M"/>
				<xsd:enumeration value="R"/>
				<xsd:enumeration value="C"/>
				<xsd:enumeration value="F"/>
				<xsd:enumeration value="P"/>
				<xsd:enumeration value="Y"/>
				<xsd:enumeration value="G"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Frequency" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>This indicates which days of the week the flight operates on- i.e. 1234567, 123, 467
1 = Monday
2 = Tuesday
3 = Wednesday
4 = Thursday
5 = Friday
6 = Saturday
7 = Sunday

Example: 13456</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="FlightDuration">
		<xsd:annotation>
			<xsd:documentation>Segment total flying time.  Example: 01:30</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:pattern value="[0-9][0-9]:[0-5][0-9]">
					<xsd:annotation>
						<xsd:documentation>
</xsd:documentation>
					</xsd:annotation>
				</xsd:pattern>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="OnTimeInfo">
		<xsd:annotation>
			<xsd:documentation>Indicates the on time performance.  Valid values are:
9 = 90-100 percent
8 = 80-89 percent
7 = 70-79 percent
6 = 60-69 percent
5 = 50-59 percent
4 = 40-49 percent
3 = 30-39 percent
2 = 20-29 percent
1 = 10-19 percent
0 = Less than 10 percent
N = New flight - no performance
U = No flight data available
X = International or city where reporting is not required.	
Example: 6</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="0"/>
				<xsd:maxLength value="1"/>
				<xsd:enumeration value="0"/>
				<xsd:enumeration value="1"/>
				<xsd:enumeration value="2"/>
				<xsd:enumeration value="3"/>
				<xsd:enumeration value="4"/>
				<xsd:enumeration value="5"/>
				<xsd:enumeration value="6"/>
				<xsd:enumeration value="7"/>
				<xsd:enumeration value="8"/>
				<xsd:enumeration value="9"/>
				<xsd:enumeration value="O"/>
				<xsd:enumeration value="N"/>
				<xsd:enumeration value="U"/>
				<xsd:enumeration value="X"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Ticketless">
		<xsd:annotation>
			<xsd:documentation>Fare can be purchased without issuing a ticket.  Values are:
Y = Ticketless purchase possible
N = Ticketless purchase not possible
Example: Y</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
				<xsd:maxLength value="1"/>
				<xsd:enumeration value="Y"/>
				<xsd:enumeration value="N"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="ElectronicTicketing">
		<xsd:annotation>
			<xsd:documentation>Electronic ticketing indicator.  Values are: Y = eticket can be issued
N = no eticket possible. 
Example: Y</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
				<xsd:maxLength value="1"/>
				<xsd:enumeration value="Y"/>
				<xsd:enumeration value="N"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="TrafficRestrictions">
		<xsd:annotation>
			<xsd:documentation>Traffic restriction information.  Valid values are:
A = No traffic permitted
B = Not for connections
C = Not for international connections
H = Restricted by market
I = Technical stop - no traffic
J = Conditional traffic
K = Connecting traffic
L = Online Connecting traffic
M = International online stopover traffic only
N = International online traffic only
O = International online connection traffic only
P = Subject to government approval
Q = International online connection or stopover traffic
R = Permanent request
S = Stopover traffic only
T = Online stopover traffic
U = International stopover traffic
V = Connection or stopover traffic
W = International connection or stopover traffic only
X = Online connection or stopover traffic only
Y = Online connections
Blank = no restrictions 
Example: X</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="0"/>
				<xsd:maxLength value="1"/>
				<xsd:enumeration value="A"/>
				<xsd:enumeration value="B"/>
				<xsd:enumeration value="C"/>
				<xsd:enumeration value="H"/>
				<xsd:enumeration value="I"/>
				<xsd:enumeration value="J"/>
				<xsd:enumeration value="K"/>
				<xsd:enumeration value="L"/>
				<xsd:enumeration value="M"/>
				<xsd:enumeration value="N"/>
				<xsd:enumeration value="O"/>
				<xsd:enumeration value="P"/>
				<xsd:enumeration value="Q"/>
				<xsd:enumeration value="R"/>
				<xsd:enumeration value="S"/>
				<xsd:enumeration value="T"/>
				<xsd:enumeration value="U"/>
				<xsd:enumeration value="V"/>
				<xsd:enumeration value="W"/>
				<xsd:enumeration value="X"/>
				<xsd:enumeration value="Y"/>
				<xsd:enumeration value=""/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="AirportCode">
		<xsd:annotation>
			<xsd:documentation>Segment departure or arrival airport code.  Example: JFK</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="3"/>
				<xsd:maxLength value="3"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="AirportName" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Segment departure or arrival airport name.  Example: John Fitzerald Kennedy</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Date" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Segment departure or arrival date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Time">
		<xsd:annotation>
			<xsd:documentation>Segment departure or arrival  time in ISO 8601 (hh:mm).  Example: 14:30</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:pattern value="([0-1][0-9]|2[0-4]):[0-5][0-9]"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Terminal" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Segment departure or arrival airport terminal.  Example: 2B</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ChangeOfDay" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Change of day information.  Example: 01</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Carrier">
		<xsd:annotation>
			<xsd:documentation>Carrier group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirlineCode"/>
				<xsd:element ref="AirlineName"/>
				<xsd:element ref="FlightNumber"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="OperatingCarrier">
		<xsd:annotation>
			<xsd:documentation>Operating carrier group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirlineCode"/>
				<xsd:element ref="AirlineName"/>
				<xsd:element ref="FlightNumber" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="BaggageAllowance" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Baggage allowance
PC = per piece
1PC = 1 piece
2PC = 2 pieces
nn = per weight (nn is the weight limit). 
Example: 2PC</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="TicketText">
		<xsd:annotation>
			<xsd:documentation>Text related to the ticket penalty.  Possible values:
AD = ticket is not refundable after departure
BD = ticket is not refundable before departure
 Example: AD</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="2"/>
				<xsd:maxLength value="2"/>
				<xsd:enumeration value="AD"/>
				<xsd:enumeration value="BD"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Remark" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Fare rules miscellaneous remarks.  Example: See pax type</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Equipment">
		<xsd:annotation>
			<xsd:documentation>Equipment group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Code"/>
				<xsd:element ref="Name"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="TravelerGroup">
		<xsd:annotation>
			<xsd:documentation>Traveler group.  Includes pricing information for all passengers of the same type. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice>
					<xsd:element ref="PriceRange"/>
					<xsd:element ref="Price"/>
				</xsd:choice>
				<xsd:element ref="FareRules" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Fare rules information group
Mandatory for ITIN pricing such as from GDS; optional for LCC prices</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="ExchangeInfo" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute ref="TypeRequested" use="required"/>
			<xsd:attribute ref="TypePriced" use="required"/>
			<xsd:attribute name="TypeCount" use="required">
				<xsd:annotation>
					<xsd:documentation>Number of travelers of the same passenger type.  Example: 2</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:integer">
						<xsd:minInclusive value="0"/>
						<xsd:maxInclusive value="9"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="TypeTotalPrice" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Total price for all passengers of the same type.  It is the result of 'Price' multiplied by TypeCount.  Example: 200000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="TypeTotalLowest" type="xsd:integer">
				<xsd:annotation>
					<xsd:documentation>Total of bottom range price for all passengers of the same type (TravelerGroup).  It is the result of ''PriceRange/LowestPrice' multiplied by TypeCount.  Example: 150000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="TypeTotalHighest" type="xsd:integer">
				<xsd:annotation>
					<xsd:documentation>Total of top range price for all passengers of the same type (TravelerGroup).  It is the result of ''PriceRange/HighestPrice' multiplied by TypeCount.  Example: 150000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="FCICode">
				<xsd:annotation>
					<xsd:documentation>0: System auto priced 
1: Agent priced 
2: System auto priced with tax exemption</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:integer">
						<xsd:enumeration value="0"/>
						<xsd:enumeration value="1"/>
						<xsd:enumeration value="2"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:attribute name="TypeRequested">
		<xsd:annotation>
			<xsd:documentation>Passenger type being requested for pricing.  If the passenger type returned is not in the below predefined list, then it is shown as is. Predefined values are: 
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string"/>
		</xsd:simpleType>
	</xsd:attribute>
	<xsd:attribute name="TypePriced" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Passenger type being priced. This type can be different from the type requested if there is no available fare for the requested type.  For example the requested type is GOV and the priced type is ADT because there is no available fare for type GOV and there is an available fare for type ADT. 
If the passenger type sent by the GDS is not the below predefined list, then it is shown as is. 
Predefined values are:
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth 
Example: ADT</xsd:documentation>
		</xsd:annotation>
	</xsd:attribute>
	<xsd:element name="FareInfo">
		<xsd:annotation>
			<xsd:documentation>Fare Information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="DepartureCode"/>
				<xsd:element ref="DepartureDate">
					<xsd:annotation>
						<xsd:documentation>Fare info departure date.  Indicates the departure date which has to be used to request the fare rules and/or a fare quote display containing this particular fare. ATTENTION: This date is not necessarily the departure date of all flights in the corresponding OriginDestination. If search by arrival (supported by MP and FareQuoteSuperBB) the departure date of the actual flight segments can differ. Example: 2002-12-25</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="ArrivalCode"/>
				<xsd:element name="RelatedSegment" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>A FareInfo element refers to one or more OriginDestination/Flight/Segment elements of the same FareGroup. It has one RelatedSegment element for each Segment element it refers to.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element ref="SegmentIDRef">
								<xsd:annotation>
									<xsd:documentation>The value of the SegmentIDRef element is the relative position of the corresponding FareGroup/OriginDestination/Flight/Segment element among a complete set of Segment elements.
An Example - 
FareGroup
  OriginDestination[1]
    Flight[1]
      Segment A (pos 1)
      Segment B (pos 2)
    Flight[2]
      Segment C (pos 1)
      Segment D (pos 2)
  OriginDestination[2]
    Flight[1]
      Segment E (pos 3)
      Segment F (pos 4)
    Flight[2]
      Segment G (pos 3)
      Segment H (pos 4)

A complete set of Segments consists of one OriginDestination[1]/Flight and one OriginDestination[2]/Flight element (as Flight elements within one OriginDestination are mutually exclusive alternative options). Therefore a SegmentIDRef value of 3 would refer to the first Segment of Flight Elements in OriginDestination[2] (E and G).</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element ref="Cabin" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Cabin code.  Values are:
F = First class
C = Business class
Y = Economy class
W = Premium Economy
Example: Y</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element ref="ClassOfService" minOccurs="0"/>
							<xsd:element ref="NVB" minOccurs="0"/>
							<xsd:element ref="NVA" minOccurs="0"/>
							<xsd:element ref="BaggageAllowance" minOccurs="0"/>
							<xsd:element name="SegmentMileage" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Mileage value for this segment

Example: 2155</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ComponentMileage" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Mileage for fare component 
(=sum of SegmentMileage)

Example: 4325</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="FareBasisCode"/>
				<xsd:element ref="FareComponent" minOccurs="0"/>
				<xsd:element ref="FareRefKey" minOccurs="0"/>
				<xsd:element name="TicketDesignator" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Ticket designator code. Example: ATM1</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:minLength value="1"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element ref="QCPCityPair" minOccurs="0"/>
				<xsd:element name="MarketName" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>value of associated/applied market name provided by pricing engine</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="MileageZone" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>value of associated/applied "Mileage" node if provided  by pricing engine</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="AirlineCode"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Value">
		<xsd:annotation>
			<xsd:documentation>Minimum or maximum stay value.  The type of value is defined by the value Unit attribute.  If for example this number is 7 and the unit is D, the minimum (or maximum) stay is 7 days. 
Example: 7</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:integer">
					<xsd:attribute name="Unit" use="required">
						<xsd:annotation>
							<xsd:documentation>Minimum or maximum stay value unit.  Possible values are:
H = Hours
D = Days
M = Months.  Example: H</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="H"/>
								<xsd:enumeration value="D"/>
								<xsd:enumeration value="M"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DayOfWeek">
		<xsd:annotation>
			<xsd:documentation>Minimum or maximum stay in days of week.  If for example this value is 1 and the attribute days is 7 this means that the minimum (or maximum) stay is 1 Sunday.  Example: 1</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:integer">
					<xsd:attribute name="Day" use="required">
						<xsd:annotation>
							<xsd:documentation>Minimum or maximum stay day of the week.  The number of days is in the element DaysOfWeek.  Possible values are:
1 = Monday
2 = Tuesday
3 = Wednesday
4 = Thursday
5 = Friday
6 = Saturday
7 = Sunday
 Example: 1 </xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:integer">
								<xsd:minInclusive value="1"/>
								<xsd:maxInclusive value="7"/>
								<xsd:enumeration value="1"/>
								<xsd:enumeration value="2"/>
								<xsd:enumeration value="3"/>
								<xsd:enumeration value="4"/>
								<xsd:enumeration value="5"/>
								<xsd:enumeration value="6"/>
								<xsd:enumeration value="7"/>
								<xsd:enumeration value="8"/>
								<xsd:enumeration value="9"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Amount">
		<xsd:annotation>
			<xsd:documentation>Penalty amount in currency amount or percentage.  Example: 7500</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:integer">
					<xsd:attribute name="Unit" use="required">
						<xsd:annotation>
							<xsd:documentation>Penalty amount unit.  Possible values are:
M = currency money value 
P = percentage.  Example: M</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="M"/>
								<xsd:enumeration value="P"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AdvanceReservation">
		<xsd:annotation>
			<xsd:documentation>Advance ticketing reservation restrictions.  The type is defined by the Unit and Permitted attributes.  If for example this number is 24 and the unit is H and the permitted is latest (value L), that means that ticketing must be at the latest 24 hours after purchase.  If permitted was on time (value O), the ticketing must be 24 hours after purchase.  Example: 24</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="Unit" use="required">
						<xsd:annotation>
							<xsd:documentation>Advance purchase ticketing restriction value unit.  Possible values are:
H = Hours
D = Days
M = Months.  Example: H</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="H"/>
								<xsd:enumeration value="D"/>
								<xsd:enumeration value="M"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
					<xsd:attribute name="Permitted" use="required">
						<xsd:annotation>
							<xsd:documentation>Advance purchase ticketing restriction permitted attribute.  Possible values are:
L = Latest
E = Earliest
O = On time.  Example: L</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="L"/>
								<xsd:enumeration value="E"/>
								<xsd:enumeration value="O"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AdvanceTicketing">
		<xsd:annotation>
			<xsd:documentation>Advance ticketing group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AdvanceReservation" minOccurs="0"/>
				<xsd:element ref="AdvanceDeparture" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AdvanceDeparture">
		<xsd:annotation>
			<xsd:documentation>Advance ticketing departure restrictions.  The type is defined by the Unit and Permitted attributes.  If for example this number is 14 and the unit is D and the permitted is latest (value L), that means that ticketing must be at the latest 14 days before the departure.  If permitted was on time (value O), the ticketing must be 14 days before departure.  Example: 14</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="Unit" use="required">
						<xsd:annotation>
							<xsd:documentation>Advance ticketing departure restriction value unit.  Possible values are:
H = Hours
D = Days
M = Months.  Example: H</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="H"/>
								<xsd:enumeration value="D"/>
								<xsd:enumeration value="M"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
					<xsd:attribute name="Permitted" use="required">
						<xsd:annotation>
							<xsd:documentation>Advance ticketing departure restriction permitted attribute.  Possible values are:
L = Latest
E = Earliest
O = On time.  Example: L</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="L"/>
								<xsd:enumeration value="E"/>
								<xsd:enumeration value="O"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DepartureDate" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Fare info departure date.  Indicates the departure date of one or more segments related to this FareInfo group.  The departure date will be returned when the FareSearch is based on departure date. Example: 2002-12-25</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ArrivalDate" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Fare info arrival date.  Indicates the arrival date of one or more flights related to this FareInfo group. The arrival date will be returned when the FareSearch is based on arrival date. For departure dates please refer to specific flight segments in this case.  Example: 2002-12-25</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="DepartureCode">
		<xsd:annotation>
			<xsd:documentation>Fare info departure code.  Indicates the departure city/airport of the segment related to that FareInfo group.  Example: MIA</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="3"/>
				<xsd:maxLength value="3"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="ArrivalCode">
		<xsd:annotation>
			<xsd:documentation>Fare info arrival code.  Indicates the arrival city/airport of the segment related to that FareInfo group.  Example: DFW</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="3"/>
				<xsd:maxLength value="3"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="QCPCityPair" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>City code directly associated with the FareBasisCode.  Example: MIANCEDL</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="LegMiles" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Number of miles for segment.  Example: 2143</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CorporateFares">
		<xsd:annotation>
			<xsd:documentation>Corporate fares group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice>
				<xsd:element ref="AccountNumber" maxOccurs="unbounded"/>
				<xsd:element ref="ContractCode" maxOccurs="unbounded"/>
			</xsd:choice>
			<xsd:attribute name="Priced" use="required">
				<xsd:annotation>
					<xsd:documentation>Indicates whether this corporate fare information was actually used to price. Possible values are 'Y' for  Yes and 'U' for Unknown (Sabre at this point doesn't return reliably whether the fare is a corporate fare or not).  Example: U</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:length value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="U"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AccountNumber" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Corporate fare account number.  Example: 000243</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ContractCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Corporate fare contract code.  Example: 00001</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="FareComponent">
		<xsd:annotation>
			<xsd:documentation>Price break-down per fare component. Not supported by all GDS/PricingEngines (1A=N; 1W=Y; 1V=Y; 1P=N; ITA=Y, SITA=N).  </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="FiledCurrencyCode" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Currency for this FareComponent may not be the same as POS Currency Code.  Example: HKD</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="FiledAmount" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Fare Amount as filed in the currency defined in FiledCurrencyCode</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="BaseFare">
					<xsd:annotation>
						<xsd:documentation>Base fare for this fare component</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Surcharges" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Surcharges break down information.</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="Surcharge" maxOccurs="unbounded">
											<xsd:annotation>
												<xsd:documentation>Individual Surcharge information.</xsd:documentation>
											</xsd:annotation>
											<xsd:complexType>
												<xsd:sequence>
													<xsd:element name="Designator">
														<xsd:annotation>
															<xsd:documentation>Surcharge designator.</xsd:documentation>
														</xsd:annotation>
														<xsd:simpleType>
															<xsd:restriction base="xsd:string">
																<xsd:minLength value="1"/>
															</xsd:restriction>
														</xsd:simpleType>
													</xsd:element>
													<xsd:element name="Description" minOccurs="0">
														<xsd:annotation>
															<xsd:documentation>Surcharge descriptions as free form text.</xsd:documentation>
														</xsd:annotation>
														<xsd:simpleType>
															<xsd:restriction base="xsd:string">
																<xsd:minLength value="1"/>
															</xsd:restriction>
														</xsd:simpleType>
													</xsd:element>
													<xsd:element ref="FiledCurrencyCode" minOccurs="0">
														<xsd:annotation>
															<xsd:documentation>Currency for this Surcharge may not be the same as POS Currency Code.  Example: HKD</xsd:documentation>
														</xsd:annotation>
													</xsd:element>
													<xsd:element ref="FiledAmount" minOccurs="0">
														<xsd:annotation>
															<xsd:documentation>Surcharge as filed in the currency defined in FiledCurrencyCode</xsd:documentation>
														</xsd:annotation>
													</xsd:element>
												</xsd:sequence>
												<xsd:attribute name="Amount" type="xsd:integer" use="required">
													<xsd:annotation>
														<xsd:documentation>Individual surcharge amount.  Example: 270</xsd:documentation>
													</xsd:annotation>
												</xsd:attribute>
											</xsd:complexType>
										</xsd:element>
									</xsd:sequence>
									<xsd:attribute name="Amount" type="xsd:integer">
										<xsd:annotation>
											<xsd:documentation>Total surcharges amount.  Example: 2000</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
						<xsd:attribute name="Amount" type="xsd:integer" use="required">
							<xsd:annotation>
								<xsd:documentation>Total component fare amount that includes surcharges (if any).  Example: 7500</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="Taxes" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="Total" type="xsd:integer">
				<xsd:annotation>
					<xsd:documentation>Total amount for this fare component.  Total = base fare amount + taxes amount.  Example: 15000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Classes">
		<xsd:annotation>
			<xsd:documentation>Flight Classes group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="ClassOfService">
					<xsd:annotation>
						<xsd:documentation>Booking class of service to be applied for this Segment when booked as part of this FareGroup.  
Example: B</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:simpleContent>
							<xsd:extension base="COSType">
								<xsd:attribute name="Status" use="required">
									<xsd:annotation>
										<xsd:documentation>Numeric status (available seats).  Values are: A = Seats are available, L = Waitlist Open for a segment, C = Waitlist closed, R = Seats on request only to airline, S = waitlist closed, 0 - 9 = number of at least available seats, 'empty' = no information.  Example: 9</xsd:documentation>
									</xsd:annotation>
									<xsd:simpleType>
										<xsd:restriction base="xsd:string">
											<xsd:enumeration value="A"/>
											<xsd:enumeration value="L"/>
											<xsd:enumeration value="C"/>
											<xsd:enumeration value="R"/>
											<xsd:enumeration value="S"/>
											<xsd:enumeration value="0"/>
											<xsd:enumeration value="1"/>
											<xsd:enumeration value="2"/>
											<xsd:enumeration value="3"/>
											<xsd:enumeration value="4"/>
											<xsd:enumeration value="5"/>
											<xsd:enumeration value="6"/>
											<xsd:enumeration value="7"/>
											<xsd:enumeration value="8"/>
											<xsd:enumeration value="9"/>
											<xsd:enumeration value=""/>
										</xsd:restriction>
									</xsd:simpleType>
								</xsd:attribute>
								<xsd:attribute ref="PriceClassName">
									<xsd:annotation>
										<xsd:documentation>Price Class associated to this CoS, e.g. TANGO</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
							</xsd:extension>
						</xsd:simpleContent>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="InstantPurchase">
		<xsd:annotation>
			<xsd:documentation>Instant Purchase indicator.  Values are:
CC = Purchase is immediately charged to CC
AP = Purchase is using AirPass credit(s)
PP = Purchase is charged via PayPal (future use)
N = not an instant purchase (default)

Example: CC</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
				<xsd:maxLength value="2"/>
				<xsd:enumeration value="CC"/>
				<xsd:enumeration value="AP"/>
				<xsd:enumeration value="PP"/>
				<xsd:enumeration value="N"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="FlightPassGroup">
		<xsd:annotation>
			<xsd:documentation>FlightPassGroup element</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="FlightPass" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>FlightPass Element(s)</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="SessionID" type="xsd:string" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>FlightPass Session token ID</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element name="FlightPassID">
								<xsd:annotation>
									<xsd:documentation>Unique FlightPass ID</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:attribute name="Owner">
										<xsd:annotation>
											<xsd:documentation>Only used for AC

FlightPass Owner ID. For AC FlightPass, Aeroplan number</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="AirlineCode">
								<xsd:annotation>
									<xsd:documentation>Airline issuing this FlightPass.

Example: AC</xsd:documentation>
								</xsd:annotation>
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:length value="3"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ExchangeInfo">
		<xsd:annotation>
			<xsd:documentation>Information returned by an Auto-Exchange application (e.g. ITA Reshop)</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="CurrencyCode"/>
				<xsd:element name="Penalty" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Penalty/Change Fee amount returned by the auto-exchange application for requested transaction</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:attribute name="Amount">
							<xsd:annotation>
								<xsd:documentation>The total fare amount including taxes of a fare alternative.</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="CommPenalty" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Commission allowed on penalty expressed as an amount</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:attribute name="Amount">
							<xsd:annotation>
								<xsd:documentation>The commission amount.</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ValueOfOldTicket" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>This is the old ticketed total fare.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:attribute name="Amount">
							<xsd:annotation>
								<xsd:documentation>The total fare amount including taxes of the old ticketed fare</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="USDOT">
		<xsd:annotation>
			<xsd:documentation>Specifies whether US DOT reservations apply. Valid values include:                      
N: Not Subject to US DOT   Reservation or Disclosure
Y: Subject to US DOT Reservation and Disclosure    D: Subject to Disclosure but not US DOT Reservation </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="Disclosure">
						<xsd:annotation>
							<xsd:documentation>Elaborates on the US DOT tag to provide a message specifying whether disclosure and/or US DOT reservations apply</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="Info">
						<xsd:annotation>
							<xsd:documentation>Gives additional information why the US DOT reservations do or do not apply (e.g. International travel to/from US)</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Allowance">
		<xsd:annotation>
			<xsd:documentation>This node is returned when baggage allowance exists for any of the selected flights, </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="MaxLengthPerPiece" minOccurs="0" maxOccurs="2">
					<xsd:complexType>
						<xsd:simpleContent>
							<xsd:extension base="xsd:decimal">
								<xsd:attribute name="Unit" type="xsd:string" use="required">
									<xsd:annotation>
										<xsd:documentation>Measurement unit
Values are:
IN
CM</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
							</xsd:extension>
						</xsd:simpleContent>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="MaxWeightPerPiece" minOccurs="0" maxOccurs="2">
					<xsd:complexType>
						<xsd:simpleContent>
							<xsd:extension base="xsd:decimal">
								<xsd:attribute name="Unit" type="xsd:string" use="required">
									<xsd:annotation>
										<xsd:documentation>Measurement unit
Values are:
KG
LBS</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
							</xsd:extension>
						</xsd:simpleContent>
					</xsd:complexType>
				</xsd:element>
				<xsd:choice>
					<xsd:element name="MaxPieces" type="xsd:integer" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Maximum Pieces allowed.  </xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="TotalWeight" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Total Weight Allowed</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:simpleContent>
								<xsd:extension base="xsd:decimal">
									<xsd:attribute name="Unit" type="xsd:string" use="required">
										<xsd:annotation>
											<xsd:documentation>Measurement unit
Values are:
KG
LBS</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
				<xsd:element name="MSCarrier" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>The carrier who governs the baggage rules for a this allowance. </xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Bag">
		<xsd:annotation>
			<xsd:documentation>Service Details</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Description" type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>Title description (Commercial Name) of offered service.
From S5. Table 196

Example: "3rd Bag Fee"</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="ServicePrice" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="Type">
				<xsd:annotation>
					<xsd:documentation>B1 = 1st Bag
B2 = 2nd Bag
C1 = 1st CarryOn
C2 = 2nd CarryOn</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CarryOnAllowance">
		<xsd:annotation>
			<xsd:documentation>This node is returned when carry-on baggage allowance exists for any of the selected flights, </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice>
					<xsd:element name="MaxPieces" type="xsd:integer" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Maximum Pieces allowed.  </xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="TotalWeight" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Total Weight Allowed</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:simpleContent>
								<xsd:extension base="xsd:decimal">
									<xsd:attribute name="Unit" type="xsd:string" use="required">
										<xsd:annotation>
											<xsd:documentation>Measurement unit
Values are:
KG
LBS</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:extension>
							</xsd:simpleContent>
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
				<xsd:element name="MaxLengthPerPiece" minOccurs="0" maxOccurs="2">
					<xsd:complexType>
						<xsd:attribute name="Unit" type="xsd:string" use="required">
							<xsd:annotation>
								<xsd:documentation>Measurement unit
Values are:
IN
CM</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="MaxWeightPerPiece" minOccurs="0" maxOccurs="2">
					<xsd:complexType>
						<xsd:attribute name="Unit" type="xsd:string" use="required">
							<xsd:annotation>
								<xsd:documentation>Measurement unit
Values are:
KG
LBS</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="MSCarrier" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>The carrier who governs the baggage rules for a this allowance. </xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ServicePrice">
		<xsd:annotation>
			<xsd:documentation>Price for this service; not to be used for 'included' options (no charge options)

This node uses the Currency/Decimals of the FareGroup root level</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="BasePrice">
					<xsd:annotation>
						<xsd:documentation>Base (net) price of Option</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:attribute name="Amount" use="required">
							<xsd:annotation>
								<xsd:documentation>Net price of option.
Example: 6750</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="Taxes" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Tax Group</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Tax" minOccurs="0" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>Tax break down information group </xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence minOccurs="0">
										<xsd:element name="Designator">
											<xsd:annotation>
												<xsd:documentation>Tax or surcharge designator.  Example: US</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="Description" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Tax or surcharge description.  Example: US national transportation</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
									<xsd:attribute name="Amount" use="required">
										<xsd:annotation>
											<xsd:documentation>Individual tax amount.  Example: 250</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="Refundable" use="optional">
										<xsd:annotation>
											<xsd:documentation>Indicates if tax is refundable.  Values are:
Y = Tax refundable (default)
N = Tax not refundable
Example: N</xsd:documentation>
										</xsd:annotation>
										<xsd:simpleType>
											<xsd:restriction base="xsd:string">
												<xsd:enumeration value="Y"/>
												<xsd:enumeration value="N"/>
											</xsd:restriction>
										</xsd:simpleType>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
						<xsd:attribute name="Amount" use="required">
							<xsd:annotation>
								<xsd:documentation>Total taxes amount.  Example: 750</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>
