<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="unqualified" attributeFormDefault="unqualified">
	<xsd:include schemaLocation="CommonTypes.xsd"/>
	<xsd:element name="AirAvailabilityRQ">
		<xsd:annotation>
			<xsd:documentation>Air availability request root element</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice>
				<xsd:sequence>
					<xsd:element ref="NbrOfAlternates" minOccurs="0"/>
					<xsd:element ref="NumberInParty" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Number of passengers. The element specifies the lower limit of available seats in a class for the class to be displayed in the response (supported only by Amadeus). Example: 1</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="OriginDestination" maxOccurs="unbounded"/>
					<xsd:element ref="DirectAccess" minOccurs="0"/>
					<xsd:element name="TravelerIDs" minOccurs="0" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>If no PNR exists (shopping), this provides traveler types as well as FQTV information for each traveler.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="FQTVInfo" minOccurs="0" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="FFNumber" type="xsd:string">
												<xsd:annotation>
													<xsd:documentation>Frequent flyer number.  Example: 0956301007</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="FFCompanyCode" type="xsd:string">
												<xsd:annotation>
													<xsd:documentation>Frequent flyer company code.  Example: AF</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
							<xsd:attribute name="AssociationID">
								<xsd:annotation>
									<xsd:documentation>A unique traveler reference if an association to individual travelers is needed, such as for optional services.

Example: T1</xsd:documentation>
								</xsd:annotation>
							</xsd:attribute>
							<xsd:attribute name="PaxType" type="xsd:string" use="required">
								<xsd:annotation>
									<xsd:documentation>Passenger type requested for pricing. 

Some IATA values are :
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
								</xsd:annotation>
							</xsd:attribute>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="Qualifiers" minOccurs="0" maxOccurs="0">
						<xsd:annotation>
							<xsd:documentation>If no PNR exists (shopping), this provides other qualifying IDs, such as Corporate IDs, etc. - see enumeration list for attribute @Type</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="Value" type="xsd:string" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>Corresponding ID to selected Type attribute.

Example: 
567124 (Corporate ID)
AAL0 (Pcc)
MIA (Point Of Sale)</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
							</xsd:sequence>
							<xsd:attribute name="AssociationID">
								<xsd:annotation>
									<xsd:documentation>A unique traveler reference if an association to individual travelers is needed, such as for optional services.

Example: T1</xsd:documentation>
								</xsd:annotation>
							</xsd:attribute>
							<xsd:attribute name="Type" use="required">
								<xsd:annotation>
									<xsd:documentation>Currently supported qualifiers:

CorporateCode
DealId
PromotionCode</xsd:documentation>
								</xsd:annotation>
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:enumeration value="CorporateCode"/>
										<xsd:enumeration value="DealId"/>
										<xsd:enumeration value="PromotionCode"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:attribute>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="SpecialAvailability" minOccurs="0" maxOccurs="0">
						<xsd:annotation>
							<xsd:documentation>DEPRECATED
*** NOTE *** Supported only by participating airlines – verify support by contacting airline.</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="FQTVInfo" maxOccurs="unbounded">
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="PaxType">
												<xsd:annotation>
													<xsd:documentation>Add the PTC type to which this Frequent Flyer data belongs.

Example: ADT</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="FFCompanyCode" type="xsd:string">
												<xsd:annotation>
													<xsd:documentation>Frequent flyer company code.  Example: AF</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="FFNumber" type="xsd:string">
												<xsd:annotation>
													<xsd:documentation>Frequent flyer number.  Example: 0956301007</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
					<xsd:element ref="JourneyControlData" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>*** NOTE *** Supported only by participating airlines – verify support by contacting airline.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="QualifierGroup" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Qualifiers</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element ref="Office" maxOccurs="unbounded"/>
								<xsd:element ref="Corporate" minOccurs="0" maxOccurs="unbounded"/>
								<xsd:element ref="PromoCodes" minOccurs="0" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>Promo Codes</xsd:documentation>
									</xsd:annotation>
								</xsd:element>
								<xsd:element name="LoyaltyPrograms" minOccurs="0" maxOccurs="unbounded">
									<xsd:annotation>
										<xsd:documentation>Loyalty Program data</xsd:documentation>
									</xsd:annotation>
									<xsd:complexType>
										<xsd:sequence>
											<xsd:element name="LoyaltyMemberID">
												<xsd:annotation>
													<xsd:documentation>Membership number </xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element name="Name">
												<xsd:annotation>
													<xsd:documentation>Individual Program name</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
											<xsd:element ref="AirlineCode">
												<xsd:annotation>
													<xsd:documentation>Airline code of the airline offering this Loyaty Program</xsd:documentation>
												</xsd:annotation>
											</xsd:element>
										</xsd:sequence>
									</xsd:complexType>
								</xsd:element>
							</xsd:sequence>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
				<xsd:element ref="MoreFlightsToken">
					<xsd:annotation>
						<xsd:documentation>Token used to request more flights following a previous air availability response.  This token number is sent back in the previous air availability response while in other cases it could contain the Y (yes) or N (no) indicator. 
If specifying this element, the behaviour is only defined if working in a sessioned environment and the preceding AirAvailabilityRQ only contained a single OriginDestination element.
Example: 124523467899 or Y</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
			<xsd:attribute name="version" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>Version number.  Example: 1.0</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ScheduleOnly" default="N">
				<xsd:annotation>
					<xsd:documentation>Schedule only indicator.  Values are: Y = get flight schedules without availability, N = get flight schedules and availability.  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Include3SegConx" type="xsd:string" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>To enable display of three segment connection, set to "Y" (possible values "Y" "N")</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="NumberOfAlternates">
				<xsd:annotation>
					<xsd:documentation>[Keeping attribute for backward compatibility] Reccommended is the use of the new optional element "NbrOfAlternates" instead.</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:pattern value="\d+|ALL"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="NumberInParty" default="1">
		<xsd:annotation>
			<xsd:documentation>Number of passengers.  Example: 1</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:integer">
				<xsd:maxInclusive value="9"/>
				<xsd:minInclusive value="0"/>
				<xsd:totalDigits value="1"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="OriginDestination">
		<xsd:annotation>
			<xsd:documentation>Origin and destination group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Departure"/>
				<xsd:element ref="Arrival"/>
				<xsd:element ref="Date">
					<xsd:annotation>
						<xsd:documentation>Specifies either arrival or departure date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Preferences" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Departure">
		<xsd:annotation>
			<xsd:documentation>Origin departure group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="CityCode"/>
				<xsd:element ref="Date" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>[keeping for backward compatibility]
Specifies departure date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="CityCode">
		<xsd:annotation>
			<xsd:documentation>Departure or arrival city code.  Example: MIA</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:maxLength value="3"/>
				<xsd:minLength value="3"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Arrival">
		<xsd:annotation>
			<xsd:documentation>Destination group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="CityCode"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Preferences">
		<xsd:annotation>
			<xsd:documentation>Preferences group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice minOccurs="0">
					<xsd:element ref="ClassOfService"/>
					<xsd:element ref="Cabin">
						<xsd:annotation>
							<xsd:documentation>Specifies cabin preference.  Valid values are : 
F = First class
C = Business class
W = Premium Economy
Y = Coach class
Example: F</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:choice>
				<xsd:sequence minOccurs="0">
					<xsd:element ref="Time"/>
					<xsd:element ref="TimeWindow" minOccurs="0"/>
				</xsd:sequence>
				<xsd:element ref="Airline" minOccurs="0"/>
				<xsd:element ref="Connection" minOccurs="0"/>
				<xsd:element ref="FlightSpecific" minOccurs="0" maxOccurs="4"/>
				<xsd:element ref="AllianceCode" minOccurs="0"/>
				<xsd:element name="AlternateDate" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Indicates if client app wants flights returned for alternatives dates if the original request date does not have any flights.
Note: Only one-day results are returned for closest day to original request date.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="BeforeDays" minOccurs="0" maxOccurs="3">
								<xsd:annotation>
									<xsd:documentation>Number of days (max 3) to search for alternate flights prior request date.
Note: Only one-day results are returned for closest day to original request date.
Example: 1</xsd:documentation>
								</xsd:annotation>
								<xsd:simpleType>
									<xsd:restriction base="xsd:integer">
										<xsd:maxInclusive value="3"/>
										<xsd:minInclusive value="0"/>
										<xsd:totalDigits value="1"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:element>
							<xsd:element name="AfterDays" minOccurs="0" maxOccurs="3">
								<xsd:annotation>
									<xsd:documentation>Number of days (max 3) to search for alternate flights after request date.
Note: Only one-day results are returned for closest day to original request date.
Example: 1</xsd:documentation>
								</xsd:annotation>
								<xsd:simpleType>
									<xsd:restriction base="xsd:integer">
										<xsd:maxInclusive value="3"/>
										<xsd:minInclusive value="0"/>
										<xsd:totalDigits value="1"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="FlightType" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="Sort" use="optional" default="NEUTRAL">
				<xsd:annotation>
					<xsd:documentation>Indicates how the response should be sorted.  Values are: 
DEPARTURE = by departure time
ARRIVAL = by arrival time
ELAPSED = by elapsed time

NEUTRAL = as defined by the provider
Example: DEPARTURE</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="DEPARTURE"/>
						<xsd:enumeration value="ARRIVAL"/>
						<xsd:enumeration value="ELAPSED"/>
						<xsd:enumeration value="NEUTRAL"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="MultiAirport" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Request multiple airport flight segments.  Values are:  Y = Yes, N = No.  Example: N</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="TimeWindow">
		<xsd:annotation>
			<xsd:documentation>Time window group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="HoursBefore" minOccurs="0"/>
				<xsd:element ref="HoursAfter" minOccurs="0"/>
				<xsd:element ref="HoursTotal" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="Type" type="xsd:string" use="optional" default="DEPARTURE">
				<xsd:annotation>
					<xsd:documentation>attribute indicates type of time window, possible values are DEPARTURE and ARRIVAL; default value is DEPARTURE</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Time">
		<xsd:annotation>
			<xsd:documentation>Time in ISO 8601 format (hh:mm).  Example: 14:30</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:pattern value="([0-1][0-9]|2[0-4]):[0-5][0-9]">
					<xsd:annotation>
						<xsd:documentation>
</xsd:documentation>
					</xsd:annotation>
				</xsd:pattern>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="HoursBefore">
		<xsd:annotation>
			<xsd:documentation>Number of hours before departure, or arrival, depending on value of Sort attribute.  Value from 01-24.  Example: 03</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:integer">
				<xsd:maxInclusive value="12"/>
				<xsd:minInclusive value="01"/>
				<xsd:totalDigits value="2"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="HoursAfter">
		<xsd:annotation>
			<xsd:documentation>Number of hours after departure, or arrival, depending on value of Sort attribute.  Value from 01-24.  Example: 02</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:integer">
				<xsd:maxInclusive value="12"/>
				<xsd:minInclusive value="01"/>
				<xsd:totalDigits value="2"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="HoursTotal">
		<xsd:annotation>
			<xsd:documentation>Specifies the total number of hours the journey is not to exceed.  Value from 01-24. Example: 11</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:integer">
				<xsd:maxInclusive value="24"/>
				<xsd:minInclusive value="01"/>
				<xsd:totalDigits value="2"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Airline">
		<xsd:annotation>
			<xsd:documentation>Airline preference group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice>
				<xsd:element name="Include" type="AirlineCodeType" maxOccurs="3">
					<xsd:annotation>
						<xsd:documentation>Airline code.  Example: AA</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="Exclude" type="AirlineCodeType" maxOccurs="3">
					<xsd:annotation>
						<xsd:documentation>Airline code.  Example: AA</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="Biased" type="AirlineCodeType">
					<xsd:annotation>
						<xsd:documentation>Airline code.  Example: AA</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Include" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Airline code for carriers to be included in the search.  Maximum 3 or ATA/IATA Airport Code to use as connection.  Example: airline code: AF, airport code: JFK</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Exclude" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Airline code for carriers to be excluded in the search.  Maximum 3 or ATA/IATA Airport Code to exclude as connection.  Example: airline code: DL, airport code: DFW</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Connection">
		<xsd:annotation>
			<xsd:documentation>Connection preference group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice>
				<xsd:element name="Include" type="AirCityCode" maxOccurs="3">
					<xsd:annotation>
						<xsd:documentation>Airpory/city code. Example: LHR</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="Exclude" type="AirCityCode" maxOccurs="2">
					<xsd:annotation>
						<xsd:documentation>Airport/City Code. Example: NYC</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FlightSpecific">
		<xsd:annotation>
			<xsd:documentation>Flight specific search criteria </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirlineCode"/>
				<xsd:element ref="FlightNumber"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AllianceCode">
		<xsd:annotation>
			<xsd:documentation>Search by alliance code.  Values are:  OW = One World, *Q = Qualifier Group,
*A = Star Alliance, *S = Sky Team.  Example: *S</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:maxLength value="2"/>
				<xsd:minLength value="2"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="AirlineCode">
		<xsd:annotation>
			<xsd:documentation>Airline code.  Example: AA</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:maxLength value="2"/>
				<xsd:minLength value="2"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="FlightType">
		<xsd:annotation>
			<xsd:documentation>Specifies the flight type preferences.  If absent, get all flights.  Maxi value in attributes means all below level are taken into account.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="NoStopDirect" use="optional" default="Y">
				<xsd:annotation>
					<xsd:documentation>Non-stop direct flights.  Values are: Y = Yes, M = Maximum.  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="M"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="StopDirect" use="optional" default="Y">
				<xsd:annotation>
					<xsd:documentation>Stop direct flights.  Values are: Y = Yes, M = Maximum.  Example: M</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="M"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="OneConnectSingleAirline" use="optional" default="Y">
				<xsd:annotation>
					<xsd:documentation>Single online connection flights.  Values are: Y = Yes, M = Maximum.  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="M"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="TwoConnectSingleAirline" use="optional" default="Y">
				<xsd:annotation>
					<xsd:documentation>Double online connection flights.  Values are: Y = Yes, M = Maximum.  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="M"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="ThreeConnectSingleAirline" use="optional" default="Y">
				<xsd:annotation>
					<xsd:documentation>Triple online connection flights.  Values are: Y = Yes, M = Maximum.  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="M"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="OneConnectMultipleAirline" use="optional" default="Y">
				<xsd:annotation>
					<xsd:documentation>Single interline connection flights.  Values are: Y = Yes, M = Maximum.  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="M"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="TwoConnectMultipleAirline" use="optional" default="Y">
				<xsd:annotation>
					<xsd:documentation>Double interline connection flights.  Values are: Y = Yes, M = Maximum.  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="M"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="ThreeConnectMultipleAirline" use="optional" default="Y">
				<xsd:annotation>
					<xsd:documentation>Triple interline connection flights.  Values are: Y = Yes, M = Maximum.  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="M"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Cabin">
		<xsd:annotation>
			<xsd:documentation>Specifies cabin preference.  Valid values are : 
F = First class
C = Business class
Y = Coach class
Example: F</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:maxLength value="1"/>
				<xsd:minLength value="1"/>
				<xsd:enumeration value="F"/>
				<xsd:enumeration value="C"/>
				<xsd:enumeration value="Y"/>
				<xsd:enumeration value="W"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="MoreFlightsToken" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Token used to request more flights following a previous air availability response.  This token number is sent back in the previous air availability response while in other cases it could contain the Y (yes) or N (no) indicator.  Example: 124523467899 or Y</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="DirectAccess">
		<xsd:annotation>
			<xsd:documentation>Direct access group information.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirlineCode"/>
				<xsd:element ref="AppendText" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AppendText" type="FreeFormTextField">
		<xsd:annotation>
			<xsd:documentation>Text to append to the direct access command.  Example: /T</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:simpleType name="AirlineCodeType">
		<xsd:annotation>
			<xsd:documentation>Basic type for elements representing airline code.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:minLength value="2"/>
			<xsd:maxLength value="3"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="AirCityCode">
		<xsd:annotation>
			<xsd:documentation>Basic type for elements representing airport/city code.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:length value="3"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:element name="JourneyControlData">
		<xsd:annotation>
			<xsd:documentation>Flights from an existing itinerary (active PNR) to allow journey control</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="JCDFlight" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="JCDFlight">
		<xsd:annotation>
			<xsd:documentation>Flight group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="JCDDeparture"/>
				<xsd:element ref="JCDArrival"/>
				<xsd:element ref="JCDDate"/>
				<xsd:element ref="Carrier"/>
				<xsd:element ref="ClassOfService"/>
				<xsd:element ref="ActionCode" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>This a standard defined action code used by different airlines and reservation systems.   
Example: HK</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="NumberOfStops" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute ref="Source"/>
			<xsd:attribute name="Type" use="optional">
				<xsd:annotation>
					<xsd:documentation>Optional flight type.  This is used to specify passive or open segments.  Values are:
P = Passive
O = Open
S = Service (passive info segment, supported on Worldspan as TVL and Amadeus as service segment).

If tyoe is set to O(Open segment) then departure date/time, arrival date/time and flight number don't have to be set.

Example: P</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="P"/>
						<xsd:enumeration value="O"/>
						<xsd:enumeration value="S"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="CnxxIndicator" use="optional">
				<xsd:annotation>
					<xsd:documentation>Connection indicator.  Example: Y = Yes, N = No</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="OriginDestinationID" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>Specifies a group of flights per origin destination. 
Example: OD1</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="MarriedSegment" use="optional">
				<xsd:annotation>
					<xsd:documentation>Married connection indicator.  Values:
B = Start of a group of married segments
I = Inside of a group of married segments
E = End of a group of married segments</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="B"/>
						<xsd:enumeration value="E"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="MarriedRef" use="optional">
				<xsd:annotation>
					<xsd:documentation>Identifies to which "married group" the segment belongs (in case of multiple married segment groups)

Example: 1</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:integer"/>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="JCDDeparture">
		<xsd:annotation>
			<xsd:documentation>Origin departure group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="CityCode"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="JCDArrival">
		<xsd:annotation>
			<xsd:documentation>Destination group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="CityCode"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="JCDDate">
		<xsd:annotation>
			<xsd:documentation>Specifies departure date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:date">
					<xsd:attribute name="Qualifier" use="optional" default="DEPARTURE">
						<xsd:annotation>
							<xsd:documentation>Specifies whether the entered date represents a departure or arrival date.

Values:
ARRIVAL, DEPARTURE (being the default)</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="DEPARTURE"/>
								<xsd:enumeration value="ARRIVAL"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ActionCode">
		<xsd:annotation>
			<xsd:documentation>Action code for the sell of a segment.  This a standard defined action code used by different airlines and reservation systems.  If omitted the default value is NN.  Example: GK</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="2"/>
				<xsd:maxLength value="2"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="NumberOfStops">
		<xsd:annotation>
			<xsd:documentation>Number of stops.  Example: 0</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:integer">
				<xsd:maxInclusive value="9"/>
				<xsd:minInclusive value="0"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Carrier">
		<xsd:annotation>
			<xsd:documentation>Flight carrier group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirlineCode"/>
				<xsd:element ref="FlightNumber"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Date">
		<xsd:annotation>
			<xsd:documentation>Specifies departure date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:date">
					<xsd:attribute name="Qualifier" use="optional" default="DEPARTURE">
						<xsd:annotation>
							<xsd:documentation>Specifies whether the entered date represents a departure or arrival date.

Values:
ARRIVAL, DEPARTURE (being the default)</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="DEPARTURE"/>
								<xsd:enumeration value="ARRIVAL"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="NbrOfAlternates">
		<xsd:annotation>
			<xsd:documentation>Maximum number of Flight elements to be returned in the response for each OriginDestination (O/D).

The service will collect flights for each O/D until this number is reached or the provider returns no more flights (whatever happens first). The resulting set of flights per O/D will be returned to the client.
CAUTION: Depending on the value this can be a time consuming transaction!

Values are:
Either a positive integer value identifying the max. number of requested flights per O/D or  'ALL' to retrieve all of them.

Example: 10</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute ref="Source"/>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Office">
		<xsd:annotation>
			<xsd:documentation>Pseudo city under which private fares are stored.  Example: 18C6</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="Provider" use="required">
						<xsd:annotation>
							<xsd:documentation>Code of the provider system that holds the private fares.  Values are:
1A = Amadeus
1B = Abacus
1V = Apollo
1G = Galileo
1S = Sabre (also 1W)
1P = Worldspan
F1 = Farelogix
1U = ITA
XS = SITA
Example: 1V</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:length value="2"/>
								<xsd:enumeration value="1A"/>
								<xsd:enumeration value="1B"/>
								<xsd:enumeration value="1V"/>
								<xsd:enumeration value="1G"/>
								<xsd:enumeration value="1S"/>
								<xsd:enumeration value="1P"/>
								<xsd:enumeration value="1W"/>
								<xsd:enumeration value="F1"/>
								<xsd:enumeration value="1U"/>
								<xsd:enumeration value="XS"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
					<xsd:attribute name="Type">
						<xsd:annotation>
							<xsd:documentation>Future use.
Identifies if Office value is a PCC or IATA agency code/ID. Default is PCC.
Example: PCC</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:enumeration value="PCC"/>
								<xsd:enumeration value="IATA"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Corporate">
		<xsd:annotation>
			<xsd:documentation>Corporate info group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirlineCode" minOccurs="0"/>
				<xsd:element ref="Account" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Specifies the corporate account number to use to price private fares.  Example: IBM or 675124</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Contract" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="PromoCodes">
		<xsd:annotation>
			<xsd:documentation>Corporate info group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AirlineCode" minOccurs="0"/>
				<xsd:element name="PromoCode">
					<xsd:annotation>
						<xsd:documentation>Code ID / Number</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Account">
		<xsd:annotation>
			<xsd:documentation>Specifies the corporate account number to use to price private fares.  Example: 12345</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string"/>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Contract" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Specifies the contract code, to use to price private fares.  Example: 00001</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
</xsd:schema>
