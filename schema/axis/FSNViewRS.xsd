<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xsd:element name="FSNViewRS">
		<xsd:annotation>
			<xsd:documentation>Subscription view.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:annotation>
					<xsd:documentation>One of the two child elements at least will be always present in the response.</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="InfoGroup" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="ForInfo" minOccurs="0" maxOccurs="unbounded">
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="Text" type="xsd:string" maxOccurs="unbounded">
											<xsd:annotation>
												<xsd:documentation>Information text</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
									<xsd:attribute name="Source" type="xsd:string">
										<xsd:annotation>
											<xsd:documentation>Identifies the source of this  element. In other words where the content originates from. Not limited to GDS, applicable to direct connect as well. Example: 1A, 1V, or other. </xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="SourceRef" type="xsd:string">
										<xsd:annotation>
											<xsd:documentation>PNR Record Locator associated to Source attribute.</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="Error" minOccurs="0" maxOccurs="unbounded">
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="Code" type="xsd:string">
											<xsd:annotation>
												<xsd:documentation>Error Code</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="Text" type="xsd:string">
											<xsd:annotation>
												<xsd:documentation>Error text</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
									<xsd:attribute name="ErrorType">
										<xsd:annotation>
											<xsd:documentation>Type of error.  Example: Air</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="Source" type="xsd:string">
										<xsd:annotation>
											<xsd:documentation>Identifies the source of this  element. In other words where the content originates from. Not limited to GDS, applicable to direct connect as well. Example: 1A, 1V, or other. </xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="SourceRef" type="xsd:string">
										<xsd:annotation>
											<xsd:documentation>PNR Record Locator associated to Source attribute.</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="RecordLocator" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Experimental. FUTURE USE.

Record locator of the PNR for wich the FSN service is being requested.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="FSNSubscription" minOccurs="0" maxOccurs="unbounded">
					<xsd:complexType>
						<xsd:complexContent>
							<xsd:extension base="FSNSubscriptionDataType">
								<xsd:sequence>
									<xsd:element name="Subscription">
										<xsd:complexType>
											<xsd:sequence>
												<xsd:element name="ConfirmationID">
													<xsd:annotation>
														<xsd:documentation>F16FC2F9</xsd:documentation>
													</xsd:annotation>
												</xsd:element>
												<xsd:element name="TransactionID" minOccurs="0">
													<xsd:annotation>
														<xsd:documentation>7529</xsd:documentation>
													</xsd:annotation>
												</xsd:element>
											</xsd:sequence>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
							</xsd:extension>
						</xsd:complexContent>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:simpleType name="FlightNumberType">
		<xsd:annotation>
			<xsd:documentation>A flight number. Flight numbers are integer values within the range of [0-9999]. Example: 1234</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:integer">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="9999"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="FlightNumberWithSuffixType">
		<xsd:annotation>
			<xsd:documentation>A flight number with optional suffix letter. Flight numbers are integer values within the range of [0,9999]. 

Example: 1234</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleContent>
			<xsd:extension base="FlightNumberType">
				<xsd:attribute name="Suffix" use="optional">
					<xsd:annotation>
						<xsd:documentation>Flight number alpha qualifier.  
Values are:
A
B
C
D

Example: A</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:enumeration value="A"/>
							<xsd:enumeration value="B"/>
							<xsd:enumeration value="C"/>
							<xsd:enumeration value="D"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:attribute>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="FSNSubscriptionDataType">
		<xsd:sequence>
			<xsd:element name="TravelerElementNumber" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Element number of traveler associated to this item.  Example: 1</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="NickName" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Subscription nickname
Example: MY TRIP TO LAX</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Departure">
				<xsd:annotation>
					<xsd:documentation>Departure point definition of the flight. Consists of the departure airport code (3-letter IATA) and departure date (YYYY-MM-DD)</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="AirportCode">
							<xsd:annotation>
								<xsd:documentation>3-letter IATA airport code.
Example: MIA</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:length value="3"/>
									<xsd:pattern value="[A-Z|0-9]{3}"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:element>
						<xsd:element name="Date" type="xsd:date">
							<xsd:annotation>
								<xsd:documentation>Departure date of the flight. format to be used: YYYY-MM-DD.
Example: 2010-12-24</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Arrival">
				<xsd:annotation>
					<xsd:documentation>Arrival point definition of the  flight.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="AirportCode">
							<xsd:annotation>
								<xsd:documentation>3-letter IATA airport code.
Example: MIA</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:length value="3"/>
									<xsd:pattern value="[A-Z|0-9]{3}"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:element>
						<xsd:element name="Date" type="xsd:date">
							<xsd:annotation>
								<xsd:documentation>Departure date of the flight. format to be used: YYYY-MM-DD.
Example: 2010-12-24</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Carrier">
				<xsd:annotation>
					<xsd:documentation>Defines airline code and the flight number for which status notofication is being requested.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="AirlineCode">
							<xsd:annotation>
								<xsd:documentation>2-letter IATA airline code.
Example: AA</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:length value="2"/>
									<xsd:pattern value="[A-Z|0-9]{2}"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:element>
						<xsd:element name="FlightNumber" type="FlightNumberWithSuffixType"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:choice>
				<xsd:element name="NotifyByText">
					<xsd:annotation>
						<xsd:documentation>Will result in a short text message (SMS) sent to the specified phone number.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Address">
								<xsd:annotation>
									<xsd:documentation>The format is phonenumber@telcosuffix

Example: 305868686@txt.att.net (AT@T)

or

3838383@vtext.com (Verizon)

Other US carrier examples:

@messaging.nextel.com - NEXTEL

@messaging.sprintpcs.com - Sprint

@tmomail.net T-Mobile
</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="NotifyByVoice">
					<xsd:annotation>
						<xsd:documentation>Will result in call or a voice message (if not answered) to the specified phone number.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="PhoneNumber"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="NotifyByEMail">
					<xsd:annotation>
						<xsd:documentation>Will result in an e-mail that will be sent to the specified e-mail address.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Address">
								<xsd:annotation>
									<xsd:documentation>e-Mail address.

Example: some.thing@there-dot.com</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="NotificationScope">
				<xsd:annotation>
					<xsd:documentation>Defines what kind of notifications are requested.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="DepartureStatus" default="Y">
							<xsd:annotation>
								<xsd:documentation>Departure information to be inlcuded in the notification messages. To request this information use the positive value.
Possible values are:
Y = provide info
N = don't povide info

Example: Y</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:length value="1"/>
									<xsd:enumeration value="Y"/>
									<xsd:enumeration value="N"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:element>
						<xsd:element name="ArrivalStatus" default="Y">
							<xsd:annotation>
								<xsd:documentation>Arrival information to be included in the notification messages. To request this information use the positive value.
Possible values are:
Y = provide info
N = don't povide info

Example: Y</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:enumeration value="Y"/>
									<xsd:enumeration value="N"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:element>
						<xsd:element name="ConnectionStatus" default="Y" minOccurs="0">
							<xsd:annotation>
								<xsd:documentation>Future Use (experimental)
Always set to "N" (or omit node) until future support is implemented

A "Y" value will be ignored at this time

Requests notification for connections status (changes) this info would be inlcuded at the arrival in a connection scenario so that must current information about connecting flight is provided in the notification.
Possible values are:
Y = provide info
N = don't povide info

Example: Y</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:enumeration value="Y"/>
									<xsd:enumeration value="N"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:element>
						<xsd:element name="GateStatus" default="Y">
							<xsd:annotation>
								<xsd:documentation>Gate information (such as gate changes) to be included in the notification messages. To request this information use the positive value.
Possible values are:
Y = provide info
N = don't povide info

Example: Y</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:enumeration value="Y"/>
									<xsd:enumeration value="N"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Schedule">
				<xsd:annotation>
					<xsd:documentation>Defines possible alternative notification timing modes that can be subscribed to.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:choice>
						<xsd:element name="Timing">
							<xsd:annotation>
								<xsd:documentation>Idenifies how far in advance the notfications selected above will be provided. Enumerated values in MINUTES. Possible values are:
30
60
120
180
240

Example: 60


</xsd:documentation>
							</xsd:annotation>
							<xsd:simpleType>
								<xsd:restriction base="xsd:integer"/>
							</xsd:simpleType>
						</xsd:element>
					</xsd:choice>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
</xsd:schema>
