<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="qualified">
	<xsd:include schemaLocation="CommonTypes.xsd"/>
	<xsd:element name="FareGroup">
		<xsd:annotation>
			<xsd:documentation>Fare group containing all information regarding the air fares.  It includes the type of fare, the passenger type and number in party as well as tax information and restrictions, if any.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="CurrencyCode"/>
				<xsd:element ref="TravelerGroup" maxOccurs="unbounded"/>
				<xsd:element name="ValidatingCarrier">
					<xsd:annotation>
						<xsd:documentation>Validating carrier airline code. Standard IATA 2-letter alphanumeric code.
Example: AF</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="FareType" use="required">
				<xsd:annotation>
					<xsd:documentation>Type of fare being returned.  Values are:
PUBL = published fare
NEGO = negotiated/private fare
CA25 = CAT25 ATPCO NEGOTIATED
CA35 = CAT35 CORPORATE ATPCO NEGOTIATED
CA15 = CAT15 CORPORATE ATPCO PRIVATE
CA19 = CAT 19-22 Fare
* = Mixed Fare Type per fare Component </xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="4"/>
						<xsd:maxLength value="4"/>
						<xsd:enumeration value="PUBL"/>
						<xsd:enumeration value="NEGO"/>
						<xsd:enumeration value="CA25"/>
						<xsd:enumeration value="CA35"/>
						<xsd:enumeration value="CA15"/>
						<xsd:enumeration value="*"/>
						<xsd:enumeration value="CA19"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="TravelerCount" use="required">
				<xsd:annotation>
					<xsd:documentation>Total number of passengers of all types for the entire itinerary.  Example: 4</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:integer">
						<xsd:minInclusive value="0"/>
						<xsd:maxInclusive value="18"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="TotalPrice" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Total price for the entire itinerary for all passengers of all types.  It is the sum of all TypeTotalPrice.  Example: 320000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="HistoricPricingDate" type="xsd:date" use="optional">
				<xsd:annotation>
					<xsd:documentation>Specifies the historic date used to price this FareGroup. Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Price">
		<xsd:annotation>
			<xsd:documentation>Price group </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="BaseFare" type="BaseFareType">
					<xsd:annotation>
						<xsd:documentation>Base fare group</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="Taxes"/>
				<xsd:element ref="ExemptedTaxes" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="Total" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Total Fare amount for the specified passenger type.  Total price = base fare amount + taxes amount.  Example: 300000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Options">
		<xsd:annotation>
			<xsd:documentation>List of all purchased/selected options (discounts and surcharges)</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Option" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Individual pricing option</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Description" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Title description of offered option - normally a one liner, e.g. "Check Baggage"</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType/>
							</xsd:element>
						</xsd:sequence>
						<xsd:attribute name="OriginDestinationID" type="xsd:string" use="optional">
							<xsd:annotation>
								<xsd:documentation>Associates this option to the applicable OriginDestination group</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="DepartureCode" use="optional">
							<xsd:annotation>
								<xsd:documentation>Origin airport code of respective flight; 
e.g. IAH</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="ArrivalCode" use="optional">
							<xsd:annotation>
								<xsd:documentation>Destination airport code of respective flight; 
e.g. IAH</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="OptionID" use="optional">
							<xsd:annotation>
								<xsd:documentation>Option unique ID. Example: div020</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="OptionName" type="xsd:string" use="optional">
							<xsd:annotation>
								<xsd:documentation>Option Name. Example : GO1_0</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="Amount" use="required">
							<xsd:annotation>
								<xsd:documentation>Amount for this option.  Currency/Decimals of FareGroup applies;
Example: 
300
1500
(this translates e.g. to $3.00 and $15.00 for USD currency)</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
						<xsd:attribute name="Type" use="required">
							<xsd:annotation>
								<xsd:documentation>Indicator if this option is a discount or a surcharge;
Values are: 
"Discount" - subtracted from fare
"Surcharge" - added to fare </xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Amount" use="required">
				<xsd:annotation>
					<xsd:documentation>Total option amount.  Example: 12000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Type" use="required">
				<xsd:annotation>
					<xsd:documentation>If sum of all option results in a negative amount then the total of all options represents a discount, otherwise the total of all options results in a surcharge.
Values are: 
"Discount" - to be subtracted from fare
"Surcharge" - to be added to fare </xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="BaseFare" type="BaseFareType">
		<xsd:annotation>
			<xsd:documentation>Base fare group</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Taxes">
		<xsd:annotation>
			<xsd:documentation>Taxes group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Tax" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="Amount" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Total taxes amount.  Example: 50000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ExemptedTaxes">
		<xsd:annotation>
			<xsd:documentation>Taxes group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Tax" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="Amount" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Total taxes amount.  Example: 50000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Tax">
		<xsd:annotation>
			<xsd:documentation>Tax break down information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Designator" minOccurs="0"/>
				<xsd:element ref="Nature" minOccurs="0"/>
				<xsd:element ref="Description" minOccurs="0"/>
				<xsd:element name="CollectionPoint" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>NOTE: this definition will eventually supercede the Calculation element. Use this  group instead of Calculation as Calculation will be deprecated in near future.

For XF and ZP taxes. 
Tax data break down for each collection point.  

The sum of individual amounts entered here must  be equal to the Amount entered in the Tax element.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element ref="AirportCode"/>
							<xsd:element name="AirportAmount">
								<xsd:annotation>
									<xsd:documentation>The amount actually filed by the airport in the currency applicable to the geographical location of the airport
(same as shown in FareCalculation line)</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
							<xsd:element ref="CurrencyCode"/>
						</xsd:sequence>
						<xsd:attribute name="Amount" type="xsd:integer">
							<xsd:annotation>
								<xsd:documentation>Individual amount for collection point.  
Example: 2500</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Amount" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Individual tax amount.  Example: 6500</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Designator">
		<xsd:annotation>
			<xsd:documentation>Tax designator.  Example: US</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string"/>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="Nature" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Tax nature.  Example: US2</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ContractCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Corporate fare contract code.  Example: 00001</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Description" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Tax description.  Example: US international transportation</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="AccountNumber" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Corporate fare account number.  Example: 000243</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="FareRules">
		<xsd:annotation>
			<xsd:documentation>Fare rules information group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="FareInfo" maxOccurs="unbounded"/>
				<xsd:element name="FareCalculation">
					<xsd:annotation>
						<xsd:documentation>FareCalculation Line</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:minLength value="1"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element name="TourCode" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Tour code if applicable and associated with the priced fare. Alpha-numeric.
Example: ITGF12</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:minLength value="1"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FareInfo">
		<xsd:annotation>
			<xsd:documentation>A FareInfo element contains data related to a fare component used during pricing. Since a fare may consist of more than one fare component, a FareGroup may have more than one FareInfo element.
This data can be used for FareRulesRQ as a follow up request.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="DepartureDate"/>
				<xsd:element ref="DepartureCode"/>
				<xsd:element ref="ArrivalCode"/>
				<xsd:element name="RelatedSegment" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>A FareInfo element refers to one or more Flight elements in the request. It has one RelatedSegment element for each Flight element it refers to.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="SegmentIDRef">
								<xsd:annotation>
									<xsd:documentation>The value of the SegmentIDRef element is the relative position of the corresponding Flight attribute associationid in request element among all Flight elements of the request in document order. Example:
A value of 3 would refer to the third Flight element in the request (irrespective of grouping into OriginDestinations).</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:simpleContent>
										<xsd:extension base="xsd:string">
											<xsd:attribute name="FlightRefKey">
												<xsd:annotation>
													<xsd:documentation>Unique ID to bind request and response, allows the UI to associate RQ and RS with an arbitrary values. If present in the RQ it must be returned in the FlightPriceRS</xsd:documentation>
												</xsd:annotation>
											</xsd:attribute>
										</xsd:extension>
									</xsd:simpleContent>
								</xsd:complexType>
							</xsd:element>
							<xsd:element ref="Cabin" minOccurs="0"/>
							<xsd:element ref="ClassOfService" minOccurs="0"/>
							<xsd:element ref="BaggageAllowance" minOccurs="0"/>
							<xsd:element name="StopOverIndicator" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Indicates if stopover is permitted w/ the fare. Uses industry values to reflect the status.  Values are X, O

When X is the value - the departure city of the segment was considered a transfer point at time of fare calculation. 
If the passenger wants to stop in that city, the fare must be recalculated; the fare may or may not permit stopovers. </xsd:documentation>
								</xsd:annotation>
								<xsd:simpleType>
									<xsd:restriction base="xsd:string">
										<xsd:length value="1"/>
										<xsd:enumeration value="X"/>
										<xsd:enumeration value="O"/>
									</xsd:restriction>
								</xsd:simpleType>
							</xsd:element>
							<xsd:element ref="DepartureDate" minOccurs="0"/>
							<xsd:element ref="DepartureCode" minOccurs="0"/>
							<xsd:element ref="ArrivalCode" minOccurs="0"/>
							<xsd:element ref="FlightNumber" minOccurs="0"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="FareBasisCode">
					<xsd:annotation>
						<xsd:documentation>Fare basis code.  
See attribute for branded fare name/price class name

Example: Y26CH</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="FareComponent" minOccurs="0"/>
				<xsd:element name="TicketDesignator" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Ticket designator code. Example: ATM1</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="AirlineCode"/>
				<xsd:element name="ATPCO" minOccurs="0">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Tarrif" minOccurs="0"/>
							<xsd:element name="Rule" minOccurs="0"/>
							<xsd:element name="Cat" minOccurs="0"/>
							<xsd:element name="FareTypeCode" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>ATPCO based fare type code</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="FareType" use="required">
				<xsd:annotation>
					<xsd:documentation>Type of fare being returned.  Values are:
PUBL = published fare
NEGO = negotiated/private fare
CA25 = CAT25 ATPCO NEGOTIATED
CA35 = CAT35 CORPORATE ATPCO NEGOTIATED
CA15 = CAT15 CORPORATE ATPCO PRIVATE
CA19 = CAT 19-22 Fare
</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="4"/>
						<xsd:maxLength value="4"/>
						<xsd:enumeration value="PUBL"/>
						<xsd:enumeration value="NEGO"/>
						<xsd:enumeration value="CA25"/>
						<xsd:enumeration value="CA35"/>
						<xsd:enumeration value="CA15"/>
						<xsd:enumeration value="CA19"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Cabin">
		<xsd:annotation>
			<xsd:documentation>Cabin code.  Possible values are:
F = First class
C = Business class
Y = Economy class
R = Premium First
J = Premium Business
P = Premium Economy
Example: Y</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:maxLength value="1"/>
				<xsd:minLength value="1"/>
				<xsd:enumeration value="F"/>
				<xsd:enumeration value="C"/>
				<xsd:enumeration value="Y"/>
				<xsd:enumeration value="R"/>
				<xsd:enumeration value="J"/>
				<xsd:enumeration value="P"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="FareBasisCode">
		<xsd:annotation>
			<xsd:documentation>Fare basis code.  
See attribute for branded fare name/price class name

Example: Y26CH</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="PriceClass">
						<xsd:annotation>
							<xsd:documentation>Name of PriceClass/Branded Fare.
Example: TANGO</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Penalty">
		<xsd:annotation>
			<xsd:documentation>Penalty group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="TicketText" minOccurs="0"/>
				<xsd:element ref="FeeApplies" minOccurs="0"/>
				<xsd:element ref="CurrencyCode" minOccurs="0"/>
				<xsd:element ref="Change" minOccurs="0"/>
				<xsd:element ref="Cancel" minOccurs="0"/>
				<xsd:element ref="Failure" minOccurs="0"/>
				<xsd:element ref="Replace" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="TicketRefundable" use="optional">
				<xsd:annotation>
					<xsd:documentation>Indicates if ticket is refundable or not.  Values are: Y = Ticket is refundable
N = Ticket is not refundable  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"/>
						<xsd:maxLength value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="DepositRequired" use="optional">
				<xsd:annotation>
					<xsd:documentation>Indicates if deposit is refundable or not.  Values are: Y = Deposit is refundable
N = Deposit is not refundable  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"/>
						<xsd:maxLength value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="DepositRefundable" use="optional">
				<xsd:annotation>
					<xsd:documentation>Y = Deposit is non refundable
N = Deposit is refundable  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"/>
						<xsd:maxLength value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Ticketless">
		<xsd:annotation>
			<xsd:documentation>Fare can be purchased without issuing a ticket.  Values are:
Y = Ticketless purchase possible
N = Ticketless purchase not possible
Example: Y</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
				<xsd:maxLength value="1"/>
				<xsd:enumeration value="Y"/>
				<xsd:enumeration value="N"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="InstantPurchase">
		<xsd:annotation>
			<xsd:documentation>Instant Purchase indicator.  Values are:
CC = Purchase is immediately charged to CC
AP = Purchase is using AirPass credit(s)
PP = Purchase is charged via PayPal (future use)
N = not an instant purchase (default)

Example: CC</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="1"/>
				<xsd:maxLength value="2"/>
				<xsd:enumeration value="CC"/>
				<xsd:enumeration value="AP"/>
				<xsd:enumeration value="PP"/>
				<xsd:enumeration value="N"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="FeeApplies">
		<xsd:annotation>
			<xsd:documentation>Fee applies group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="FailureToConfirm" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Y = Pax must confirm space
N = No confirmation required  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"/>
						<xsd:maxLength value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Cancellation" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Y = Cancellation Fee Applies
N = No Cancel Fee  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"/>
						<xsd:maxLength value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Carrier" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Y = Carrier Fee applies
N = No carrier fees  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"/>
						<xsd:maxLength value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="ReplaceTicket" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Y = Replacement fee applies
N = No replacement fee  Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"/>
						<xsd:maxLength value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="ChangeItinerary" use="optional" default="N">
				<xsd:annotation>
					<xsd:documentation>Y= Change Itinerary fee applies
N = No change fee  Example: Y </xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:minLength value="1"/>
						<xsd:maxLength value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Change">
		<xsd:annotation>
			<xsd:documentation>Change penalty group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Amount" minOccurs="0"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Cancel">
		<xsd:annotation>
			<xsd:documentation>Cancel penalty group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Amount" minOccurs="0"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Failure">
		<xsd:annotation>
			<xsd:documentation>Failure to confirm penalty group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Amount" minOccurs="0"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Replace">
		<xsd:annotation>
			<xsd:documentation>Replacement penalty group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Amount" minOccurs="0"/>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AdvancePurchase">
		<xsd:annotation>
			<xsd:documentation>Advance purchase  restrictions.  The type is defined by the Advance Unit attribute.  If for example this number is 3 and the unit is D, the advance purchase restriction is 3 days.  Example: 3</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="Unit" use="required">
						<xsd:annotation>
							<xsd:documentation>Advance purchase restriction value unit.  Possible values are:
H = Hours
D = Days
M = Months  Example: H</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="H"/>
								<xsd:enumeration value="D"/>
								<xsd:enumeration value="M"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
					<xsd:attribute name="Permitted" use="required">
						<xsd:annotation>
							<xsd:documentation>Advance purchase restriction permitted attribute.  Possible values are:
L = Latest
E = Earliest
O = On time  Example: L</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="L"/>
								<xsd:enumeration value="E"/>
								<xsd:enumeration value="O"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="MinimumStay">
		<xsd:annotation>
			<xsd:documentation>Minimum stay rules group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice>
					<xsd:element ref="Value" minOccurs="0"/>
					<xsd:element ref="DayOfWeek" minOccurs="0"/>
				</xsd:choice>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="MaximumStay">
		<xsd:annotation>
			<xsd:documentation>Maximum stay rules group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:choice>
					<xsd:element ref="Value" minOccurs="0"/>
					<xsd:element ref="DayOfWeek" minOccurs="0"/>
				</xsd:choice>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="TicketByDate">
		<xsd:annotation>
			<xsd:documentation>Ticket by date in ISO 8601 (yyyy-mm-dd) format.  Example: 2001-12-25</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:date">
					<xsd:attribute ref="Time"/>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:attribute name="Time">
		<xsd:annotation>
			<xsd:documentation>Time in ISO 8601 format.  Example: 12:35 or 19:45</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:pattern value="([0-1][0-9]|2[0-4]):[0-5][0-9]">
					<xsd:annotation>
						<xsd:documentation>
</xsd:documentation>
					</xsd:annotation>
				</xsd:pattern>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:attribute>
	<xsd:element name="BaggageAllowance" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Baggage allowance
PC = per piece
2PC = 2 pieces
nn = per weight (nn is the weight limit) 
Example: 2PC</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="CorporateFares">
		<xsd:annotation>
			<xsd:documentation>Corporate fares group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice>
				<xsd:element ref="AccountNumber" maxOccurs="unbounded"/>
				<xsd:element ref="ContractCode" maxOccurs="unbounded"/>
			</xsd:choice>
			<xsd:attribute name="Priced" use="required">
				<xsd:annotation>
					<xsd:documentation>Indicates whether this corporate fare information was actually used to price. Possible values are 'Y' for  Yes and 'U' for Unknown (Sabre at this point doesn't return reliably whether the fare is a corporate fare or not).  Example: U</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:length value="1"/>
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="U"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Remark" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Fare rules miscellaneous remarks.  Example: See fare rules</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="TicketText" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Text related to the ticket penalty.  Possible values:
AD = ticket is not refundable after departure
BD = ticket is not refundable before departure
Example: AD</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="TravelerGroup">
		<xsd:annotation>
			<xsd:documentation>Traveler group.  Includes pricing information for all passengers of the same type. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Price"/>
				<xsd:element ref="FareRules"/>
			</xsd:sequence>
			<xsd:attribute name="TypePriced" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>Passenger type being priced. This type can be different from the type requested if there is no available fare for the requested type.  For example the requested type is GOV and the priced type is ADT because there is no available fare for type GOV and there is an available fare for type ADT.  
ALL ATPCO defined PTCs are supported.  

E.g are:
ADT= Adult
CNN = Child
INF = Infant</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="TypeCount" use="required">
				<xsd:annotation>
					<xsd:documentation>Number of travelers of the same passenger type.  Example: 2</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:integer">
						<xsd:minInclusive value="0"/>
						<xsd:maxInclusive value="9"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="TypeTotalPrice" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Total price for all passengers of the same type.  It is the result of Price multiplied by TypeCount.  Example: 200000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DepartureCode">
		<xsd:annotation>
			<xsd:documentation>Departure airport or city code.  Example: MIA</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="3"/>
				<xsd:maxLength value="3"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="ArrivalCode">
		<xsd:annotation>
			<xsd:documentation>Arrival airport or city code.  Example: NYC</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="3"/>
				<xsd:maxLength value="3"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="AdvanceTicketing">
		<xsd:annotation>
			<xsd:documentation>Advance ticketing group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="AdvanceReservation" minOccurs="0"/>
				<xsd:element ref="AdvanceDeparture" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AdvanceReservation">
		<xsd:annotation>
			<xsd:documentation>Advance ticketing reservation restrictions.  The type is defined by the Unit and Permitted attributes.  If for example this number is 24 and the unit is H and the permitted is latest (value L), that means that ticketing must be at the latest 24 hours after purchase.  If permitted was on time (value O), the ticketing must be 24 hours after purchase.  Example: 24</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="Unit" use="required">
						<xsd:annotation>
							<xsd:documentation>Advance purchase ticketing restriction value unit.  Possible values are:
H = Hours
D = Days
M = Months  Example: H</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="H"/>
								<xsd:enumeration value="D"/>
								<xsd:enumeration value="M"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
					<xsd:attribute name="Permitted" use="required">
						<xsd:annotation>
							<xsd:documentation>Advance purchase ticketing restriction permitted attribute.  Possible values are:
L = Latest
E = Earliest
O = On time  Example: L</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="L"/>
								<xsd:enumeration value="E"/>
								<xsd:enumeration value="O"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AdvanceDeparture">
		<xsd:annotation>
			<xsd:documentation>Advance ticketing departure restrictions.  The type is defined by the Unit and Permitted attributes.  If for example this number is 14 and the unit is D and the permitted is latest (value L), that means that ticketing must be at the latest 14 days before the departure.  If permitted was on time (value O), the ticketing must be 14 days before departure.  Example: 14</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="Unit" use="required">
						<xsd:annotation>
							<xsd:documentation>Advance ticketing departure restriction value unit. Possible values are:
H = Hours
D = Days
M = Months  Example: H</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="H"/>
								<xsd:enumeration value="D"/>
								<xsd:enumeration value="M"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
					<xsd:attribute name="Permitted" use="required">
						<xsd:annotation>
							<xsd:documentation>Advance ticketing departure restriction permitted attribute.  Possible values are:
L = Latest
E = Earliest
O = On time  Example: L</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="L"/>
								<xsd:enumeration value="E"/>
								<xsd:enumeration value="O"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Amount">
		<xsd:annotation>
			<xsd:documentation>Penalty amount in currency amount or percentage.  Example: 7500</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:integer">
					<xsd:attribute name="Unit" use="required">
						<xsd:annotation>
							<xsd:documentation>Penalty amount unit.  Possible values are:
M = currency money value 
P = percentage  Example: M</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="M"/>
								<xsd:enumeration value="P"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Value">
		<xsd:annotation>
			<xsd:documentation>Minimum or maximum stay value. The type of value is defined by the value Unit attribute. If for example this number is 7 and the unit is D, the minimum (or maximum) stay is 7 days.  Example: 7</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:integer">
					<xsd:attribute name="Unit" use="required">
						<xsd:annotation>
							<xsd:documentation>Minimum or maximum stay value unit.  Possible values are:
H = Hours
D = Days
MM = Months  Example: H</xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:string">
								<xsd:minLength value="1"/>
								<xsd:maxLength value="1"/>
								<xsd:enumeration value="H"/>
								<xsd:enumeration value="D"/>
								<xsd:enumeration value="M"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DayOfWeek">
		<xsd:annotation>
			<xsd:documentation>Minimum or maximum stay in days of week.  If for example this value is 1 and the attribute Days is 7 this means that the minimum (or maximum) stay is 1 Sunday.  Example: 1</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:integer">
					<xsd:attribute name="Day" use="required">
						<xsd:annotation>
							<xsd:documentation>Minimum or maximum stay day of the week.  The number of days is in the element DaysOfWeek.  Possible values are:
1 = Monday
2 = Tuesday
3 = Wednesday
4 = Thursday
5 = Friday
6 = Saturday
7 = Sunday  Example: 1 </xsd:documentation>
						</xsd:annotation>
						<xsd:simpleType>
							<xsd:restriction base="xsd:integer">
								<xsd:minInclusive value="1"/>
								<xsd:maxInclusive value="7"/>
								<xsd:enumeration value="1"/>
								<xsd:enumeration value="2"/>
								<xsd:enumeration value="3"/>
								<xsd:enumeration value="4"/>
								<xsd:enumeration value="5"/>
								<xsd:enumeration value="6"/>
								<xsd:enumeration value="7"/>
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="DepartureDate" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Fare info departure date.  Indicates the departure date of the segment related to that FareInfo group.  Example: 2002-12-25</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Surcharges">
		<xsd:annotation>
			<xsd:documentation>Surcharges group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Surcharge" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="Amount" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Total surcharges amount.  Example: 2000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Surcharge">
		<xsd:annotation>
			<xsd:documentation>Surcharges break down information</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Designator"/>
				<xsd:element ref="Description" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="Amount" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Individual surcharge amount.  Example: 270</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Segment" type="xsd:integer" use="optional">
				<xsd:annotation>
					<xsd:documentation>Segment number to which the surcharge applies.  Example: 1</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="FareComponent">
		<xsd:annotation>
			<xsd:documentation>Price break-down per fare component. Not supported by all GDS/PricingEngines (1A=N; 1W=Y; 1V=Y; 1P=N; ITA=Y, SITA=N).  </xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="CurrencyCode" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Currency for this FareComponent may not be the same as POS Currency Code.  Example: HKD</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="BaseFare">
					<xsd:annotation>
						<xsd:documentation>Base fare for this fare component</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Surcharges" minOccurs="0">
								<xsd:annotation>
									<xsd:documentation>Surcharges break down information.</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="Surcharge" maxOccurs="unbounded">
											<xsd:annotation>
												<xsd:documentation>Individual Surcharge information.</xsd:documentation>
											</xsd:annotation>
											<xsd:complexType>
												<xsd:sequence>
													<xsd:element name="Designator">
														<xsd:annotation>
															<xsd:documentation>Surcharge designator.</xsd:documentation>
														</xsd:annotation>
														<xsd:simpleType>
															<xsd:restriction base="xsd:string">
																<xsd:minLength value="1"/>
															</xsd:restriction>
														</xsd:simpleType>
													</xsd:element>
													<xsd:element name="Description" minOccurs="0">
														<xsd:annotation>
															<xsd:documentation>Surcharge descriptions as free form text.</xsd:documentation>
														</xsd:annotation>
														<xsd:simpleType>
															<xsd:restriction base="xsd:string">
																<xsd:minLength value="1"/>
															</xsd:restriction>
														</xsd:simpleType>
													</xsd:element>
												</xsd:sequence>
												<xsd:attribute name="Amount" type="xsd:integer" use="required">
													<xsd:annotation>
														<xsd:documentation>Individual surcharge amount.  Example: 270</xsd:documentation>
													</xsd:annotation>
												</xsd:attribute>
											</xsd:complexType>
										</xsd:element>
									</xsd:sequence>
									<xsd:attribute name="Amount" type="xsd:integer">
										<xsd:annotation>
											<xsd:documentation>Total surcharges amount.  Example: 2000</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
						<xsd:attribute name="Amount" type="xsd:integer" use="required">
							<xsd:annotation>
								<xsd:documentation>Total component fare amount that includes surcharges (if any).  Example: 7500</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="Taxes" minOccurs="0"/>
				<xsd:element ref="ExemptedTaxes" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="Total" type="xsd:integer">
				<xsd:annotation>
					<xsd:documentation>Total amount for this fare component.  Total = base fare amount + taxes amount.  Example: 15000</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="AirportCode">
		<xsd:annotation>
			<xsd:documentation>Segment departure or arrival airport code.  Example: JFK</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:minLength value="3"/>
				<xsd:maxLength value="3"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="UpsellOptions">
		<xsd:annotation>
			<xsd:documentation>List of all applicable pricing options (discounts and surcharges)</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="UpsellOption" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Individual upsell option</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Description">
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="ExistingDescription" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Usually contains a header reflecting current Priceclass, e.g. "Your TANGO fare includes"</xsd:documentation>
											</xsd:annotation>
											<xsd:complexType>
												<xsd:sequence>
													<xsd:element name="Text" maxOccurs="unbounded"/>
												</xsd:sequence>
											</xsd:complexType>
										</xsd:element>
										<xsd:element name="UpsellDescription" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Usually contains a header reflecting the upsell Priceclass, e.g. "Move up to TANGO PLUS"</xsd:documentation>
											</xsd:annotation>
											<xsd:complexType>
												<xsd:sequence>
													<xsd:element name="Text" maxOccurs="unbounded"/>
												</xsd:sequence>
											</xsd:complexType>
										</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="UpsellFeatures">
								<xsd:complexType>
									<xsd:sequence>
										<xsd:element name="UpsellFeature" maxOccurs="unbounded">
											<xsd:complexType>
												<xsd:sequence>
													<xsd:element name="DescriptionDetails" minOccurs="0">
														<xsd:annotation>
															<xsd:documentation>Detailed description of this option</xsd:documentation>
														</xsd:annotation>
														<xsd:complexType>
															<xsd:sequence>
																<xsd:element name="Text" maxOccurs="unbounded"/>
															</xsd:sequence>
														</xsd:complexType>
													</xsd:element>
													<xsd:element name="ExistingDetails">
														<xsd:annotation>
															<xsd:documentation>Used to describe current option</xsd:documentation>
														</xsd:annotation>
														<xsd:complexType>
															<xsd:sequence>
																<xsd:element name="Text" maxOccurs="unbounded"/>
															</xsd:sequence>
														</xsd:complexType>
													</xsd:element>
												</xsd:sequence>
											</xsd:complexType>
										</xsd:element>
									</xsd:sequence>
								</xsd:complexType>
							</xsd:element>
							<xsd:element name="OptionRefKey" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>A reference key previously assigned to an offered option or upsell may be passed thru to purchase such option.</xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:attribute name="Description"/>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="ServicePrice">
		<xsd:annotation>
			<xsd:documentation>Price for this service; not to be used for 'included' options (no charge options)

This node uses the Currency/Decimals of the FareGroup root level</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="BasePrice">
					<xsd:annotation>
						<xsd:documentation>Base (net) price of Option</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:attribute name="Amount" use="required">
							<xsd:annotation>
								<xsd:documentation>Net price of option.
Example: 6750</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="Taxes" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Tax Group</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Tax" minOccurs="0" maxOccurs="unbounded">
								<xsd:annotation>
									<xsd:documentation>Tax break down information group </xsd:documentation>
								</xsd:annotation>
								<xsd:complexType>
									<xsd:sequence minOccurs="0">
										<xsd:element name="Designator">
											<xsd:annotation>
												<xsd:documentation>Tax or surcharge designator.  Example: US</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
										<xsd:element name="Description" minOccurs="0">
											<xsd:annotation>
												<xsd:documentation>Tax or surcharge description.  Example: US national transportation</xsd:documentation>
											</xsd:annotation>
										</xsd:element>
									</xsd:sequence>
									<xsd:attribute name="Amount" use="required">
										<xsd:annotation>
											<xsd:documentation>Individual tax amount.  Example: 250</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:complexType>
							</xsd:element>
						</xsd:sequence>
						<xsd:attribute name="Amount" use="required">
							<xsd:annotation>
								<xsd:documentation>Total taxes amount.  Example: 750</xsd:documentation>
							</xsd:annotation>
						</xsd:attribute>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:attribute name="Total" type="xsd:integer" use="required">
				<xsd:annotation>
					<xsd:documentation>Total amount for this service based on FQTV status and chosen Price Class.

Total = base price +  total amount of taxes.

Example: 7500</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Service">
		<xsd:annotation>
			<xsd:documentation>Service Details</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="SegmentIDRef" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>For a flight related service, this is the value of the SegmentIDRef element is the flight/segment position of the corresponding OriginDestination groups in document order.

Mandatory only for flight related/associated services.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:simpleContent>
							<xsd:extension base="xsd:string"/>
						</xsd:simpleContent>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="TravelerIDRef" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>If available in the FlightPriceRQ, this unique traveler ID will be returned to identify the traveler associated with this option.

Example: T1</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="ServiceLocation" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Optionally used for non-flight related services, such as airline lounge pass, pre-paid booklets for drinks/meals or WiFi.

This is the 3-letter IATA city- or airport code related to the service.  For example, an airport lounge pass may only be valid for one location.

Example: DFW</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="ServiceDate" minOccurs="0"/>
				<xsd:element name="Description">
					<xsd:annotation>
						<xsd:documentation>Title description (Commercial Name) of offered service.

Example: "3rd Bag Fee"

UI tip: You may build a one line description to display by stringing the following values together:
"Description"+"ServiceLocation"+"ServiceDate"+"DescriptionVariable" which could be displayed as sampled here:

'Airline Lounge Pass DFW 10May'
where 'Airline Lounge Pass' is the "Description", 'DFW' the "ServiceLocation" and '10May' the "ServiceDate"

or
Premium Seat 9D

where 'Premium Seat' is the "Description" and '9D' the "DescriptionVariable"

</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="DescriptionVariable" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>This value is used to provide a variable value for an selected service.

Sample: for a Premium Seat this will be a seat number; for a annual pass of onboard WiFi this will be the credentials, etc.  

Examples:
"9D"
"UID: GO8978 PW: 1234"</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="DescriptionDetails" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Detailed description of this service</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Text" maxOccurs="unbounded"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="Amount" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Price for this option (or option differential in case of upsell).

This node is a string showing the value with decimal point (not linked to a currency code)

Sample:  25.50</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="ServicePrice" minOccurs="0"/>
				<xsd:element ref="TicketByDate" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Date (in ISO 8601 format: (yyyy-mm-dd) by which this service must be issued.

Example: 2010-05-07</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="InstantPurchase" minOccurs="0"/>
				<xsd:element ref="Penalties" minOccurs="0"/>
				<xsd:element name="Commission" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Commission amount or percentage for this option</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:complexContent>
							<xsd:extension base="CommissionType"/>
						</xsd:complexContent>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="Endorsement" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Endorsements for this service.

Example: NONREF</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element ref="Text">
								<xsd:annotation>
									<xsd:documentation>Freeflow text.</xsd:documentation>
								</xsd:annotation>
							</xsd:element>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="ValidatingCarrier" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Allows to override the Validating Carrier assigned to the entire FareGroup</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="ReferenceKey" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Unique reference key. If present in pricing response messages, must be included.</xsd:documentation>
					</xsd:annotation>
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:minLength value="1"/>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:element>
				<xsd:element ref="Attributes" minOccurs="0"/>
				<xsd:element ref="BookingInstructions" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute ref="Source" use="required"/>
			<xsd:attribute name="Method" use="required">
				<xsd:annotation>
					<xsd:documentation>Values are:

F = FareIntegrated
EA = EMD Associated
ES = EMD Standalone 
MA = Flight Associated but settled via MCO
MS = Standalone but settle via MCO
D = DirectSettlement</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="F"/>
						<xsd:enumeration value="EA"/>
						<xsd:enumeration value="MA"/>
						<xsd:enumeration value="ES"/>
						<xsd:enumeration value="MS"/>
						<xsd:enumeration value="D"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="Airline">
				<xsd:annotation>
					<xsd:documentation>This is the airline code of the Marketing carrier, the carrier actually offering the service.
</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="TypeValue">
				<xsd:annotation>
					<xsd:documentation>EMD Type Value as defined by ATPCO

1 = Standalone
2 = Associated to a flight
3 = Standalone associated to  a ticket (but not flight)
4 = no EMD, carrier directed type
5 = E-Ticket </xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="SaleStatus">
				<xsd:annotation>
					<xsd:documentation>Allowed Values:

"Issued"
"Booked"

"Issued" represents those services which have been issued and have a valid EMDInfo node

"Booked" represent items sold/booked but not yet issued

Values are returned in the response</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ServiceType">
				<xsd:annotation>
					<xsd:documentation>The ATPCO defined code for the type of service (also referred to as 'Flight/Ticket/Merchandise Byte 21)':

F = Flight (TypeValue=2)
R = Rule Buster (Type Value = 5)
T = Ticket (TypeValue=3 if EMD-S is issued, 4 if other)
M = Merchandise (TypeValue=1 if EMD-S is issued, 4 if other)</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ReasonCode" use="required">
				<xsd:annotation>
					<xsd:documentation>IATA RFIC (ReasonFor IssuanceCode, a 1-character main code)
Example of RFIC: A  

Note: Only services of same RFIC code can be combined on an EMD-A document.  For example, if there are services of RFIC code "A" and "B", two separate EMD documents are needed, issuing all services of "A" and "B" on seperate docs.</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="SubCode" use="required">
				<xsd:annotation>
					<xsd:documentation>ATPCO RFIS (ReasonForIssuance  Subcode).
Example of RFIS: 0CC  </xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ServiceCode">
				<xsd:annotation>
					<xsd:documentation>Additional unique ATPCO code.
Example: OC</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="FareBrand">
				<xsd:annotation>
					<xsd:documentation>Service is part of a bundle associated to this fare brand</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Status">
				<xsd:annotation>
					<xsd:documentation>Values are:
NN = "Requested"
HK = "Confirmed"</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="NN"/>
						<xsd:enumeration value="HK"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="DealID">
				<xsd:annotation>
					<xsd:documentation>This ID represents an airline  promotion for a special target market and applies only for FQTV numbers identified for this promotion</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Type" use="required">
				<xsd:annotation>
					<xsd:documentation>Indicator if this option is a discount or a surcharge;

Values are: 
"Discount"  1)
"Surcharge"
"Included"  2)
"Not applicable" 3)

1) only applicable when using methof F, applying option directly to a fare (not used in an EMD solution)

2) This item is free of charge due to FQTV status or chosen Price Class

3) This item is not available/applicable due to FQTV status or chosen Price Class.

Sample:  Earning extra miles may only be allowed for a Top tier FQTV status and is not applicable for any other traveler.</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Discount"/>
						<xsd:enumeration value="Surcharge"/>
						<xsd:enumeration value="Included"/>
						<xsd:enumeration value="Not applicable"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
			<xsd:attribute name="FQTVAirline">
				<xsd:annotation>
					<xsd:documentation>The 2-character airline code of the Frequent Flyer membership

Example: AA</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="FQTVStatus">
				<xsd:annotation>
					<xsd:documentation>The status (tier level) of the traveler's FQTV account.

This is available as a query results against the airline's FQTV database.

Samples:
AA(American AAdvantage):
-- Gold
-- Platinum
-- Executive Platinum

LH (Miles and More):
-- Frequent Traveller
-- Senator
-- HON Circle

EK (Emirates Skywards):
-- Silver
-- Gold</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="FQTVNumber">
				<xsd:annotation>
					<xsd:documentation>This is the actual FrequentFlyer number associated to the FQTVStatus.  This will allow the POS GUI to associate the actual traveler with the respective option/price</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="NotValidBefore" type="xsd:date" use="optional">
				<xsd:annotation>
					<xsd:documentation>Option is not available/usable until the date entered</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="NotValidAfter" type="xsd:date" use="optional">
				<xsd:annotation>
					<xsd:documentation>Option is not available/usable after the date entered</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Slice">
				<xsd:annotation>
					<xsd:documentation>In case of a "Change Of Gauge" flight, this determines to which slice of the flight the option belongs.

Default = 0 (or absence)

Example:
YY 465 SFO FRA with change of gauge in ORD

Slice 0 = SFO to ORD
Slice 1 = ORD to FRA</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="Icon">
				<xsd:annotation>
					<xsd:documentation>An icon will be used by the UI to retrieve respective icon image.

Example: MEALS</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="CanDeselect">
				<xsd:annotation>
					<xsd:documentation>Any service tagged with a "Y" setting here can be deslected.  This attribute is set by the merchandizing engine for services which are  typically included in a Price Class or CoS but may not be desired by the traveler, e.g. Premium Drinks on the flight.

Allowed value: "Y"</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="DisplayPriority">
				<xsd:annotation>
					<xsd:documentation>Allowed values:
P=Primary display (default)
S=Secondary display

Allows the GUI to display this service in a primary or secondary display.  Desired e.g. for special chargeable services such as
"Pet Fee"
"Bike Fee"
"Unaccompanied Minor"

Example: S</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="MaxQuantity">
				<xsd:annotation>
					<xsd:documentation>Will determine what the maximum number can be for the Quantity.  This attribute is only used when more than a single item/service can be ordered.

Possible Values: 
2-99

Example: 5</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="ProviderIDRef">
				<xsd:annotation>
					<xsd:documentation>Allows to associate this service to a unique provider tag/id/ref</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Attributes">
		<xsd:annotation>
			<xsd:documentation>ATPCO S5 record attributes</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Group">
					<xsd:annotation>
						<xsd:documentation>Samples:
BG = Baggage
FF = Frequent Flyer
GT = Ground Transportation
         and Non Air Services
IE = In-flight entertainment
LG = Lounge
MD = Medical
ML = Meal/Beverage
PT = Pets
RO = Rule Override
SA = Prereserved Seat
         Assignment
SB = Standby
ST = Store
TS = Travel Services
UN = Unaccompanied
         Travel (Escort)
UP = Upgrades</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Code"/>
							<xsd:element name="Text" minOccurs="0"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="SubGroup">
					<xsd:annotation>
						<xsd:documentation>Samples for group "BG"
CT = Container
PP = Pre-paid excess
         baggage

Samples group "GT"
BU = Bus
LI = Limo, etc

Samples group "IE"
IT = Internet access
TV = Television, etc</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Code"/>
							<xsd:element name="Text" minOccurs="0"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="Desc1">
					<xsd:annotation>
						<xsd:documentation>Description codes.
Examples:
05 = up to 5 kg
1Y = One Year
AI = Aisle
B1 = First Bag
etc.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Code"/>
							<xsd:element name="Text" minOccurs="0"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="Desc2" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Description codes.
Examples:
HT = Hot
KO = Kosher
etc.</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="Code"/>
							<xsd:element name="Text" minOccurs="0"/>
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="BookingInstructions">
		<xsd:annotation>
			<xsd:documentation>Contains instructions how to book this service with respective source</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="SSRCode" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="OSIText" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="Method" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Allowed Values are:
SSR
API
OSI</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="UpgradeMethod" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Allowed Values:
A = AutoUpgrade
S = SSR request</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:simpleContent>
							<xsd:extension base="xsd:string">
								<xsd:attribute name="NewClass">
									<xsd:annotation>
										<xsd:documentation>Instructs which new class to book</xsd:documentation>
									</xsd:annotation>
								</xsd:attribute>
							</xsd:extension>
						</xsd:simpleContent>
					</xsd:complexType>
				</xsd:element>
				<xsd:element ref="Text" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Any freeflow to instruct DC</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="SSRCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Special service request code.  IATA standard.  Example: VGML</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="ServiceDate" type="xsd:date">
		<xsd:annotation>
			<xsd:documentation>Date of service in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="Penalties">
		<xsd:annotation>
			<xsd:documentation>Option Penalty group</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="Change" minOccurs="0"/>
				<xsd:element ref="Cancel" minOccurs="0"/>
			</xsd:sequence>
			<xsd:attribute name="Refundable" use="optional">
				<xsd:annotation>
					<xsd:documentation>Indicates if option is refundable.  Values are:
Y = Option refundable
N = Option not refundable
Example: Y</xsd:documentation>
				</xsd:annotation>
				<xsd:simpleType>
					<xsd:restriction base="xsd:string">
						<xsd:enumeration value="Y"/>
						<xsd:enumeration value="N"/>
					</xsd:restriction>
				</xsd:simpleType>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="Meals">
		<xsd:annotation>
			<xsd:documentation>Indicates what types of meals are served.  Meal codes are IATA standard.  Values are:
B = Breakfast
K = Continental breakfast
V = Continental breakfast
L = Lunch
D = Dinner
S = Snack or brunch
O = Cold meal
H = Hot meal 
M = Meal (non-specific)
R = Refreshment
C = Alcoholic beverages complimentary
F = Food for purchase
P = Alcoholic beverages for purchase
Y = Duty free sales available
G = Light lunch
Example: B</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleType>
			<xsd:restriction base="xsd:string">
				<xsd:enumeration value="B"/>
				<xsd:enumeration value="K"/>
				<xsd:enumeration value="V"/>
				<xsd:enumeration value="L"/>
				<xsd:enumeration value="D"/>
				<xsd:enumeration value="S"/>
				<xsd:enumeration value="O"/>
				<xsd:enumeration value="H"/>
				<xsd:enumeration value="M"/>
				<xsd:enumeration value="R"/>
				<xsd:enumeration value="C"/>
				<xsd:enumeration value="F"/>
				<xsd:enumeration value="P"/>
				<xsd:enumeration value="Y"/>
				<xsd:enumeration value="G"/>
			</xsd:restriction>
		</xsd:simpleType>
	</xsd:element>
	<xsd:element name="AirlineCode" type="xsd:string">
		<xsd:annotation>
			<xsd:documentation>Airline code.  Example: AA</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
</xsd:schema>
